// Auto-generated from menu-account.html.
// DO NOT EDIT.

library accountComponent;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'package:web_ui/web_ui.dart';
import '../page/show-account.dart';
import '../../controller.dart';



/** Die Klasse ist das Model zu einem Accountitem in der SideBar **/
class MenuAccount extends WebComponent with Observable  {
  /** Autogenerated from the template. */

  autogenerated.ScopedCssMapper _css;

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("account-item");
  static final __shadowTemplate = new autogenerated.DocumentFragment.html('''
         <a style="overflow:hidden"></a> 
      ''', treeSanitizer: autogenerated.nullTreeSanitizer);
  autogenerated.AnchorElement __e19;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("account-item");
    setScopedCss("account-item", new autogenerated.ScopedCssMapper({"account-item":"[is=\"account-item\"]"}));
    _css = getScopedCss("account-item");
    __t = new autogenerated.Template(__root);
    __root.nodes.add(__shadowTemplate.clone(true));
    __e19 = __root.nodes[1];
    var __binding18 = __t.contentBind(() => data.name, false);
    __e19.nodes.add(__binding18);
    __t.listen(__e19.onClick, ($event) { show(); });
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e19 = null;
  }

  /** Original code from the component. */

  
  bool ini = false;
  AccountData __$data;
  AccountData get data {
    if (__observe.observeReads) {
      __observe.notifyRead(this, __observe.ChangeRecord.FIELD, 'data');
    }
    return __$data;
  }
  set data(AccountData value) {
    if (__observe.hasObservers(this)) {
      __observe.notifyChange(this, __observe.ChangeRecord.FIELD, 'data',
          __$data, value);
    }
    __$data = value;
  }
  
  final String hostClasses = null;
  final Map<String, String> hostAttributes = {};
  
  void show() {
    new Controller()..showPage(new ShowAccountComponent()..data=data);
  }
}

//# sourceMappingURL=menu-account.dart.map