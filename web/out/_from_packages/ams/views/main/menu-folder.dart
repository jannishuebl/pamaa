// Auto-generated from menu-folder.html.
// DO NOT EDIT.

library folderComponent;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'package:web_ui/web_ui.dart';
import 'dart:js';
import '../../controller.dart';
import '../page/add-account.dart';



/** Die Klasse ist das Model zu einem FolderItem in der SideBar **/
class MenuFolder extends WebComponent with Observable  {
  /** Autogenerated from the template. */

  autogenerated.ScopedCssMapper _css;

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("folder-item");
  static final __html1 = new autogenerated.Element.html('<i class="icon-folder"></i>', treeSanitizer: autogenerated.nullTreeSanitizer), __html2 = new autogenerated.Element.html('<li class="notSortable"> <a><i class="icon-plus-2"></i> Empty - Click to add</a></li>', treeSanitizer: autogenerated.nullTreeSanitizer), __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <a style="overflow:hidden"></a>
        <ul class="sub-menu light sidebar-dropdown-menu opend connectedSortable" style="list-style-type:none">
        <template></template>
        </ul>
      ''', treeSanitizer: autogenerated.nullTreeSanitizer);
  autogenerated.AnchorElement __e15;
  autogenerated.Element __e17;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("folder-item");
    setScopedCss("folder-item", new autogenerated.ScopedCssMapper({"folder-item":"[is=\"folder-item\"]"}));
    _css = getScopedCss("folder-item");
    __t = new autogenerated.Template(__root);
    __root.nodes.add(__shadowTemplate.clone(true));
    __e15 = __root.nodes[1];
    var __binding14 = __t.contentBind(() => data.name, false);
    __e15.nodes.addAll([__html1.clone(true),
        __binding14]);
    __t.listen(__e15.onClick, ($event) { toggle(); });
    __e17 = __root.nodes[3].nodes[1];
    __t.conditional(__e17, () => data.count == 0, (__t) {
      var __e16;
      __e16 = __html2.clone(true);
      __t.listen(__e16.onClick, ($event) { addAccount(); });
    __t.addAll([new autogenerated.Text('\n          '),
        __e16,
        new autogenerated.Text('\n          ')]);
    });

    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e15 = __e17 = null;
  }

  /** Original code from the component. */

  bool ini = true;
  FolderData __$data;
  FolderData get data {
    if (__observe.observeReads) {
      __observe.notifyRead(this, __observe.ChangeRecord.FIELD, 'data');
    }
    return __$data;
  }
  set data(FolderData value) {
    if (__observe.hasObservers(this)) {
      __observe.notifyChange(this, __observe.ChangeRecord.FIELD, 'data',
          __$data, value);
    }
    __$data = value;
  }
  MenuFolder(data) : __$data = data;
  
  final String hostClasses = "dropdown active opened menuIteam";
  final Map<String, String> hostAttributes = {"data-role":"dropdown", "on-click":"clicked()"};
  
  void init() {
    this.host.classes.add(hostClasses);
    hostAttributes.forEach((k,v){
      this.host.attributes[k] = v;
    });
  }
    
  void open() {
      querySelector('ul').id = "elToOpen";
      querySelector('i').id = "icontochange";
      context['jQuery'](new JsFunction.withThis((jquery) {
        context['jQuery']('#elToOpen').show('fast');
        context['jQuery']('#icontochange').removeClass('icon-folder');
        context['jQuery']('#icontochange').addClass( "icon-folder-2" );
      }));
    querySelector('i').id = "";
    querySelector('ul').id = "";
  }
  
  void toggle() {
      querySelector('ul').id = "elToOpen";
      querySelector('i').id = "icontochange";
      context['jQuery'](new JsFunction.withThis((jquery) {
        context['jQuery']('#elToOpen').toggle('fast');
        context['jQuery']('#icontochange').toggleClass( "icon-folder icon-folder-2" );
      }));
    querySelector('i').id = "";
    querySelector('ul').id = "";
  }
  
  void addAccount() {
    
    new Controller()..showPage(new AddAccountComponent()..selectedFolder=data.id.toString());
  }
}



//# sourceMappingURL=menu-folder.dart.map