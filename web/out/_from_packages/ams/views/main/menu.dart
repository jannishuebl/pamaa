// Auto-generated from menu.html.
// DO NOT EDIT.

library menu;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'package:web_ui/web_ui.dart';
import 'dart:html';
import 'dart:convert';
import '../../controller.dart';
import '../page/add-account.dart';
import '../page/folder-overview.dart';
import '../page/show-settings.dart';
import '../../util/util.dart' as util;



/** Die Klasse ist das Model zur SideBar **/
class MenuComponent extends WebComponent {
  /** Autogenerated from the template. */

  autogenerated.ScopedCssMapper _css;

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("menu-section");
  static final __shadowTemplate = new autogenerated.DocumentFragment.html('''
         <ul>
           <li class="sticker sticker-color-green">
            <a><i class="icon-plus"></i> Add Account</a> 
           </li>
           <li class="">
            <a><i class="icon-grid-view"></i> Overview</a> 
           </li>
           <li class="sticker sticker-color-red">
            <a><i class="icon-key-2"></i> Logout</a> 
           </li>
         </ul>
         <ul id="menu">
         </ul>
         <ul>
           <li class="sticker sticker-color-orange dropdown active" data-role="dropdown">
            <lable class="highlightNone"><i class="icon-plus"></i> Add Folder</lable>
            <ul class="sub-menu light sidebar-dropdown-menu keep-opened open">
              <li>
                 <div class="input-control text">
                    <input maxlength="25" id="folderName" type="text">
                    <button class="btn-clear"></button>
                 </div>  
                 <button>Add</button></li>
            </ul>
         </li></ul>
         <ul>
           <li class="sticker sticker-color-blue">
           <a><i class="icon-cog"></i> Show Settings</a> 
           </li>
         </ul>
      ''', treeSanitizer: autogenerated.nullTreeSanitizer);
  autogenerated.ButtonElement __e4;
  autogenerated.LIElement __e1, __e2, __e3, __e5;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("menu-section");
    setScopedCss("menu-section", new autogenerated.ScopedCssMapper({"menu-section":"[is=\"menu-section\"]"}));
    _css = getScopedCss("menu-section");
    __t = new autogenerated.Template(__root);
    __root.nodes.add(__shadowTemplate.clone(true));
    __e1 = __root.nodes[1].nodes[1];
    __t.listen(__e1.onClick, ($event) { addAccount(); });
    __e2 = __root.nodes[1].nodes[3];
    __t.listen(__e2.onClick, ($event) { showOverview(); });
    __e3 = __root.nodes[1].nodes[5];
    __t.listen(__e3.onClick, ($event) { logout(); });
    __e4 = __root.nodes[5].nodes[1].nodes[3].nodes[1].nodes[3];
    __t.listen(__e4.onClick, ($event) { addFolder(); });
    __e5 = __root.nodes[7].nodes[1];
    __t.listen(__e5.onClick, ($event) { showSettings(); });
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e1 = __e2 = __e3 = __e4 = __e5 = null;
  }

  /** Original code from the component. */

  
  bool ini = true;
  
  void addAccount() {
    
    new Controller()..showPage(new AddAccountComponent());
  }
  
  void showOverview() {
    
    new Controller().showPage(new FolderOverview());
  }
 

void showSettings() {
    
    new Controller().showPage(new ShowSettingsComponent());
  }

void logout() {
  
  new Controller().logout();
}
  
  void addFolder() {
    
    InputElement textField = document.query("#folderName");
    if(textField.value != '')
    util.sendJson('folder', 
        'POST', '{"foldername":"'+textField.value+'"}', requestCompleded);
  }
  
  void requestCompleded(HttpRequest request) {
    var parsedData = JSON.parse(request.response);
    
    new Controller()..addFolder(parsedData);
  }
}

//# sourceMappingURL=menu.dart.map