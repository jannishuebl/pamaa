// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
(function($) {
var A = {};
delete A.x;
var B = {};
delete B.x;
var C = {};
delete C.x;
var D = {};
delete D.x;
var E = {};
delete E.x;
var F = {};
delete F.x;
var G = {};
delete G.x;
var H = {};
delete H.x;
var J = {};
delete J.x;
var K = {};
delete K.x;
var L = {};
delete L.x;
var M = {};
delete M.x;
var N = {};
delete N.x;
var O = {};
delete O.x;
var P = {};
delete P.x;
var Q = {};
delete Q.x;
var R = {};
delete R.x;
var S = {};
delete S.x;
var T = {};
delete T.x;
var U = {};
delete U.x;
var V = {};
delete V.x;
var W = {};
delete W.x;
var X = {};
delete X.x;
var Y = {};
delete Y.x;
var Z = {};
delete Z.x;
function Isolate() {}
init();

$ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
// Method closures
$$.BoundClosure$0 = [B, {"": "BoundClosure;_self,__js_helper$_target,_receiver,__js_helper$_name",
  call$0: function() {
    return this.__js_helper$_target.call(this._self);
  },
  $is_void_: true
}];

$$.BoundClosure$1 = [B, {"": "BoundClosure;_self,__js_helper$_target,_receiver,__js_helper$_name",
  call$1: function(p0) {
    return this.__js_helper$_target.call(this._self, p0);
  },
  $is_args1: true
}];

$$.BoundClosure$2 = [B, {"": "BoundClosure;_self,__js_helper$_target,_receiver,__js_helper$_name",
  call$2: function(p0, p1) {
    return this.__js_helper$_target.call(this._self, p0, p1);
  },
  $is_args2: true
}];

$$.BoundClosure$20 = [B, {"": "BoundClosure;_self,__js_helper$_target,_receiver,__js_helper$_name",
  call$2: function(p0, p1) {
    return this.__js_helper$_target.call(this._self, p0, p1);
  },
  call$1: function(p0) {
    return this.call$2(p0, null);
  },
  "+call:1:0": 0,
  $is_args2: true,
  $is_args1: true
}];

$$.BoundClosure$i0 = [H, {"": "BoundClosure;_self,__js_helper$_target,_receiver,__js_helper$_name",
  call$0: function() {
    return this.__js_helper$_target.call(this._self, this._receiver);
  },
  $is_void_: true
}];

$$.BoundClosure$i1 = [M, {"": "BoundClosure;_self,__js_helper$_target,_receiver,__js_helper$_name",
  call$1: function(p0) {
    return this.__js_helper$_target.call(this._self, this._receiver, p0);
  },
  $is_args1: true
}];

$$.Closure$2 = [H, {"": "Closure;call$2,$name", $is_args2: true}];

$$.Closure$1 = [H, {"": "Closure;call$1,$name", $is_args1: true}];

$$.Closure$0 = [H, {"": "Closure;call$0,$name", $is_void_: true}];

$$.Closure$7 = [H, {"": "Closure;call$7,$name"}];

$$.Closure$22 = [P, {"": "Closure;call$2,$name",
  call$1: function(p0) {
    return this.call$2(p0, null);
  },
  "+call:1:0": 0,
  $is_args2: true,
  $is_args1: true
}];

$$.Closure$4 = [W, {"": "Closure;call$4,$name"}];

(function (reflectionData) {
  function map(x){x={x:x};delete x.x;return x}
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = map();
  if (!init.mangledGlobalNames) init.mangledGlobalNames = map();
  if (!init.statics) init.statics = map();
  if (!init.interfaces) init.interfaces = map();
  if (!init.globalFunctions) init.globalFunctions = map();
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var globalObject = data[3];
    var descriptor = data[4];
    var isRoot = !!data[5];
    var fields = descriptor && descriptor[""];
    var classes = [];
    var functions = [];
    function processStatics(descriptor) {
      for (var property in descriptor) {
        if (!hasOwnProperty.call(descriptor, property)) continue;
        if (property === "") continue;
        var element = descriptor[property];
        var firstChar = property.substring(0, 1);
        var previousProperty;
        if (firstChar === "+") {
          mangledGlobalNames[previousProperty] = property.substring(1);
          if (descriptor[property] == 1) descriptor[previousProperty].$reflectable = 1;
          if (element && element.length) init.interfaces[previousProperty] = element;
        } else if (firstChar === "@") {
          property = property.substring(1);
          $[property]["@"] = element;
        } else if (firstChar === "*") {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods) {
            descriptor.$methodsWithOptionalArguments = optionalMethods = {}
          }
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
          init.globalFunctions[property] = element;
        } else {
          previousProperty = property;
          var newDesc = {};
          var previousProp;
          for (var prop in element) {
            if (!hasOwnProperty.call(element, prop)) continue;
            firstChar = prop.substring(0, 1);
            if (prop === "static") {
              processStatics(init.statics[property] = element[prop]);
            } else if (firstChar === "+") {
              mangledNames[previousProp] = prop.substring(1);
              if (element[prop] == 1) element[previousProp].$reflectable = 1;
            } else if (firstChar === "@" && prop !== "@") {
              newDesc[prop.substring(1)]["@"] = element[prop];
            } else if (firstChar === "*") {
              newDesc[previousProp].$defaultValues = element[prop];
              var optionalMethods = newDesc.$methodsWithOptionalArguments;
              if (!optionalMethods) {
                newDesc.$methodsWithOptionalArguments = optionalMethods={}
              }
              optionalMethods[prop] = previousProp;
            } else {
              newDesc[previousProp = prop] = element[prop];
            }
          }
          $$[property] = [globalObject, newDesc];
          classes.push(property);
        }
      }
    }
    processStatics(descriptor);
    libraries.push([name, uri, classes, functions, metadata, fields, isRoot,
                    globalObject]);
  }
})([
["Controller", "_from_packages/ams/controller.dart", , B, {
Controller: {"": "Object;data*,firstPage,auth,pageComp",
  login$0: function() {
    var t1 = $.get$context();
    t1.$index(t1, "OAuth").redirect$2("google", "https://localhost:8443");
  },
  get$login: function() {
    return new B.BoundClosure$0(this, B.Controller.prototype.login$0, null, "login$0");
  },
  loginUserAtServer$0: function() {
    P.print("loginUserAtServer");
    E.sendRequest("api/user/login", "GET", this.get$userLoginSuccesfull(), true, this.get$signInFailed());
  },
  signInFailed$1: function(request) {
    this.logout$0();
  },
  get$signInFailed: function() {
    return new B.BoundClosure$1(this, B.Controller.prototype.signInFailed$1, null, "signInFailed$1");
  },
  userLoginSuccesfull$1: function(response) {
    var t1, parsedData;
    t1 = J.getInterceptor$x(response);
    if (!J.$eq(t1.get$response(response), "")) {
      parsedData = C.C_JsonCodec.parse$1(t1.get$response(response));
      this.data.get$user().id = parsedData;
      this.initData$0(this);
    }
  },
  get$userLoginSuccesfull: function() {
    return new B.BoundClosure$1(this, B.Controller.prototype.userLoginSuccesfull$1, null, "userLoginSuccesfull$1");
  },
  initData$0: function(_) {
    var t1, t2;
    J.remove$0$ax(J.get$first$ax(J.get$children$x(document.querySelector(".metrouicss .page"))));
    t1 = document.querySelector(".metrouicss .page");
    t2 = new E.AppPage(null, null, null, null, null, false, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t2.set$host(t2, document.createElement("div", null));
    E.addComponent(t1, t2, null, null);
    E.sendRequest("", "GET", new B.Controller_initData_closure(this), false, null);
  },
  addFolder$1: function(rawFolder) {
    var t1, t2, t3, folderData, menu, folderLi, preElementIndex;
    t1 = J.getInterceptor$asx(rawFolder);
    t2 = t1.$index(rawFolder, "folderid");
    t1 = t1.$index(rawFolder, "foldername");
    t3 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t3;
    folderData = new B.FolderData(t1, t2, 0, null, null, t3);
    menu = document.querySelector("#menu");
    t3 = H.fillLiteralMap(["data-role", "dropdown", "on-click", "clicked()"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t2 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t2;
    folderLi = new D.MenuFolder(null, null, null, null, true, folderData, "dropdown active opened menuIteam", t3, null, null, t2, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    folderLi.set$host(folderLi, document.createElement("li", null));
    t2 = J.$add$ns(J.toString$0(folderData.id), "Folder");
    J.set$id$x(folderLi.get$host(folderLi), t2);
    J.add$1$ax(this.data.get$folder(), folderLi);
    J.sort$1$ax(this.data.get$folder(), new B.Controller_addFolder_closure());
    preElementIndex = J.indexOf$1$asx(this.data.get$folder(), folderLi) - 1;
    if (preElementIndex < 0)
      E.addComponent(menu, folderLi, null, null);
    else
      E.addComponent(menu, folderLi, false, J.elementAt$1$ax(this.data.get$folder(), preElementIndex));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1(C.JSString_methods.$add("#", J.toString$0(folderData.id)) + "Folder ul").sortable$1(P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["connectWith", ".connectedSortable", "cancel", ".notSortable", "stop", P.JsFunction_JsFunction$withThis(this.get$handleAccountMoved())], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)))).disableSelection$0();
  },
  get$addFolder: function() {
    return new B.BoundClosure$1(this, B.Controller.prototype.addFolder$1, null, "addFolder$1");
  },
  handleAccountMoved$2: function($event, ui) {
    var t1, accountId, folderId, account;
    t1 = J.getInterceptor$x(ui);
    accountId = H.Primitives_parseInt(J.replaceAll$2$s(J.get$id$x(t1.get$item(ui).get$context()), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("Account", false, true, false), null, null), ""), null, null);
    folderId = J.replaceAll$2$s(J.get$id$x(J.get$parent$x(J.get$parent$x(t1.get$item(ui).get$context()))), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("Folder", false, true, false), null, null), "");
    account = J.firstWhere$1$ax(this.data.get$account(), new B.Controller_handleAccountMoved_closure(accountId));
    this.moveAccount$3(account, folderId, J.get$data$x(J.firstWhere$1$ax(this.data.get$folder(), new B.Controller_handleAccountMoved_closure0(account))));
  },
  get$handleAccountMoved: function() {
    return new B.BoundClosure$2(this, B.Controller.prototype.handleAccountMoved$2, null, "handleAccountMoved$2");
  },
  addAccount$2: function(rawAccount, accdata) {
    var t1, t2, t3, t4, t5, t6, t7, accountLi, folderUl, accountsForFolder, preElementIndex;
    t1 = {};
    t1.accountData_0 = null;
    if (rawAccount != null) {
      t2 = J.getInterceptor$asx(rawAccount);
      t3 = t2.$index(rawAccount, "accountid");
      t4 = t2.$index(rawAccount, "accountname");
      t5 = t2.$index(rawAccount, "login");
      t6 = t2.$index(rawAccount, "password");
      t2 = t2.$index(rawAccount, "folder");
      t7 = $.Observable_$_nextHashCode + 1;
      $.Observable_$_nextHashCode = t7;
      t1.accountData_0 = new B.AccountData(t4, t3, t5, t6, t2, null, null, t7);
    }
    if (accdata != null)
      t1.accountData_0 = accdata;
    t2 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t3 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t3;
    accountLi = new G.MenuAccount(null, null, null, false, null, null, t2, null, null, t3, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    accountLi.set$host(accountLi, document.createElement("li", null));
    accountLi.set$data(accountLi, t1.accountData_0);
    t3 = J.$add$ns(J.toString$0(J.get$id$x(t1.accountData_0)), "Account");
    J.set$id$x(accountLi.get$host(accountLi), t3);
    J.add$1$ax(this.data.get$account(), accountLi);
    folderUl = J.querySelector$1$x(J.firstWhere$1$ax(this.data.get$folder(), new B.Controller_addAccount_closure(t1)), "ul");
    J.sort$1$ax(this.data.get$account(), new B.Controller_addAccount_closure0());
    accountsForFolder = P.List_List(null, null);
    J.forEach$1$ax(this.data.get$account(), new B.Controller_addAccount_closure1(t1, accountsForFolder));
    preElementIndex = H.Arrays_indexOf(accountsForFolder, accountLi, 0, accountsForFolder.length) - 1;
    if (preElementIndex < 0)
      E.addComponent(folderUl, accountLi, null, null);
    else {
      if (preElementIndex >>> 0 !== preElementIndex || preElementIndex >= accountsForFolder.length)
        throw H.ioore(accountsForFolder, preElementIndex);
      E.addComponent(folderUl, accountLi, false, accountsForFolder[preElementIndex]);
    }
    return t1.accountData_0;
  },
  addAccount$1: function(rawAccount) {
    return this.addAccount$2(rawAccount, null);
  },
  get$addAccount: function() {
    return new B.BoundClosure$20(this, B.Controller.prototype.addAccount$2, null, "addAccount$2");
  },
  removeFolder$1: function(folder) {
    E.sendRequest(C.JSString_methods.$add("folder/", J.toString$0(J.get$id$x(J.get$data$x(folder)))), "DELETE", new B.Controller_removeFolder_closure(this, folder), false, null);
  },
  removeAccount$2: function(account, folder) {
    E.sendRequest(C.JSString_methods.$add("account/", J.toString$0(J.get$id$x(J.get$data$x(account)))), "DELETE", new B.Controller_removeAccount_closure(this, account, folder), false, null);
  },
  moveAccount$3: function(account, selectedFolder, folder) {
    var t1, accdata;
    t1 = J.getInterceptor$x(account);
    accdata = t1.get$data(account);
    accdata.set$folder(H.Primitives_parseInt(selectedFolder, null, null));
    E.sendJson("account", "PUT", J.toString$0(t1.get$data(account)), new B.Controller_moveAccount_closure(this, account, folder, accdata), false);
  },
  renameFolder$1: function(folderdata) {
    var t1 = J.getInterceptor$x(folderdata);
    J.set$name$x(J.get$data$x(J.firstWhere$1$ax(this.data.get$folder(), new B.Controller_renameFolder_closure(folderdata))), t1.get$name(folderdata));
    E.sendJson("folder", "PUT", C.JSString_methods.$add(C.JSString_methods.$add("{\"folderid\":", J.toString$0(t1.get$id(folderdata))) + ",\"foldername\":\"", t1.get$name(folderdata)) + "\"}", new B.Controller_renameFolder_closure0(), false);
  },
  updateAccount$1: function(accountData) {
    J.set$data$x(J.firstWhere$1$ax(this.data.get$account(), new B.Controller_updateAccount_closure(accountData)), accountData);
    E.sendJson("account", "PUT", J.toString$0(accountData), new B.Controller_updateAccount_closure0(), false);
  },
  logout$0: function() {
    var t1, t2, t3;
    E.createCookie("token", "", -1);
    t1 = this.pageComp;
    if (t1 != null)
      t1.reset$0(t1);
    J.remove$0$ax(J.get$first$ax(J.get$children$x(document.querySelector(".metrouicss .page"))));
    t1 = document.querySelector(".metrouicss .page");
    t2 = new Y.StartPage(null, null, null, false, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t2.set$host(t2, document.createElement("div", null));
    E.addComponent(t1, t2, null, null);
    t2 = P.List_List(null, null);
    t1 = P.List_List(null, null);
    t3 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t3;
    this.data = new B.Data(t2, t1, new B.User(null, null, false, null, null, null, null, "", null, null, t3));
  },
  static: {
"": "Controller__singleton",
}

},

Controller_initData_closure: {"": "Closure;this_0",
  call$1: function(response) {
    var parsedData, t1, t2, textToCrypt;
    parsedData = C.C_JsonCodec.parse$1(J.get$response$x(response));
    t1 = this.this_0;
    t2 = t1.data.get$user();
    textToCrypt = C.JSString_methods.$add("dsgfhnjnm3l298djmfsklli0", t2.id) + "o32dsjkfdn32irdn,cnsd";
    throw H.ioore(parsedData, "firstName");
    t2.set$familyName(parsedData.firstName);
    t2 = t1.data.get$user();
    throw H.ioore(parsedData, "lastName");
    t2.set$givenName(parsedData.lastName);
    t2 = t1.data.get$user();
    throw H.ioore(parsedData, "photoUrl");
    t2.set$pictureLink(parsedData.photoUrl);
    t1.data.get$user().masterPwCryptText = E.hash(textToCrypt);
    throw H.ioore(parsedData, "masterPw");
    t2 = parsedData.masterPw;
    J.trim$0$s(t2);
    t1.data.get$user().masterPw = t2;
    throw H.ioore(parsedData, "folders");
    P.print(C.JSInt_methods.toString$0(parsedData.folders.length));
    t2 = parsedData.length;
    if ("folders" >= t2)
      throw H.ioore(parsedData, "folders");
    J.forEach$1$ax(parsedData.folders, t1.get$addFolder());
    throw H.ioore(parsedData, "accounts");
    J.forEach$1$ax(parsedData.accounts, t1.get$addAccount());
    t2 = t1.pageComp.getPage$0();
    t1.pageComp.loadePage$1(t2);
    t2 = $.get$context();
    J.$index$asx(t2.$index(t2, "jQuery"), "Input").call$1(P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["initAll", true], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_addFolder_closure: {"": "Closure;",
  call$2: function(b, a) {
    return C.JSString_methods.compareTo$1(J.toUpperCase$0$s(J.get$name$x(J.get$data$x(a))), J.toUpperCase$0$s(J.get$name$x(J.get$data$x(b))));
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

Controller_handleAccountMoved_closure: {"": "Closure;accountId_0",
  call$1: function(e) {
    return J.$eq(J.get$id$x(J.get$data$x(e)), this.accountId_0);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_handleAccountMoved_closure0: {"": "Closure;account_1",
  call$1: function(e) {
    return J.$eq(J.get$id$x(J.get$data$x(e)), J.get$data$x(this.account_1).get$folder());
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_addAccount_closure: {"": "Closure;box_0",
  call$1: function($E) {
    var t1 = J.getInterceptor$x($E);
    if (J.$eq(J.get$id$x(t1.get$data($E)), this.box_0.accountData_0.get$folder())) {
      t1 = t1.get$data($E);
      t1.set$count(J.$add$ns(t1.get$count(), 1));
      return true;
    } else
      return false;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_addAccount_closure0: {"": "Closure;",
  call$2: function(b, a) {
    return C.JSString_methods.compareTo$1(J.toUpperCase$0$s(J.get$name$x(J.get$data$x(a))), J.toUpperCase$0$s(J.get$name$x(J.get$data$x(b))));
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

Controller_addAccount_closure1: {"": "Closure;box_0,accountsForFolder_1",
  call$1: function($E) {
    if (J.$eq(J.get$data$x($E).get$folder(), this.box_0.accountData_0.get$folder()))
      this.accountsForFolder_1.push($E);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_removeFolder_closure: {"": "Closure;this_0,folder_1",
  call$1: function(_) {
    var t1, t2, t3, t4;
    t1 = this.folder_1;
    J.remove$0$ax(t1);
    t2 = this.this_0;
    J.remove$1$ax(t2.data.get$folder(), t1);
    t1 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t3 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t4 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t2.pageComp.loadePage$1(new F.FolderOverview(null, null, true, null, null, null, t1, new F.ScopedCssMapper(t3), null, null, t4));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_removeAccount_closure: {"": "Closure;this_0,account_1,folder_2",
  call$1: function(_) {
    var t1, t2;
    t1 = this.account_1;
    J.remove$0$ax(t1);
    t2 = this.this_0;
    J.remove$1$ax(t2.data.get$account(), t1);
    t1 = this.folder_2;
    t1.set$count(J.$sub$n(t1.get$count(), 1));
    t1 = G.AccountOverview$(J.get$id$x(t1));
    t2.pageComp.loadePage$1(t1);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_moveAccount_closure: {"": "Closure;this_0,account_1,folder_2,accdata_3",
  call$1: function(request) {
    var t1, t2, t3;
    t1 = this.folder_2;
    t1.set$count(J.$sub$n(t1.get$count(), 1));
    t1 = this.account_1;
    t2 = J.getInterceptor$ax(t1);
    t2.remove$0(t1);
    t3 = this.this_0;
    J.remove$1$ax(t3.data.get$account(), t1);
    t3.addAccount$2(null, this.accdata_3);
    t1 = G.AccountOverview$(t2.get$data(t1).get$folder());
    t3.pageComp.loadePage$1(t1);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_renameFolder_closure: {"": "Closure;folderdata_0",
  call$1: function(e) {
    return J.$eq(J.get$id$x(J.get$data$x(e)), J.get$id$x(this.folderdata_0));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_renameFolder_closure0: {"": "Closure;",
  call$1: function(_) {
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_updateAccount_closure: {"": "Closure;accountData_0",
  call$1: function(e) {
    return J.$eq(J.get$id$x(J.get$data$x(e)), J.get$id$x(this.accountData_0));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Controller_updateAccount_closure0: {"": "Closure;",
  call$1: function(_) {
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountData: {"": "Observable;_Controller0$__$name,id>,_Controller0$__$login,_Controller0$__$pw,folder@,$$_observers,$$_changes,hashCode",
  get$name: function(_) {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "name");
    return this._Controller0$__$name;
  },
  set$name: function(_, value) {
    var t1 = this.$$_observers;
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "name", this._Controller0$__$name, value);
    this._Controller0$__$name = value;
  },
  get$login: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "login");
    return this._Controller0$__$login;
  },
  get$pw: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "pw");
    return this._Controller0$__$pw;
  },
  toString$0: function(_) {
    return C.JSArray_methods.join$0(["{\"folder\":", J.toString$0(this.folder), ",\"accountname\":\"", this.get$name(this), "\",\"accountid\":", J.toString$0(this.id), ",\"login\":\"", this.get$login(), "\",\"password\":\"", J.replaceAll$2$s(this.get$pw(), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("\"", false, true, false), null, null), "\\\""), "\",\"note\":\"\"}"]);
  }
},

User: {"": "Observable;_Controller0$__$givenName,masterPw,masterPwLocal,masterPwCryptText,id>,_Controller0$__$familyName,token,_Controller0$__$pictureLink,$$_observers,$$_changes,hashCode",
  get$givenName: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "givenName");
    return this._Controller0$__$givenName;
  },
  set$givenName: function(value) {
    var t1 = this.$$_observers;
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "givenName", this._Controller0$__$givenName, value);
    this._Controller0$__$givenName = value;
  },
  get$familyName: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "familyName");
    return this._Controller0$__$familyName;
  },
  set$familyName: function(value) {
    var t1 = this.$$_observers;
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "familyName", this._Controller0$__$familyName, value);
    this._Controller0$__$familyName = value;
  },
  get$pictureLink: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "pictureLink");
    return this._Controller0$__$pictureLink;
  },
  set$pictureLink: function(value) {
    var t1 = this.$$_observers;
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "pictureLink", this._Controller0$__$pictureLink, value);
    this._Controller0$__$pictureLink = value;
  }
},

Data: {"": "Object;folder@,account<,user<"},

FolderData: {"": "Observable;_Controller0$__$name,id>,_Controller0$__$count,$$_observers,$$_changes,hashCode",
  get$name: function(_) {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "name");
    return this._Controller0$__$name;
  },
  set$name: function(_, value) {
    var t1 = this.$$_observers;
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "name", this._Controller0$__$name, value);
    this._Controller0$__$name = value;
  },
  get$count: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "count");
    return this._Controller0$__$count;
  },
  set$count: function(value) {
    var t1 = this.$$_observers;
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "count", this._Controller0$__$count, value);
    this._Controller0$__$count = value;
  }
},

Crypt: {"": "Object;toCall,pw<",
  toCall$1: function(arg0) {
    return this.toCall.call$1(arg0);
  },
  cryptPasswordReplayCallback$1: function(pwHashed) {
    this.toCall$1(this.crypt$2(pwHashed, this.pw));
  },
  get$cryptPasswordReplayCallback: function() {
    return new B.BoundClosure$1(this, B.Crypt.prototype.cryptPasswordReplayCallback$1, null, "cryptPasswordReplayCallback$1");
  },
  decryptPasswordReplayCallback$1: function(pwHashed) {
    this.toCall$1(this.decrypt$2(pwHashed, this.pw));
  },
  get$decryptPasswordReplayCallback: function() {
    return new B.BoundClosure$1(this, B.Crypt.prototype.decryptPasswordReplayCallback$1, null, "decryptPasswordReplayCallback$1");
  },
  crypt$2: function(pwHashed, pw) {
    var t1, t2;
    t1 = $.get$context();
    t1 = J.get$values$x(C.C_JsonCodec.parse$1(t1.$index(t1, "sjcl").encrypt$2(pwHashed, pw)));
    t2 = J.getInterceptor$ax(t1);
    return C.JSArray_methods.join$0(["\"iv\":\"", t2.get$first(t1), "\",\"salt\":\"", t2.elementAt$1(t1, 8), "\",\"ct\":\"", t2.get$last(t1), "\""]);
  },
  decrypt$2: function(masterPwHashed, pw) {
    var pwObject, t1;
    pwObject = C.JSArray_methods.join$0(["{\"v\":1,\"iter\":1000,\"ks\":128,\"ts\":64,\"mode\":\"ccm\",\"adata\":\"\", \"cipher\":\"aes\",", pw, "}"]);
    t1 = $.get$context();
    return t1.$index(t1, "sjcl").decrypt$2(masterPwHashed, pwObject);
  },
  openDialog$1: function(toCall) {
    P.Timer_Timer(C.Duration_0, new B.Crypt_openDialog_closure(this, toCall));
  },
  sendMasterPw$1: function(pwHashed) {
    var t1, t2;
    $.get$Controller__singleton().data.get$user().masterPw = this.crypt$2(pwHashed, $.get$Controller__singleton().data.get$user().masterPwCryptText);
    t1 = $.get$Controller__singleton().data.get$user().masterPw;
    t2 = H.JSSyntaxRegExp_makeNative("\"", false, true, false);
    t1.toString;
    E.sendJson("master", "PUT", "{\"masterpw\":\"" + H.stringReplaceAllUnchecked(t1, new H.JSSyntaxRegExp(t2, null, null), "\\\"") + "\"}", new B.Crypt_sendMasterPw_closure(), false);
  },
  testMasterPw$1: function(pwHashed) {
    var u0, exception;
    try {
      u0 = this.decrypt$2(pwHashed, $.get$Controller__singleton().data.get$user().masterPw);
    } catch (exception) {
      H.unwrapException(exception);
      return false;
    }

  }
},

Crypt_openDialog_closure: {"": "Closure;this_0,toCall_1",
  call$0: function() {
    var t1, dialog;
    t1 = $.get$context();
    J.close$0$x(t1.$index(t1, "jQuery").get$Dialog());
    dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Enter Masterpassword", "content", "Enter your Masterpassword:<br><br><div class=\"input-control text\"><input autofocus=\"true\" id=\"masterPw\" type=\"password\" /><button class=\"btn-clear\"></button></div>", "draggable", true, "buttonsAlign", "right", "closeButton", true, "buttons", H.fillLiteralMap(["Cancel", H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "Ok", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new B.Crypt_openDialog__closure(this.this_0, this.toCall_1))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").Dialog$1(dialog);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Crypt_openDialog__closure: {"": "Closure;this_2,toCall_3",
  call$0: function() {
    var pwHashed, t1, t2, t3;
    pwHashed = E.hash(J.get$value$x(document.querySelector("#masterPw")));
    t1 = this.this_2;
    t2 = this.toCall_3;
    if (t1.testMasterPw$1(pwHashed) === true)
      t2.call$1(pwHashed);
    else {
      t3 = $.get$context();
      J.close$0$x(t3.$index(t3, "jQuery").get$Dialog());
      t1.openDialog$1(t2);
    }
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Crypt_sendMasterPw_closure: {"": "Closure;",
  call$1: function(_) {
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

WebPage: {"": "WebComponent;ini<"}}],
["_foreign_helper", "dart:_foreign_helper", , H, {
JS_CONST: {"": "Object;code"}}],
["_interceptors", "dart:_interceptors", , J, {
getInterceptor: function(object) {
  return void 0;
},

makeDispatchRecord: function(interceptor, proto, extension, indexability) {
  return {i: interceptor, p: proto, e: extension, x: indexability};
},

getNativeInterceptor: function(object) {
  var record, proto, objectProto;
  record = object[init.dispatchPropertyName];
  if (record == null)
    if ($.initNativeDispatchFlag == null) {
      H.initNativeDispatch();
      record = object[init.dispatchPropertyName];
    }
  if (record != null) {
    proto = record.p;
    if (false === proto)
      return record.i;
    if (true === proto)
      return object;
    objectProto = Object.getPrototypeOf(object);
    if (proto === objectProto)
      return record.i;
    if (record.e === objectProto)
      return proto(object, record);
  }
  record = H.lookupDispatchRecord(object);
  if (record == null)
    return C.C_UnknownJavaScriptObject;
  Object.defineProperty(Object.getPrototypeOf(object), init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
  return J.getNativeInterceptor(object);
},

Interceptor: {"": "Object;",
  $eq: function(receiver, other) {
    return receiver === other;
  },
  get$hashCode: function(receiver) {
    return H.Primitives_objectHashCode(receiver);
  },
  toString$0: function(receiver) {
    return H.Primitives_objectToString(receiver);
  },
  noSuchMethod$1: function(receiver, invocation) {
    throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
  }
},

JSBool: {"": "bool/Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true
},

JSNull: {"": "Interceptor;",
  $eq: function(receiver, other) {
    return null == other;
  },
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
},

JavaScriptObject: {"": "Interceptor;",
  get$hashCode: function(_) {
    return 0;
  }
},

PlainJavaScriptObject: {"": "JavaScriptObject;"},

UnknownJavaScriptObject: {"": "JavaScriptObject;"},

JSArray: {"": "List/Interceptor;",
  add$1: function(receiver, value) {
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("add"));
    receiver.push(value);
  },
  removeAt$1: function(receiver, index) {
    if (index < 0 || index >= receiver.length)
      throw H.wrapException(P.RangeError$value(index));
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("removeAt"));
    return receiver.splice(index, 1)[0];
  },
  remove$1: function(receiver, element) {
    var i;
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("remove"));
    for (i = 0; i < receiver.length; ++i)
      if (J.$eq(receiver[i], element)) {
        receiver.splice(i, 1);
        return true;
      }
    return false;
  },
  addAll$1: function(receiver, collection) {
    var t1;
    for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
      this.add$1(receiver, t1.get$current());
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    return H.IterableMixinWorkaround_forEach(receiver, f);
  },
  map$1: function(receiver, f) {
    var t1 = new H.MappedListIterable(receiver, f);
    H.setRuntimeTypeInfo(t1, [null, null]);
    return t1;
  },
  join$1: function(receiver, separator) {
    var list, t1, i, t2;
    list = P.List_List(receiver.length, null);
    for (t1 = list.length, i = 0; i < receiver.length; ++i) {
      t2 = H.S(receiver[i]);
      if (i >= t1)
        throw H.ioore(list, i);
      list[i] = t2;
    }
    return list.join(separator);
  },
  join$0: function($receiver) {
    return this.join$1($receiver, "");
  },
  firstWhere$2$orElse: function(receiver, test, orElse) {
    return H.IterableMixinWorkaround_firstWhere(receiver, test, orElse);
  },
  firstWhere$1: function($receiver, test) {
    return this.firstWhere$2$orElse($receiver, test, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  sublist$2: function(receiver, start, end) {
    if (start < 0 || start > receiver.length)
      throw H.wrapException(P.RangeError$range(start, 0, receiver.length));
    if (end < start || end > receiver.length)
      throw H.wrapException(P.RangeError$range(end, start, receiver.length));
    if (start === end)
      return [];
    return receiver.slice(start, end);
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var t1 = receiver.length;
    if (t1 > 0)
      return receiver[t1 - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$reversed: function(receiver) {
    var t1 = new H.ReversedListIterable(receiver);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  sort$1: function(receiver, compare) {
    if (!!receiver.immutable$list)
      H.throwExpression(P.UnsupportedError$("sort"));
    H.IterableMixinWorkaround_sortList(receiver, compare);
  },
  indexOf$2: function(receiver, element, start) {
    return H.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  contains$1: function(receiver, other) {
    var i;
    for (i = 0; i < receiver.length; ++i)
      if (J.$eq(receiver[i], other))
        return true;
    return false;
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  get$isNotEmpty: function(receiver) {
    return receiver.length !== 0;
  },
  toString$0: function(receiver) {
    return H.IterableMixinWorkaround_toStringIterable(receiver, "[", "]");
  },
  toList$1$growable: function(receiver, growable) {
    return P.List_List$from(receiver, growable, H.getRuntimeTypeArgument(receiver, "JSArray", 0));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$iterator: function(receiver) {
    return new H.ListIterator(receiver, receiver.length, 0, null);
  },
  get$hashCode: function(receiver) {
    return H.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
      throw H.wrapException(P.ArgumentError$(newLength));
    if (newLength < 0)
      throw H.wrapException(P.RangeError$value(newLength));
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("set length"));
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    if (!!receiver.immutable$list)
      H.throwExpression(P.UnsupportedError$("indexed set"));
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: true,
  $asList: null,
  $asIterable: null,
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true
},

JSMutableArray: {"": "JSArray;", $isJSMutableArray: true,
  $asJSArray: function() {
    return [null];
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [null];
  }
},

JSFixedArray: {"": "JSMutableArray;"},

JSExtendableArray: {"": "JSMutableArray;", $isJSExtendableArray: true},

JSNumber: {"": "num/Interceptor;",
  compareTo$1: function(receiver, b) {
    var bIsNegative;
    if (typeof b !== "number")
      throw H.wrapException(new P.ArgumentError(b));
    if (receiver < b)
      return -1;
    else if (receiver > b)
      return 1;
    else if (receiver === b) {
      if (receiver === 0) {
        bIsNegative = this.get$isNegative(b);
        if (this.get$isNegative(receiver) === bIsNegative)
          return 0;
        if (this.get$isNegative(receiver))
          return -1;
        return 1;
      }
      return 0;
    } else if (isNaN(receiver)) {
      if (this.get$isNaN(b))
        return 0;
      return 1;
    } else
      return -1;
  },
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  remainder$1: function(receiver, b) {
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var t1;
    if (receiver >= -2147483648 && receiver <= 2147483647)
      return receiver | 0;
    if (isFinite(receiver)) {
      t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
      return t1 + 0;
    }
    throw H.wrapException(P.UnsupportedError$('' + receiver));
  },
  roundToDouble$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  toRadixString$1: function(receiver, radix) {
    if (radix < 2 || radix > 36)
      throw H.wrapException(P.RangeError$(radix));
    return receiver.toString(radix);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && 1 / receiver < 0)
      return "-0.0";
    else
      return "" + receiver;
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $add: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(P.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver - other;
  },
  $mul: function(receiver, other) {
    return receiver * other;
  },
  $tdiv: function(receiver, other) {
    if ((receiver | 0) === receiver && (other | 0) === other && 0 !== other && -1 !== other)
      return receiver / other | 0;
    else
      return this._slowTdiv$1(receiver, other);
  },
  _slowTdiv$1: function(receiver, other) {
    return this.toInt$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw H.wrapException(new P.ArgumentError(other));
    if (other > 31)
      return 0;
    return receiver << other >>> 0;
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw H.wrapException(P.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return receiver >> other >>> 0;
  },
  $and: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(new P.ArgumentError(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(new P.ArgumentError(other));
    return (receiver | other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(P.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(P.ArgumentError$(other));
    return receiver > other;
  },
  $ge: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(P.ArgumentError$(other));
    return receiver >= other;
  },
  $isnum: true,
  static: {
"": "JSNumber__MIN_INT32,JSNumber__MAX_INT32",
}

},

JSInt: {"": "int/JSNumber;", $isdouble: true, $isnum: true, $isint: true},

JSDouble: {"": "double/JSNumber;", $isdouble: true, $isnum: true},

JSString: {"": "String/Interceptor;",
  codeUnitAt$1: function(receiver, index) {
    if (typeof index !== "number")
      throw H.wrapException(P.ArgumentError$(index));
    if (index < 0)
      throw H.wrapException(P.RangeError$value(index));
    if (index >= receiver.length)
      throw H.wrapException(P.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  matchAsPrefix$2: function(receiver, string, start) {
    var t1, t2, i, t3;
    if (start < 0 || start > string.length)
      throw H.wrapException(P.RangeError$range(start, 0, string.length));
    t1 = receiver.length;
    t2 = string.length;
    if (start + t1 > t2)
      return;
    for (i = 0; i < t1; ++i) {
      t3 = start + i;
      if (t3 < 0)
        H.throwExpression(P.RangeError$value(t3));
      if (t3 >= t2)
        H.throwExpression(P.RangeError$value(t3));
      t3 = string.charCodeAt(t3);
      if (i >= t1)
        H.throwExpression(P.RangeError$value(i));
      if (t3 !== receiver.charCodeAt(i))
        return;
    }
    return new H.StringMatch(start, string, receiver);
  },
  $add: function(receiver, other) {
    if (typeof other !== "string")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver + other;
  },
  replaceAll$2: function(receiver, from, to) {
    return H.stringReplaceAllUnchecked(receiver, from, to);
  },
  startsWith$2: function(receiver, pattern, index) {
    var endIndex;
    if (index < 0 || index > receiver.length)
      throw H.wrapException(P.RangeError$range(index, 0, receiver.length));
    if (typeof pattern === "string") {
      endIndex = index + pattern.length;
      if (endIndex > receiver.length)
        return false;
      return pattern == receiver.substring(index, endIndex);
    }
    return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
  },
  startsWith$1: function($receiver, pattern) {
    return this.startsWith$2($receiver, pattern, 0);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    if (typeof startIndex !== "number")
      H.throwExpression(P.ArgumentError$(startIndex));
    if (endIndex == null)
      endIndex = receiver.length;
    if (typeof endIndex !== "number")
      H.throwExpression(P.ArgumentError$(endIndex));
    t1 = J.getInterceptor$n(startIndex);
    if (t1.$lt(startIndex, 0))
      throw H.wrapException(P.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex))
      throw H.wrapException(P.RangeError$value(startIndex));
    if (J.$gt$n(endIndex, receiver.length))
      throw H.wrapException(P.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  toUpperCase$0: function(receiver) {
    return receiver.toUpperCase();
  },
  trim$0: function(receiver) {
    var endIndex, startIndex, codeUnit, endIndex0, endIndex1;
    for (endIndex = receiver.length, startIndex = 0; startIndex < endIndex;) {
      if (startIndex >= endIndex)
        H.throwExpression(P.RangeError$value(startIndex));
      codeUnit = receiver.charCodeAt(startIndex);
      if (codeUnit === 32 || codeUnit === 13 || J.JSString__isWhitespace(codeUnit))
        ++startIndex;
      else
        break;
    }
    if (startIndex === endIndex)
      return "";
    for (endIndex0 = endIndex; true; endIndex0 = endIndex1) {
      endIndex1 = endIndex0 - 1;
      if (endIndex1 < 0)
        H.throwExpression(P.RangeError$value(endIndex1));
      if (endIndex1 >= endIndex)
        H.throwExpression(P.RangeError$value(endIndex1));
      codeUnit = receiver.charCodeAt(endIndex1);
      if (codeUnit === 32 || codeUnit === 13 || J.JSString__isWhitespace(codeUnit))
        ;
      else
        break;
    }
    if (startIndex === 0 && endIndex0 === endIndex)
      return receiver;
    return receiver.substring(startIndex, endIndex0);
  },
  get$codeUnits: function(receiver) {
    return new J._CodeUnits(receiver);
  },
  indexOf$2: function(receiver, pattern, start) {
    var t1, t2, i;
    if (typeof start !== "number" || Math.floor(start) !== start)
      throw H.wrapException(new P.ArgumentError(start));
    if (start < 0 || start > receiver.length)
      throw H.wrapException(P.RangeError$range(start, 0, receiver.length));
    if (typeof pattern === "string")
      return receiver.indexOf(pattern, start);
    for (t1 = receiver.length, t2 = J.getInterceptor$s(pattern), i = start; i <= t1; ++i)
      if (t2.matchAsPrefix$2(pattern, receiver, i) != null)
        return i;
    return -1;
  },
  indexOf$1: function($receiver, pattern) {
    return this.indexOf$2($receiver, pattern, 0);
  },
  lastIndexOf$2: function(receiver, pattern, start) {
    var t1, t2;
    start = receiver.length;
    t1 = pattern.length;
    if (typeof start !== "number")
      throw start.$add();
    t2 = receiver.length;
    if (start + t1 > t2)
      start = t2 - t1;
    return receiver.lastIndexOf(pattern, start);
  },
  lastIndexOf$1: function($receiver, pattern) {
    return this.lastIndexOf$2($receiver, pattern, null);
  },
  contains$2: function(receiver, other, startIndex) {
    if (startIndex < 0 || startIndex > receiver.length)
      throw H.wrapException(P.RangeError$range(startIndex, 0, receiver.length));
    return H.stringContainsUnchecked(receiver, other, startIndex);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  get$isNotEmpty: function(receiver) {
    return receiver.length !== 0;
  },
  compareTo$1: function(receiver, other) {
    var t1;
    if (typeof other !== "string")
      throw H.wrapException(new P.ArgumentError(other));
    if (receiver === other)
      t1 = 0;
    else
      t1 = receiver < other ? -1 : 1;
    return t1;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var t1, hash, i;
    for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
      hash = 536870911 & hash + receiver.charCodeAt(i);
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      hash ^= hash >> 6;
    }
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    return receiver[index];
  },
  $isString: true,
  static: {
JSString__isWhitespace: function(codeUnit) {
  if (codeUnit < 256)
    switch (codeUnit) {
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
      case 133:
      case 160:
        return true;
      default:
        return false;
    }
  switch (codeUnit) {
    case 5760:
    case 6158:
    case 8192:
    case 8193:
    case 8194:
    case 8195:
    case 8196:
    case 8197:
    case 8198:
    case 8199:
    case 8200:
    case 8201:
    case 8202:
    case 8232:
    case 8233:
    case 8239:
    case 8287:
    case 12288:
    case 65279:
      return true;
    default:
      return false;
  }
}}

},

_CodeUnits: {"": "UnmodifiableListBase;_string",
  get$length: function(_) {
    return this._string.length;
  },
  $index: function(_, i) {
    var t1 = this._string;
    if (typeof i !== "number")
      H.throwExpression(new P.ArgumentError(i));
    if (typeof i !== "number")
      throw i.$lt();
    if (i < 0)
      H.throwExpression(P.RangeError$value(i));
    if (i >= t1.length)
      H.throwExpression(P.RangeError$value(i));
    return t1.charCodeAt(i);
  },
  $asList: function() {
    return [J.JSInt];
  },
  $asIterable: function() {
    return [J.JSInt];
  }
}}],
["_isolate_helper", "dart:_isolate_helper", , H, {
_callInIsolate: function(isolate, $function) {
  var result = isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
  return result;
},

startRootIsolate: function(entry) {
  var rootContext, t1;
  $globalState = H._Manager$(entry);
  if ($globalState.isWorker === true)
    return;
  rootContext = H._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  t1 = J.getInterceptor(entry);
  if (!!t1.$is_args1)
    rootContext.eval$1(new H.startRootIsolate_closure(entry));
  else if (!!t1.$is_args2)
    rootContext.eval$1(new H.startRootIsolate_closure0(entry));
  else
    rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
},

IsolateNatives_computeThisScript: function() {
  var currentScript = init.currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  if (typeof version == "function" && typeof os == "object" && "system" in os)
    return H.IsolateNatives_computeThisScriptD8();
  if (typeof version == "function" && typeof system == "function")
    return thisFilename();
  return;
},

IsolateNatives_computeThisScriptD8: function() {
  var stack, matches;
  stack = new Error().stack;
  if (stack == null) {
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
    if (stack == null)
      throw H.wrapException(P.UnsupportedError$("No stack trace"));
  }
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw H.wrapException(P.UnsupportedError$("Cannot extract URI from \"" + stack + "\""));
},

IsolateNatives__processWorkerMessage: function(sender, e) {
  var msg, t1, functionName, entryPoint, args, message, isSpawnUri, replyTo, context, t2;
  msg = H._deserializeMessage(e.data);
  t1 = J.getInterceptor$asx(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      $globalState.currentManagerId = t1.$index(msg, "id");
      functionName = t1.$index(msg, "functionName");
      entryPoint = functionName == null ? $globalState.entry : init.globalFunctions[functionName];
      args = t1.$index(msg, "args");
      message = H._deserializeMessage(t1.$index(msg, "msg"));
      isSpawnUri = t1.$index(msg, "isSpawnUri");
      replyTo = H._deserializeMessage(t1.$index(msg, "replyTo"));
      context = H._IsolateContext$();
      $globalState.topEventLoop.events._add$1(new H._IsolateEvent(context, new H.IsolateNatives__processWorkerMessage_closure(entryPoint, args, message, isSpawnUri, replyTo), "worker-start"));
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      H.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "args"), t1.$index(msg, "msg"), t1.$index(msg, "isSpawnUri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        J.send$1$x(t1.$index(msg, "port"), t1.$index(msg, "msg"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      t1 = $globalState.managers;
      t2 = $.get$IsolateNatives_workerIds();
      t1.remove$1(t1, t2.$index(t2, sender));
      sender.terminate();
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      H.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true) {
        t1 = $globalState.mainManager;
        t2 = H._serializeMessage(H.fillLiteralMap(["command", "print", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1.toString;
        self.postMessage(t2);
      } else
        P.print(t1.$index(msg, "msg"));
      break;
    case "error":
      throw H.wrapException(t1.$index(msg, "msg"));
    default:
  }
},

IsolateNatives__log: function(msg) {
  var trace, t1, t2, exception;
  if ($globalState.isWorker === true) {
    t1 = $globalState.mainManager;
    t2 = H._serializeMessage(H.fillLiteralMap(["command", "log", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1.toString;
    self.postMessage(t2);
  } else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      H.unwrapException(exception);
      trace = new H._StackTrace(exception, null);
      throw H.wrapException(P.Exception_Exception(trace));
    }

},

IsolateNatives__startIsolate: function(topLevel, args, message, isSpawnUri, replyTo) {
  var t1;
  H.Primitives_initializeStatics($globalState.currentContext.id);
  $.lazyPort = H.ReceivePortImpl$();
  t1 = $.lazyPort;
  t1.toString;
  J.send$1$x(replyTo, ["spawned", new H._NativeJsSendPort(t1, $globalState.currentContext.id)]);
  if (isSpawnUri !== true)
    topLevel.call$1(message);
  else {
    t1 = J.getInterceptor(topLevel);
    if (!!t1.$is_args2)
      topLevel.call$2(args, message);
    else if (!!t1.$is_args1)
      topLevel.call$1(args);
    else
      topLevel.call$0();
  }
},

IsolateNatives__spawnWorker: function(functionName, uri, args, message, isSpawnUri, replyPort) {
  var worker, t1, workerId;
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.onmessage = function(e) { H.IsolateNatives__processWorkerMessage$closure.call$2(worker, e); };
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  t1 = $.get$IsolateNatives_workerIds();
  t1.$indexSet(t1, worker, workerId);
  t1 = $globalState.managers;
  t1.$indexSet(t1, workerId, worker);
  worker.postMessage(H._serializeMessage(H.fillLiteralMap(["command", "start", "id", workerId, "replyTo", H._serializeMessage(replyPort), "args", args, "msg", H._serializeMessage(message), "isSpawnUri", isSpawnUri, "functionName", functionName], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
},

_waitForPendingPorts: function(message, callback) {
  var finder = H._PendingSendPortFinder$();
  finder.traverse$1(message);
  P.Future_wait(finder.ports).then$1(new H._waitForPendingPorts_closure(callback));
},

_serializeMessage: function(message) {
  var t1;
  if ($globalState.supportsWorkers === true) {
    t1 = new H._JsSerializer(0, new H._MessageTraverserVisitedMap());
    t1._visited = new H._JsVisitedMap(null);
    return t1.traverse$1(message);
  } else {
    t1 = new H._JsCopier(new H._MessageTraverserVisitedMap());
    t1._visited = new H._JsVisitedMap(null);
    return t1.traverse$1(message);
  }
},

_deserializeMessage: function(message) {
  if ($globalState.supportsWorkers === true)
    return new H._JsDeserializer(null).deserialize$1(message);
  else
    return message;
},

_MessageTraverser_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

_Deserializer_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

startRootIsolate_closure: {"": "Closure;entry_0",
  call$0: function() {
    this.entry_0.call$1([]);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

startRootIsolate_closure0: {"": "Closure;entry_1",
  call$0: function() {
    this.entry_1.call$2([], null);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_Manager: {"": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    t2 = $.get$globalWorker();
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = t2 != null && $.get$IsolateNatives_thisScript() != null;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { H.IsolateNatives__processWorkerMessage$closure.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  _Manager$1: function(entry) {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = new H._EventLoop(P.ListQueue$(null, H._IsolateEvent), 0);
    this.isolates = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H._IsolateContext);
    this.managers = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, null);
    if (this.isWorker === true) {
      this.mainManager = new H._MainManagerStub();
      this._nativeInitWorkerMessageHandler$0();
    }
  },
  static: {
_Manager$: function(entry) {
  var t1 = new H._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
  t1._Manager$1(entry);
  return t1;
}}

},

_IsolateContext: {"": "Object;id>,ports,isolateStatics<",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    $ = this.isolateStatics;
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (old != null)
        $ = old.get$isolateStatics();
    }
    return result;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return t1.$index(t1, portId);
  },
  register$2: function(_, portId, port) {
    var t1;
    if (this.ports.containsKey$1(portId))
      throw H.wrapException(P.Exception_Exception("Registry: ports must be registered only once."));
    t1 = this.ports;
    t1.$indexSet(t1, portId, port);
    t1 = $globalState.isolates;
    t1.$indexSet(t1, this.id, this);
  },
  unregister$1: function(portId) {
    var t1 = this.ports;
    t1.remove$1(t1, portId);
    if (this.ports._collection$_length === 0) {
      t1 = $globalState.isolates;
      t1.remove$1(t1, this.id);
    }
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $globalState;
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = t2 + 1;
    this.id = t2;
    this.ports = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, P.ReceivePort);
    this.isolateStatics = new Isolate();
  },
  $is_IsolateContext: true,
  static: {
_IsolateContext$: function() {
  var t1 = new H._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
}}

},

_EventLoop: {"": "Object;events,activeTimerCount",
  dequeue$0: function() {
    var t1 = this.events;
    if (t1._head === t1._tail)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($globalState.rootContext != null && $globalState.isolates.containsKey$1($globalState.rootContext.id) && $globalState.fromCommandLine === true && $globalState.rootContext.ports._collection$_length === 0)
      throw H.wrapException(P.Exception_Exception("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event, t1, t2;
    $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      t1 = $globalState;
      if (t1.isWorker === true && t1.isolates._collection$_length === 0 && t1.topEventLoop.activeTimerCount === 0) {
        t1 = t1.mainManager;
        t2 = H._serializeMessage(H.fillLiteralMap(["command", "close"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1.toString;
        self.postMessage(t2);
      }
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new H._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1, t2;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        trace = new H._StackTrace(exception, null);
        t1 = $globalState.mainManager;
        t2 = H._serializeMessage(H.fillLiteralMap(["command", "error", "msg", H.S(e) + "\n" + H.S(trace)], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1.toString;
        self.postMessage(t2);
      }

  }
},

_EventLoop__runHelper_next: {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    P.Timer_Timer(C.Duration_0, this);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_IsolateEvent: {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  },
  $is_IsolateEvent: true
},

_MainManagerStub: {"": "Object;"},

IsolateNatives__processWorkerMessage_closure: {"": "Closure;entryPoint_0,args_1,message_2,isSpawnUri_3,replyTo_4",
  call$0: function() {
    H.IsolateNatives__startIsolate(this.entryPoint_0, this.args_1, this.message_2, this.isSpawnUri_3, this.replyTo_4);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_BaseSendPort: {"": "Object;", $isSendPort: true},

_NativeJsSendPort: {"": "_BaseSendPort;_receivePort,_isolateId",
  send$2: function(_, message, replyTo) {
    H._waitForPendingPorts(message, new H._NativeJsSendPort_send_closure(this, message));
  },
  send$1: function($receiver, message) {
    return this.send$2($receiver, message, null);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$is_NativeJsSendPort && J.$eq(this._receivePort, other._receivePort);
  },
  get$hashCode: function(_) {
    return this._receivePort.get$__isolate_helper$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
},

_NativeJsSendPort_send_closure: {"": "Closure;this_1,message_2",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = $globalState.isolates;
    t3 = this.this_1;
    t4 = t3._isolateId;
    isolate = t2.$index(t2, t4);
    if (isolate == null)
      return;
    if ((t3._receivePort.get$_controller()._state & 4) !== 0)
      return;
    shouldSerialize = $globalState.currentContext != null && $globalState.currentContext.id !== t4;
    msg = this.message_2;
    t1.msg_0 = msg;
    if (shouldSerialize)
      t1.msg_0 = H._serializeMessage(t1.msg_0);
    t2 = $globalState.topEventLoop;
    t4 = "receive " + H.S(msg);
    t2.events._add$1(new H._IsolateEvent(isolate, new H._NativeJsSendPort_send__closure(t1, t3, shouldSerialize), t4));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_NativeJsSendPort_send__closure: {"": "Closure;box_0,this_3,shouldSerialize_4",
  call$0: function() {
    var t1, t2;
    t1 = this.this_3._receivePort;
    if ((t1.get$_controller()._state & 4) === 0) {
      if (this.shouldSerialize_4) {
        t2 = this.box_0;
        t2.msg_0 = H._deserializeMessage(t2.msg_0);
      }
      t1 = t1.get$_controller();
      t2 = this.box_0.msg_0;
      if (t1._state >= 4)
        H.throwExpression(t1._badEventState$0());
      t1._async$_add$1(t2);
    }
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_WorkerSendPort: {"": "_BaseSendPort;_workerId,_receivePortId,_isolateId",
  send$2: function(_, message, replyTo) {
    H._waitForPendingPorts(message, new H._WorkerSendPort_send_closure(this, message));
  },
  send$1: function($receiver, message) {
    return this.send$2($receiver, message, null);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other === "object" && other !== null && !!t1.$is_WorkerSendPort)
      t1 = J.$eq(this._workerId, other._workerId) && J.$eq(this._isolateId, other._isolateId) && J.$eq(this._receivePortId, other._receivePortId);
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2, t3;
    t1 = J.$shl$n(this._workerId, 16);
    t2 = J.$shl$n(this._isolateId, 8);
    t3 = this._receivePortId;
    if (typeof t3 !== "number")
      throw H.iae(t3);
    return (t1 ^ t2 ^ t3) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
},

_WorkerSendPort_send_closure: {"": "Closure;this_0,message_1",
  call$0: function() {
    var t1, workerMessage, t2, manager;
    t1 = this.this_0;
    workerMessage = H._serializeMessage(H.fillLiteralMap(["command", "message", "port", t1, "msg", this.message_1], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    if ($globalState.isWorker === true) {
      $globalState.mainManager.toString;
      self.postMessage(workerMessage);
    } else {
      t2 = $globalState.managers;
      manager = t2.$index(t2, t1._workerId);
      if (manager != null)
        manager.postMessage(workerMessage);
    }
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ReceivePortImpl: {"": "Stream;__isolate_helper$_id<,_controller<",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var t1 = this._controller;
    t1.toString;
    t1 = new P._ControllerStream(t1);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  },
  close$0: function(_) {
    var t1 = this._controller;
    if ((t1._state & 4) !== 0)
      return;
    t1.close$0(t1);
    $globalState.currentContext.unregister$1(this.__isolate_helper$_id);
  },
  get$close: function(_receiver) {
    return new H.BoundClosure$i0(this, H.ReceivePortImpl.prototype.close$0, _receiver, "close$0");
  },
  ReceivePortImpl$0: function() {
    this._controller = P.StreamController_StreamController(this.get$close(this), null, null, null, true, null);
    var t1 = $globalState.currentContext;
    t1.register$2(t1, this.__isolate_helper$_id, this);
  },
  $isReceivePort: true,
  static: {
"": "ReceivePortImpl__nextFreeId",
ReceivePortImpl$: function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = t1 + 1;
  t1 = new H.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
}}

},

_waitForPendingPorts_closure: {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_PendingSendPortFinder: {"": "_MessageTraverser;ports,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (t1.$index(t1, list) != null)
      return;
    t1 = this._visited;
    t1.$indexSet(t1, list, true);
    J.forEach$1$ax(list, this.get$_dispatch());
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (t1.$index(t1, map) != null)
      return;
    t1 = this._visited;
    t1.$indexSet(t1, map, true);
    J.forEach$1$ax(map.get$values(map), this.get$_dispatch());
  },
  visitSendPort$1: function(port) {
  },
  _PendingSendPortFinder$0: function() {
    this._visited = new H._JsVisitedMap(null);
  },
  static: {
_PendingSendPortFinder$: function() {
  var t1 = new H._PendingSendPortFinder([], new H._MessageTraverserVisitedMap());
  t1._PendingSendPortFinder$0();
  return t1;
}}

},

_JsSerializer: {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (!!x.$is_NativeJsSendPort)
      return ["sendport", $globalState.currentManagerId, x._isolateId, x._receivePort.get$__isolate_helper$_id()];
    if (!!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    throw H.wrapException("Illegal underlying port " + H.S(x));
  }
},

_JsCopier: {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (!!x.$is_NativeJsSendPort)
      return new H._NativeJsSendPort(x._receivePort, x._isolateId);
    if (!!x.$is_WorkerSendPort)
      return new H._WorkerSendPort(x._workerId, x._receivePortId, x._isolateId);
    throw H.wrapException("Illegal underlying port " + H.S(x));
  }
},

_JsDeserializer: {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(list) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = J.getInterceptor$asx(list);
    managerId = t1.$index(list, 1);
    isolateId = t1.$index(list, 2);
    receivePortId = t1.$index(list, 3);
    if (J.$eq(managerId, $globalState.currentManagerId)) {
      t1 = $globalState.isolates;
      isolate = t1.$index(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return new H._NativeJsSendPort(receivePort, isolateId);
    } else
      return new H._WorkerSendPort(managerId, receivePortId, isolateId);
  }
},

_JsVisitedMap: {"": "Object;tagged",
  $index: function(_, object) {
    return object.__MessageTraverser__attached_info__;
  },
  $indexSet: function(_, object, info) {
    this.tagged.push(object);
    object.__MessageTraverser__attached_info__ = info;
  },
  reset$0: function(_) {
    this.tagged = P.List_List(null, null);
  },
  cleanup$0: function() {
    var $length, i, t1;
    for ($length = this.tagged.length, i = 0; i < $length; ++i) {
      t1 = this.tagged;
      if (i >= t1.length)
        throw H.ioore(t1, i);
      t1[i].__MessageTraverser__attached_info__ = null;
    }
    this.tagged = null;
  }
},

_MessageTraverserVisitedMap: {"": "Object;",
  $index: function(_, object) {
    return;
  },
  $indexSet: function(_, object, info) {
  },
  reset$0: function(_) {
  },
  cleanup$0: function() {
  }
},

_MessageTraverser: {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    if (H._MessageTraverser_isPrimitive(x))
      return this.visitPrimitive$1(x);
    t1 = this._visited;
    t1.reset$0(t1);
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    var t1;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    t1 = J.getInterceptor(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || !!t1.$isList))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!t1.$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!t1.$isSendPort)
      return this.visitSendPort$1(x);
    return this.visitObject$1(x);
  },
  get$_dispatch: function() {
    return new B.BoundClosure$1(this, H._MessageTraverser.prototype._dispatch$1, null, "_dispatch$1");
  },
  visitObject$1: function(x) {
    throw H.wrapException("Message serialization: Illegal value " + H.S(x) + " passed");
  }
},

_Copier: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, t2, i, t3;
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    t1 = J.getInterceptor$asx(list);
    len = t1.get$length(list);
    copy = P.List_List(len, null);
    t2 = this._visited;
    t2.$indexSet(t2, list, copy);
    if (typeof len !== "number")
      throw H.iae(len);
    t2 = copy.length;
    i = 0;
    for (; i < len; ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw H.ioore(copy, i);
      copy[i] = t3;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = t2.$index(t2, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    t2 = this._visited;
    t2.$indexSet(t2, map, t1.copy_0);
    map.forEach$1(map, new H._Copier_visitMap_closure(t1, this));
    return t1.copy_0;
  }
},

_Copier_visitMap_closure: {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1 = this.this_1;
    J.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

_Serializer: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, map, id);
    return ["map", id, this._serializeList$1(J.toList$0$ax(map.get$keys())), this._serializeList$1(J.toList$0$ax(map.get$values(map)))];
  },
  _serializeList$1: function(list) {
    var t1, len, result, t2, i, t3;
    t1 = J.getInterceptor$asx(list);
    len = t1.get$length(list);
    result = P.List_List(len, null);
    if (typeof len !== "number")
      throw H.iae(len);
    t2 = result.length;
    i = 0;
    for (; i < len; ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw H.ioore(result, i);
      result[i] = t3;
    }
    return result;
  }
},

_Deserializer: {"": "Object;",
  deserialize$1: function(x) {
    if (H._Deserializer_isPrimitive(x))
      return x;
    this._deserialized = P.HashMap_HashMap(null, null, null, null, null);
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    var t1, id;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    t1 = J.getInterceptor$asx(x);
    switch (t1.$index(x, 0)) {
      case "ref":
        id = t1.$index(x, 1);
        t1 = this._deserialized;
        return t1.$index(t1, id);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = J.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    t1 = J.getInterceptor$asx(dartList);
    len = t1.get$length(dartList);
    if (typeof len !== "number")
      throw H.iae(len);
    i = 0;
    for (; i < len; ++i)
      t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i;
    result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    t1 = J.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, result);
    keys = t1.$index(x, 2);
    values = t1.$index(x, 3);
    t1 = J.getInterceptor$asx(keys);
    len = t1.get$length(keys);
    if (typeof len !== "number")
      throw H.iae(len);
    t2 = J.getInterceptor$asx(values);
    i = 0;
    for (; i < len; ++i)
      result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
    return result;
  },
  deserializeObject$1: function(x) {
    throw H.wrapException("Unexpected serialized object");
  }
},

TimerImpl: {"": "Object;_once,_inEventLoop,_handle",
  TimerImpl$2: function(milliseconds, callback) {
    var t1, t2;
    if (milliseconds === 0)
      t1 = $.get$globalThis().setTimeout == null || $globalState.isWorker === true;
    else
      t1 = false;
    if (t1) {
      this._handle = 1;
      t1 = $globalState.topEventLoop;
      t2 = $globalState.currentContext;
      t1.events._add$1(new H._IsolateEvent(t2, new H.TimerImpl_internalCallback(this, callback), "timer"));
      this._inEventLoop = true;
    } else if ($.get$globalThis().setTimeout != null) {
      t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setTimeout(H.convertDartClosureToJS(new H.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
    } else
      throw H.wrapException(P.UnsupportedError$("Timer greater than 0."));
  },
  static: {
TimerImpl$: function(milliseconds, callback) {
  var t1 = new H.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
}}

},

TimerImpl_internalCallback: {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.this_0._handle = null;
    this.callback_1.call$0();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

TimerImpl_internalCallback0: {"": "Closure;this_2,callback_3",
  call$0: function() {
    this.this_2._handle = null;
    var t1 = $globalState.topEventLoop;
    t1.activeTimerCount = t1.activeTimerCount - 1;
    this.callback_3.call$0();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
}}],
["_js_helper", "dart:_js_helper", , H, {
isJsIndexable: function(object, record) {
  var result, t1;
  if (record != null) {
    result = record.x;
    if (result != null)
      return result;
  }
  t1 = J.getInterceptor(object);
  return typeof object === "object" && object !== null && !!t1.$isJavaScriptIndexingBehavior;
},

S: function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number") {
    if (value !== 0)
      return "" + value;
  } else if (true === value)
    return "true";
  else if (false === value)
    return "false";
  else if (value == null)
    return "null";
  res = J.toString$0(value);
  if (typeof res !== "string")
    throw H.wrapException(P.ArgumentError$(value));
  return res;
},

Primitives_initializeStatics: function(id) {
  $.Primitives_mirrorFunctionCacheName = $.Primitives_mirrorFunctionCacheName + ("_" + H.S(id));
  $.Primitives_mirrorInvokeCacheName = $.Primitives_mirrorInvokeCacheName + ("_" + H.S(id));
},

Primitives_objectHashCode: function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = Math.random() * 0x3fffffff | 0;
    object.$identityHash = hash;
  }
  return hash;
},

Primitives__throwFormatException: function(string) {
  throw H.wrapException(P.FormatException$(string));
},

Primitives_parseInt: function(source, radix, handleError) {
  var match, t1, maxCharCode, digitsPart, i, t2;
  handleError = H.Primitives__throwFormatException$closure;
  if (typeof source !== "string")
    H.throwExpression(new P.ArgumentError(source));
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (radix == null) {
    if (match != null) {
      t1 = match.length;
      if (2 >= t1)
        throw H.ioore(match, 2);
      if (match[2] != null)
        return parseInt(source, 16);
      if (3 >= t1)
        throw H.ioore(match, 3);
      if (match[3] != null)
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    radix = 10;
  } else {
    if (typeof radix !== "number" || Math.floor(radix) !== radix)
      throw H.wrapException(new P.ArgumentError("Radix is not an integer"));
    if (radix < 2 || radix > 36)
      throw H.wrapException(P.RangeError$("Radix " + radix + " not in range 2..36"));
    if (match != null) {
      if (radix === 10) {
        if (3 >= match.length)
          throw H.ioore(match, 3);
        t1 = match[3] != null;
      } else
        t1 = false;
      if (t1)
        return parseInt(source, 10);
      if (radix >= 10) {
        if (3 >= match.length)
          throw H.ioore(match, 3);
        t1 = match[3] == null;
      } else
        t1 = true;
      if (t1) {
        maxCharCode = radix <= 10 ? 48 + radix - 1 : 97 + radix - 10 - 1;
        if (1 >= match.length)
          throw H.ioore(match, 1);
        digitsPart = match[1];
        t1 = J.getInterceptor$asx(digitsPart);
        i = 0;
        while (true) {
          t2 = t1.get$length(digitsPart);
          if (typeof t2 !== "number")
            throw H.iae(t2);
          if (!(i < t2))
            break;
          t1.codeUnitAt$1(digitsPart, 0);
          if (t1.codeUnitAt$1(digitsPart, i) > maxCharCode)
            return handleError.call$1(source);
          ++i;
        }
      }
    }
  }
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
},

Primitives_objectTypeName: function(object) {
  var $name, decompiled, t1;
  $name = H.constructorNameFallback(J.getInterceptor(object));
  if (J.$eq($name, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = J.getInterceptor$s($name);
  if (t1.codeUnitAt$1($name, 0) === 36)
    $name = t1.substring$1($name, 1);
  t1 = H.getRuntimeTypeInfo(object);
  return H.S($name) + H.joinArguments(t1, 0);
},

Primitives_objectToString: function(object) {
  return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
},

Primitives_newFixedList: function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
},

Primitives__fromCharCodeApply: function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result += String.fromCharCode.apply(null, subarray);
  }
  return result;
},

Primitives_stringFromCodePoints: function(codePoints) {
  var a, t1, i;
  a = [];
  for (t1 = new H.ListIterator(codePoints, codePoints.length, 0, null); t1.moveNext$0();) {
    i = t1._dev$_current;
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw H.wrapException(P.ArgumentError$(i));
    if (i <= 65535)
      a.push(i);
    else if (i <= 1114111) {
      a.push(55296 + (C.JSInt_methods.$shr(i - 65536, 10) & 1023));
      a.push(56320 + (i & 1023));
    } else
      throw H.wrapException(P.ArgumentError$(i));
  }
  return H.Primitives__fromCharCodeApply(a);
},

Primitives_stringFromCharCodes: function(charCodes) {
  var t1, i;
  for (t1 = new H.ListIterator(charCodes, charCodes.length, 0, null); t1.moveNext$0();) {
    i = t1._dev$_current;
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw H.wrapException(P.ArgumentError$(i));
    if (i < 0)
      throw H.wrapException(P.ArgumentError$(i));
    if (i > 65535)
      return H.Primitives_stringFromCodePoints(charCodes);
  }
  return H.Primitives__fromCharCodeApply(charCodes);
},

Primitives_lazyAsJsDate: function(receiver) {
  if (receiver.date === void 0)
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
},

Primitives_getYear: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
},

Primitives_getMonth: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
},

Primitives_getDay: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
},

Primitives_getHours: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
},

Primitives_getMinutes: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
},

Primitives_getSeconds: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
},

Primitives_getMilliseconds: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
},

Primitives_getProperty: function(object, key) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw H.wrapException(new P.ArgumentError(object));
  return object[key];
},

Primitives_setProperty: function(object, key, value) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw H.wrapException(new P.ArgumentError(object));
  object[key] = value;
},

Primitives_applyFunction: function($function, positionalArguments, namedArguments) {
  var t1, buffer, $arguments, allNamedArguments, listOfNamedArguments, t2, t3, t4, selectorName, jsFunction;
  t1 = {};
  t1.argumentCount_0 = 0;
  buffer = P.StringBuffer$("");
  $arguments = [];
  t1.argumentCount_0 = t1.argumentCount_0 + J.get$length$asx(positionalArguments);
  C.JSArray_methods.addAll$1($arguments, positionalArguments);
  if ("call$catchAll" in $function) {
    allNamedArguments = $function.call$catchAll();
    if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
      namedArguments.forEach$1(namedArguments, new H.Primitives_applyFunction_closure(allNamedArguments));
    listOfNamedArguments = Object.getOwnPropertyNames(allNamedArguments);
    t2 = t1.argumentCount_0;
    t3 = J.getInterceptor$asx(listOfNamedArguments);
    t4 = t3.get$length(listOfNamedArguments);
    if (typeof t4 !== "number")
      throw H.iae(t4);
    t1.argumentCount_0 = t2 + t4;
    t3.forEach$1(listOfNamedArguments, new H.Primitives_applyFunction_closure0(buffer, $arguments, allNamedArguments));
  } else if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
    namedArguments.forEach$1(namedArguments, new H.Primitives_applyFunction_closure1(t1, buffer, $arguments));
  selectorName = "call$" + t1.argumentCount_0 + H.S(buffer);
  jsFunction = $function[selectorName];
  if (jsFunction == null) {
    if (namedArguments == null)
      t1 = [];
    else {
      t1 = namedArguments.get$keys();
      t1 = P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0));
    }
    return J.noSuchMethod$1($function, new H.JSInvocationMirror(C.Symbol_call, selectorName, 0, $arguments, t1, null));
  }
  return jsFunction.apply($function, $arguments);
},

iae: function(argument) {
  throw H.wrapException(P.ArgumentError$(argument));
},

ioore: function(receiver, index) {
  if (receiver == null)
    J.get$length$asx(receiver);
  if (typeof index !== "number" || Math.floor(index) !== index)
    H.iae(index);
  throw H.wrapException(P.RangeError$value(index));
},

wrapException: function(ex) {
  var wrapper;
  if (ex == null)
    ex = new P.NullThrownError();
  wrapper = new Error();
  wrapper.dartException = ex;
  if ("defineProperty" in Object) {
    Object.defineProperty(wrapper, "message", { get: H.toStringWrapper$closure.call$0 });
    wrapper.name = "";
  } else
    wrapper.toString = H.toStringWrapper$closure.call$0;
  return wrapper;
},

toStringWrapper: function() {
  return J.toString$0(this.dartException);
},

throwExpression: function(ex) {
  throw H.wrapException(ex);
},

makeLiteralListConst: function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
},

unwrapException: function(ex) {
  var t1, message, number, ieErrorCode, t2, t3, t4, nullLiteralCall, t5, t6, t7, t8, t9, match;
  t1 = new H.unwrapException_saveStackTrace(ex);
  if (ex == null)
    return;
  if (typeof ex !== "object")
    return ex;
  if ("dartException" in ex)
    return t1.call$1(ex.dartException);
  else if (!("message" in ex))
    return ex;
  message = ex.message;
  if ("number" in ex && typeof ex.number == "number") {
    number = ex.number;
    ieErrorCode = number & 65535;
    if ((C.JSInt_methods.$shr(number, 16) & 8191) === 10)
      switch (ieErrorCode) {
        case 438:
          return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
        case 445:
        case 5007:
          t2 = H.S(message) + " (Error " + ieErrorCode + ")";
          return t1.call$1(new H.NullError(t2, null));
        default:
      }
  }
  if (ex instanceof TypeError) {
    t2 = $.get$TypeErrorDecoder_noSuchMethodPattern();
    t3 = $.get$TypeErrorDecoder_notClosurePattern();
    t4 = $.get$TypeErrorDecoder_nullCallPattern();
    nullLiteralCall = $.get$TypeErrorDecoder_nullLiteralCallPattern();
    t5 = $.get$TypeErrorDecoder_undefinedCallPattern();
    t6 = $.get$TypeErrorDecoder_undefinedLiteralCallPattern();
    t7 = $.get$TypeErrorDecoder_nullPropertyPattern();
    $.get$TypeErrorDecoder_nullLiteralPropertyPattern();
    t8 = $.get$TypeErrorDecoder_undefinedPropertyPattern();
    t9 = $.get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
    match = t2.matchTypeError$1(message);
    if (match != null)
      return t1.call$1(H.JsNoSuchMethodError$(message, match));
    else {
      match = t3.matchTypeError$1(message);
      if (match != null) {
        match.method = "call";
        return t1.call$1(H.JsNoSuchMethodError$(message, match));
      } else {
        match = t4.matchTypeError$1(message);
        if (match == null) {
          match = nullLiteralCall.matchTypeError$1(message);
          if (match == null) {
            match = t5.matchTypeError$1(message);
            if (match == null) {
              match = t6.matchTypeError$1(message);
              if (match == null) {
                match = t7.matchTypeError$1(message);
                if (match == null) {
                  match = nullLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = t8.matchTypeError$1(message);
                    if (match == null) {
                      match = t9.matchTypeError$1(message);
                      t2 = match != null;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
          } else
            t2 = true;
        } else
          t2 = true;
        if (t2) {
          t2 = match == null ? null : match.method;
          return t1.call$1(new H.NullError(message, t2));
        }
      }
    }
    t2 = typeof message === "string" ? message : "";
    return t1.call$1(new H.UnknownJsTypeError(t2));
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return new P.StackOverflowError();
    return t1.call$1(new P.ArgumentError(null));
  }
  if (typeof InternalError == "function" && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return new P.StackOverflowError();
  return ex;
},

objectHashCode: function(object) {
  if (object == null || typeof object != 'object')
    return J.get$hashCode$(object);
  else
    return H.Primitives_objectHashCode(object);
},

fillLiteralMap: function(keyValuePairs, result) {
  var $length, index, index0, index1;
  $length = keyValuePairs.length;
  for (index = 0; index < $length; index = index1) {
    index0 = index + 1;
    index1 = index0 + 1;
    result.$indexSet(result, keyValuePairs[index], keyValuePairs[index0]);
  }
  return result;
},

invokeClosure: function(closure, isolate, numberOfArguments, arg1, arg2, arg3, arg4) {
  var t1 = J.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0))
    return H._callInIsolate(isolate, new H.invokeClosure_closure(closure));
  else if (t1.$eq(numberOfArguments, 1))
    return H._callInIsolate(isolate, new H.invokeClosure_closure0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2))
    return H._callInIsolate(isolate, new H.invokeClosure_closure1(closure, arg1, arg2));
  else if (t1.$eq(numberOfArguments, 3))
    return H._callInIsolate(isolate, new H.invokeClosure_closure2(closure, arg1, arg2, arg3));
  else if (t1.$eq(numberOfArguments, 4))
    return H._callInIsolate(isolate, new H.invokeClosure_closure3(closure, arg1, arg2, arg3, arg4));
  else
    throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
},

convertDartClosureToJS: function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $function = (function(closure, arity, context, invoke) {  return function(a1, a2, a3, a4) {     return invoke(closure, context, arity, a1, a2, a3, a4);  };})(closure,arity,$globalState.currentContext,H.invokeClosure$closure.call$7);
  closure.$identity = $function;
  return $function;
},

propertyTypeCastError: function(value, property) {
  var t1 = J.getInterceptor$asx(property);
  throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
},

interceptedTypeCast: function(value, property) {
  var t1;
  if (value != null)
    t1 = typeof value === "object" && J.getInterceptor(value)[property];
  else
    t1 = true;
  if (t1)
    return value;
  H.propertyTypeCastError(value, property);
},

listSuperNativeTypeCast: function(value, property) {
  var t1 = J.getInterceptor(value);
  if (typeof value === "object" && value !== null && (value.constructor === Array || !!t1.$isList) || value == null)
    return value;
  if (J.getInterceptor(value)[property])
    return value;
  H.propertyTypeCastError(value, property);
},

throwCyclicInit: function(staticName) {
  throw H.wrapException(P.CyclicInitializationError$("Cyclic initialization for static " + H.S(staticName)));
},

createRuntimeType: function($name) {
  return new H.TypeImpl($name, null);
},

setRuntimeTypeInfo: function(target, typeInfo) {
  if (target != null)
    target.$builtinTypeInfo = typeInfo;
  return target;
},

getRuntimeTypeInfo: function(target) {
  if (target == null)
    return;
  return target.$builtinTypeInfo;
},

getRuntimeTypeArguments: function(target, substitutionName) {
  return H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
},

getRuntimeTypeArgument: function(target, substitutionName, index) {
  var $arguments = H.getRuntimeTypeArguments(target, substitutionName);
  return $arguments == null ? null : $arguments[index];
},

runtimeTypeToString: function(type) {
  if (type == null)
    return "dynamic";
  else if (typeof type === "object" && type !== null && type.constructor === Array)
    return type[0].builtin$cls + H.joinArguments(type, 1);
  else if (typeof type == "function")
    return type.builtin$cls;
  else if (typeof type === "number" && Math.floor(type) === type)
    return C.JSInt_methods.toString$0(type);
  else
    return;
},

joinArguments: function(types, startIndex) {
  var buffer, index, firstArgument, allDynamic, argument, str;
  if (types == null)
    return "";
  buffer = P.StringBuffer$("");
  for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      buffer._contents = buffer._contents + ", ";
    argument = types[index];
    if (argument != null)
      allDynamic = false;
    str = H.runtimeTypeToString(argument);
    str = typeof str === "string" ? str : str;
    buffer._contents = buffer._contents + str;
  }
  return allDynamic ? "" : "<" + H.S(buffer) + ">";
},

substitute: function(substitution, $arguments) {
  if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
    $arguments = substitution;
  else if (typeof substitution == "function") {
    substitution = H.invokeOn(substitution, null, $arguments);
    if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
      $arguments = substitution;
    else if (typeof substitution == "function")
      $arguments = H.invokeOn(substitution, null, $arguments);
  }
  return $arguments;
},

areSubtypes: function(s, t) {
  var len, i;
  if (s == null || t == null)
    return true;
  len = s.length;
  for (i = 0; i < len; ++i)
    if (!H.isSubtype(s[i], t[i]))
      return false;
  return true;
},

computeSignature: function(signature, context, contextName) {
  return H.invokeOn(signature, context, H.getRuntimeTypeArguments(context, contextName));
},

isSupertypeOfNull: function(type) {
  return type == null || type.builtin$cls === "Object" || type.builtin$cls === "Null";
},

checkSubtypeOfRuntimeType: function(o, t) {
  var rti, type;
  if (o == null)
    return H.isSupertypeOfNull(t);
  if (t == null)
    return true;
  rti = H.getRuntimeTypeInfo(o);
  o = J.getInterceptor(o);
  if (rti != null) {
    type = rti.slice();
    type.splice(0, 0, o);
  } else
    type = o;
  return H.isSubtype(type, t);
},

isSubtype: function(s, t) {
  var targetSignatureFunction, t1, typeOfS, t2, typeOfT, substitution;
  if (s === t)
    return true;
  if (s == null || t == null)
    return true;
  if ("func" in t) {
    if (!("func" in s)) {
      if ("$is_" + H.S(t.func) in s)
        return true;
      targetSignatureFunction = s.$signature;
      if (targetSignatureFunction == null)
        return false;
      s = targetSignatureFunction.apply(s, null);
    }
    return H.isFunctionSubtype(s, t);
  }
  if (t.builtin$cls === "Function" && "func" in s)
    return true;
  t1 = typeof s === "object" && s !== null && s.constructor === Array;
  typeOfS = t1 ? s[0] : s;
  t2 = typeof t === "object" && t !== null && t.constructor === Array;
  typeOfT = t2 ? t[0] : t;
  if (!("$is" + H.runtimeTypeToString(typeOfT) in typeOfS))
    return false;
  substitution = typeOfT !== typeOfS ? typeOfS["$as" + H.runtimeTypeToString(typeOfT)] : null;
  if (!t1 && substitution == null || !t2)
    return true;
  t1 = t1 ? s.slice(1) : null;
  t2 = t2 ? t.slice(1) : null;
  return H.areSubtypes(H.substitute(substitution, t1), t2);
},

isAssignable: function(s, t) {
  return H.isSubtype(s, t) || H.isSubtype(t, s);
},

areAssignable: function(s, t, allowShorter) {
  var sLength, tLength, i, t1, t2;
  if (t == null && s == null)
    return true;
  if (t == null)
    return allowShorter;
  if (s == null)
    return false;
  sLength = s.length;
  tLength = t.length;
  if (allowShorter) {
    if (sLength < tLength)
      return false;
  } else if (sLength !== tLength)
    return false;
  for (i = 0; i < tLength; ++i) {
    t1 = s[i];
    t2 = t[i];
    if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
      return false;
  }
  return true;
},

areAssignableMaps: function(s, t) {
  if (t == null)
    return true;
  if (s == null)
    return false;
  return      function (t, s, isAssignable) {
       for (var $name in t) {
         if (!s.hasOwnProperty($name)) {
           return false;
         }
         var tType = t[$name];
         var sType = s[$name];
         if (!isAssignable.call$2(sType, tType)) {
          return false;
         }
       }
       return true;
     }(t, s, H.isAssignable$closure)
  ;
},

isFunctionSubtype: function(s, t) {
  var sReturnType, tReturnType, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, t1, t2, tPos, sPos;
  if (!("func" in s))
    return false;
  if ("void" in s) {
    if (!("void" in t) && "ret" in t)
      return false;
  } else if (!("void" in t)) {
    sReturnType = s.ret;
    tReturnType = t.ret;
    if (!(H.isSubtype(sReturnType, tReturnType) || H.isSubtype(tReturnType, sReturnType)))
      return false;
  }
  sParameterTypes = s.args;
  tParameterTypes = t.args;
  sOptionalParameterTypes = s.opt;
  tOptionalParameterTypes = t.opt;
  sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
  tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
  sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
  tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
  if (sParametersLen > tParametersLen)
    return false;
  if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
    return false;
  if (sParametersLen === tParametersLen) {
    if (!H.areAssignable(sParameterTypes, tParameterTypes, false))
      return false;
    if (!H.areAssignable(sOptionalParameterTypes, tOptionalParameterTypes, true))
      return false;
  } else {
    for (pos = 0; pos < sParametersLen; ++pos) {
      t1 = sParameterTypes[pos];
      t2 = tParameterTypes[pos];
      if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
        return false;
    }
    for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos) {
      t1 = sOptionalParameterTypes[sPos];
      t2 = tParameterTypes[tPos];
      if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
        return false;
    }
    for (sPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos) {
      t1 = tOptionalParameterTypes[sPos];
      t2 = tOptionalParameterTypes[tPos];
      if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
        return false;
    }
  }
  return H.areAssignableMaps(s.named, t.named);
},

invokeOn: function($function, receiver, $arguments) {
  return $function.apply(receiver, $arguments);
},

typeNameInChrome: function(obj) {
  return obj.constructor.name;
},

typeNameInSafari: function(obj) {
  return H.constructorNameFallback(obj);
},

typeNameInOpera: function(obj) {
  return H.constructorNameFallback(obj);
},

typeNameInFirefox: function(obj) {
  var $name = H.constructorNameFallback(obj);
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
},

typeNameInIE: function(obj) {
  var $name = H.constructorNameFallback(obj);
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && obj instanceof window.DataView)
      return "DataView";
  return $name;
},

constructorNameFallback: function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof $constructor === "function") {
    $name = $constructor.builtin$cls;
    if ($name != null)
      return $name;
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
},

alternateTag: function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
},

getFunctionForTypeNameOf: function() {
  var getTagFunction = H.getBaseFunctionForTypeNameOf();
  if (typeof dartExperimentalFixupGetTag == "function")
    return H.applyExperimentalFixup(dartExperimentalFixupGetTag, getTagFunction);
  return getTagFunction;
},

getBaseFunctionForTypeNameOf: function() {
  if (typeof navigator !== "object")
    return H.typeNameInChrome$closure;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return H.typeNameInChrome$closure;
  else if (userAgent.indexOf("Firefox") !== -1)
    return H.typeNameInFirefox$closure;
  else if (userAgent.indexOf("Trident/") !== -1)
    return H.typeNameInIE$closure;
  else if (userAgent.indexOf("Opera") !== -1)
    return H.typeNameInOpera$closure;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return H.typeNameInSafari$closure;
  else
    return H.constructorNameFallback$closure;
},

applyExperimentalFixup: function(fixupJSFunction, originalGetTagDartFunction) {
  return new H.applyExperimentalFixup_newGetTagDartFunction(fixupJSFunction((function(invoke, closure){return function(arg){ return invoke(closure, arg); };})(H.callDartFunctionWith1Arg$closure.call$2, originalGetTagDartFunction)));
},

callDartFunctionWith1Arg: function(fn, arg) {
  return fn.call$1(arg);
},

toStringForNativeObject: function(obj) {
  return "Instance of " + $.get$getTypeNameOf().call$1(obj);
},

hashCodeForNativeObject: function(object) {
  return H.Primitives_objectHashCode(object);
},

defineProperty: function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
},

lookupInterceptor: function(hasOwnPropertyFunction, tag) {
  var map = init.interceptorsByTag;
  return hasOwnPropertyFunction.call(map, tag) ? map[tag] : null;
},

lookupDispatchRecord: function(obj) {
  var hasOwnPropertyFunction, tag, interceptorClass, secondTag, interceptor;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  tag = $.get$getTypeNameOf().call$1(obj);
  interceptorClass = H.lookupInterceptor(hasOwnPropertyFunction, tag);
  if (interceptorClass == null) {
    secondTag = H.alternateTag(obj, tag);
    if (secondTag != null)
      interceptorClass = H.lookupInterceptor(hasOwnPropertyFunction, secondTag);
  }
  if (interceptorClass == null)
    return;
  interceptor = interceptorClass.prototype;
  if (init.leafTags[tag] === true)
    return H.makeLeafDispatchRecord(interceptor);
  else
    return J.makeDispatchRecord(interceptor, Object.getPrototypeOf(obj), null, null);
},

makeLeafDispatchRecord: function(interceptor) {
  return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
},

makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
  var interceptor = interceptorClass.prototype;
  if (init.leafTags[tag] === true)
    return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  else
    return J.makeDispatchRecord(interceptor, proto, null, null);
},

initNativeDispatch: function() {
  var context, map, tags, i, tag, proto, record;
  $.initNativeDispatchFlag = true;
  if (typeof window != "undefined") {
    context = window;
    map = init.interceptorsByTag;
    tags = Object.getOwnPropertyNames(map);
    for (i = 0; i < tags.length; ++i) {
      tag = tags[i];
      if (typeof context[tag] == "function") {
        proto = context[tag].prototype;
        if (proto != null) {
          record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
          if (record != null)
            Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        }
      }
    }
  }
},

regExpGetGlobalNative: function(regexp) {
  var nativeRegexp = regexp.get$_nativeGlobalVersion();
  nativeRegexp.lastIndex = 0;
  return nativeRegexp;
},

stringContainsUnchecked: function(receiver, other, startIndex) {
  return C.JSString_methods.indexOf$2(receiver, other, startIndex) !== -1;
},

stringReplaceAllUnchecked: function(receiver, from, to) {
  return receiver.replace(H.regExpGetGlobalNative(from), to.replace("$", "$$$$"));
},

JSInvocationMirror: {"": "Object;__js_helper$_memberName,_internalName,_kind,_arguments,_namedArgumentNames,_namedIndices",
  get$memberName: function() {
    return this.__js_helper$_memberName;
  },
  get$positionalArguments: function() {
    var t1, argumentCount, list, index;
    if (this._kind === 1)
      return C.List_empty;
    t1 = this._arguments;
    argumentCount = t1.length - this._namedArgumentNames.length;
    if (argumentCount === 0)
      return C.List_empty;
    list = [];
    for (index = 0; index < argumentCount; ++index) {
      if (index >= t1.length)
        throw H.ioore(t1, index);
      list.push(t1[index]);
    }
    return H.makeLiteralListConst(list);
  },
  get$namedArguments: function() {
    var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, t3, t4;
    if (this._kind !== 0)
      return H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t1 = this._namedArgumentNames;
    namedArgumentCount = t1.length;
    t2 = this._arguments;
    namedArgumentsStartIndex = t2.length - namedArgumentCount;
    if (namedArgumentCount === 0)
      return H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    map = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol, null);
    for (i = 0; i < namedArgumentCount; ++i) {
      if (i >= t1.length)
        throw H.ioore(t1, i);
      t3 = t1[i];
      t4 = namedArgumentsStartIndex + i;
      if (t4 < 0 || t4 >= t2.length)
        throw H.ioore(t2, t4);
      map.$indexSet(map, new H.Symbol0(t3), t2[t4]);
    }
    return map;
  },
  static: {
"": "JSInvocationMirror_METHOD,JSInvocationMirror_GETTER,JSInvocationMirror_SETTER",
}

},

Primitives_applyFunction_closure: {"": "Closure;allNamedArguments_1",
  call$2: function(key, argument) {
    this.allNamedArguments_1[key] = argument;
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

Primitives_applyFunction_closure0: {"": "Closure;buffer_2,arguments_3,allNamedArguments_4",
  call$1: function($name) {
    this.buffer_2.write$1("$" + H.S($name));
    this.arguments_3.push(this.allNamedArguments_4[$name]);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Primitives_applyFunction_closure1: {"": "Closure;box_0,buffer_5,arguments_6",
  call$2: function($name, argument) {
    var t1;
    this.buffer_5.write$1("$" + H.S($name));
    this.arguments_6.push(argument);
    t1 = this.box_0;
    t1.argumentCount_0 = t1.argumentCount_0 + 1;
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

TypeErrorDecoder: {"": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver",
  matchTypeError$1: function(message) {
    var match, result, t1;
    match = new RegExp(this._pattern).exec(message);
    if (match == null)
      return;
    result = {};
    t1 = this._arguments;
    if (t1 !== -1)
      result.arguments = match[t1 + 1];
    t1 = this._argumentsExpr;
    if (t1 !== -1)
      result.argumentsExpr = match[t1 + 1];
    t1 = this._expr;
    if (t1 !== -1)
      result.expr = match[t1 + 1];
    t1 = this._method;
    if (t1 !== -1)
      result.method = match[t1 + 1];
    t1 = this._receiver;
    if (t1 !== -1)
      result.receiver = match[t1 + 1];
    return result;
  },
  static: {
"": "TypeErrorDecoder_noSuchMethodPattern,TypeErrorDecoder_notClosurePattern,TypeErrorDecoder_nullCallPattern,TypeErrorDecoder_nullLiteralCallPattern,TypeErrorDecoder_undefinedCallPattern,TypeErrorDecoder_undefinedLiteralCallPattern,TypeErrorDecoder_nullPropertyPattern,TypeErrorDecoder_nullLiteralPropertyPattern,TypeErrorDecoder_undefinedPropertyPattern,TypeErrorDecoder_undefinedLiteralPropertyPattern",
TypeErrorDecoder_extractPattern: function(message) {
  var match, $arguments, argumentsExpr, expr, method, receiver;
  message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
  match = message.match(/\\\$[a-zA-Z]+\\\$/g);
  if (match == null)
    match = [];
  $arguments = match.indexOf("\\$arguments\\$");
  argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
  expr = match.indexOf("\\$expr\\$");
  method = match.indexOf("\\$method\\$");
  receiver = match.indexOf("\\$receiver\\$");
  return new H.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
},

TypeErrorDecoder_provokeCallErrorOn: function(expression) {
  return function($expr$) {
  var $argumentsExpr$ = '$arguments$'
  try {
    $expr$.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}(expression);
},

TypeErrorDecoder_provokeCallErrorOnNull: function() {
  return function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    null.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokeCallErrorOnUndefined: function() {
  return function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    (void 0).$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
  return function($expr$) {
  try {
    $expr$.$method$;
  } catch (e) {
    return e.message;
  }
}(expression);
},

TypeErrorDecoder_provokePropertyErrorOnNull: function() {
  return function() {
  try {
    null.$method$;
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokePropertyErrorOnUndefined: function() {
  return function() {
  try {
    (void 0).$method$;
  } catch (e) {
    return e.message;
  }
}();
}}

},

NullError: {"": "Error;_message,_method",
  toString$0: function(_) {
    var t1 = this._method;
    if (t1 == null)
      return "NullError: " + H.S(this._message);
    return "NullError: Cannot call \"" + H.S(t1) + "\" on null";
  },
  $isError: true
},

JsNoSuchMethodError: {"": "Error;_message,_method,_receiver",
  toString$0: function(_) {
    var t1, t2;
    t1 = this._method;
    if (t1 == null)
      return "NoSuchMethodError: " + H.S(this._message);
    t2 = this._receiver;
    if (t2 == null)
      return "NoSuchMethodError: Cannot call \"" + t1 + "\" (" + H.S(this._message) + ")";
    return "NoSuchMethodError: Cannot call \"" + t1 + "\" on \"" + t2 + "\" (" + H.S(this._message) + ")";
  },
  $isError: true,
  static: {
JsNoSuchMethodError$: function(_message, match) {
  var t1, t2;
  t1 = match == null;
  t2 = t1 ? null : match.method;
  t1 = t1 ? null : match.receiver;
  return new H.JsNoSuchMethodError(_message, t2, t1);
}}

},

UnknownJsTypeError: {"": "Error;_message",
  toString$0: function(_) {
    var t1 = this._message;
    return C.JSString_methods.get$isEmpty(t1) ? "Error" : "Error: " + t1;
  }
},

unwrapException_saveStackTrace: {"": "Closure;ex_0",
  call$1: function(error) {
    var t1 = J.getInterceptor(error);
    if (typeof error === "object" && error !== null && !!t1.$isError)
      if (error.$thrownJsError == null)
        error.$thrownJsError = this.ex_0;
    return error;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_StackTrace: {"": "Object;_exception,_trace",
  toString$0: function(_) {
    var t1, trace;
    t1 = this._trace;
    if (t1 != null)
      return t1;
    t1 = this._exception;
    trace = typeof t1 === "object" ? t1.stack : null;
    t1 = trace == null ? "" : trace;
    this._trace = t1;
    return t1;
  }
},

invokeClosure_closure: {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

invokeClosure_closure0: {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

invokeClosure_closure1: {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

invokeClosure_closure2: {"": "Closure;closure_6,arg1_7,arg2_8,arg3_9",
  call$0: function() {
    return this.closure_6.call$3(this.arg1_7, this.arg2_8, this.arg3_9);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

invokeClosure_closure3: {"": "Closure;closure_10,arg1_11,arg2_12,arg3_13,arg4_14",
  call$0: function() {
    return this.closure_10.call$4(this.arg1_11, this.arg2_12, this.arg3_13, this.arg4_14);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Closure: {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  },
  $isFunction: true
},

BoundClosure: {"": "Closure;_self,__js_helper$_target,_receiver,__js_helper$_name",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (this === other)
      return true;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isBoundClosure)
      return false;
    return this._self === other._self && this.__js_helper$_target === other.__js_helper$_target && this._receiver === other._receiver;
  },
  get$hashCode: function(_) {
    var t1, receiverHashCode;
    t1 = this._receiver;
    if (t1 == null)
      receiverHashCode = H.Primitives_objectHashCode(this._self);
    else
      receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
    return (receiverHashCode ^ H.Primitives_objectHashCode(this.__js_helper$_target)) >>> 0;
  },
  $isBoundClosure: true
},

CastErrorImplementation: {"": "Error;message",
  toString$0: function(_) {
    return this.message;
  },
  $isError: true,
  static: {
CastErrorImplementation$: function(actualType, expectedType) {
  return new H.CastErrorImplementation("CastError: Casting value of type " + actualType + " to incompatible type " + H.S(expectedType));
}}

},

TypeImpl: {"": "Object;_typeName,_unmangledName",
  toString$0: function(_) {
    var t1, unmangledName, unmangledName0;
    t1 = this._unmangledName;
    if (t1 != null)
      return t1;
    unmangledName = this._typeName;
    unmangledName0 = H.unmangleGlobalNameIfPreservedAnyways(unmangledName);
    unmangledName = unmangledName0 == null ? unmangledName : unmangledName0;
    this._unmangledName = unmangledName;
    return unmangledName;
  },
  get$hashCode: function(_) {
    return J.get$hashCode$(this._typeName);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$isTypeImpl && J.$eq(this._typeName, other._typeName);
  },
  $isTypeImpl: true
},

applyExperimentalFixup_newGetTagDartFunction: {"": "Closure;newGetTagJSFunction_0",
  call$1: function(object) {
    return this.newGetTagJSFunction_0(object);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

JSSyntaxRegExp: {"": "Object;_nativeRegExp,_nativeGlobalRegExp,_nativeAnchoredRegExp",
  get$_nativeGlobalVersion: function() {
    var t1 = this._nativeGlobalRegExp;
    if (t1 != null)
      return t1;
    t1 = this._nativeRegExp;
    t1 = H.JSSyntaxRegExp_makeNative(t1.source, t1.multiline, !t1.ignoreCase, true);
    this._nativeGlobalRegExp = t1;
    return t1;
  },
  get$_nativeAnchoredVersion: function() {
    var t1 = this._nativeAnchoredRegExp;
    if (t1 != null)
      return t1;
    t1 = this._nativeRegExp;
    t1 = H.JSSyntaxRegExp_makeNative(t1.source + "|()", t1.multiline, !t1.ignoreCase, true);
    this._nativeAnchoredRegExp = t1;
    return t1;
  },
  firstMatch$1: function(str) {
    var m;
    if (typeof str !== "string")
      H.throwExpression(new P.ArgumentError(str));
    m = this._nativeRegExp.exec(str);
    if (m == null)
      return;
    return H._MatchImplementation$(this, m);
  },
  _execAnchored$2: function(string, start) {
    var regexp, match, t1, t2;
    regexp = this.get$_nativeAnchoredVersion();
    regexp.lastIndex = start;
    match = regexp.exec(string);
    if (match == null)
      return;
    t1 = match.length;
    t2 = t1 - 1;
    if (t2 < 0)
      throw H.ioore(match, t2);
    if (match[t2] != null)
      return;
    J.set$length$asx(match, t2);
    return H._MatchImplementation$(this, match);
  },
  matchAsPrefix$2: function(_, string, start) {
    if (start < 0 || start > string.length)
      throw H.wrapException(P.RangeError$range(start, 0, string.length));
    return this._execAnchored$2(string, start);
  },
  static: {
JSSyntaxRegExp_makeNative: function(pattern, multiLine, caseSensitive, global) {
  var m, i, g, regexp, errorMessage;
  m = multiLine ? "m" : "";
  i = caseSensitive ? "" : "i";
  g = global ? "g" : "";
  regexp = (function() {try {return new RegExp(pattern, m + i + g);} catch (e) {return e;}})();
  if (regexp instanceof RegExp)
    return regexp;
  errorMessage = String(regexp);
  throw H.wrapException(P.FormatException$("Illegal RegExp pattern: " + pattern + ", " + errorMessage));
}}

},

_MatchImplementation: {"": "Object;pattern,_match",
  $index: function(_, index) {
    var t1 = this._match;
    if (index >>> 0 !== index || index >= t1.length)
      throw H.ioore(t1, index);
    return t1[index];
  },
  _MatchImplementation$2: function(pattern, _match) {
  },
  static: {
_MatchImplementation$: function(pattern, _match) {
  var t1 = new H._MatchImplementation(pattern, _match);
  t1._MatchImplementation$2(pattern, _match);
  return t1;
}}

},

StringMatch: {"": "Object;start,input,pattern",
  $index: function(_, g) {
    if (!J.$eq(g, 0))
      H.throwExpression(P.RangeError$value(g));
    return this.pattern;
  }
}}],
["accountComponent", "_from_packages/ams/views/main/menu-account.dart", , G, {
MenuAccount: {"": "WebComponent_Observable;_accountComponent$_css,__e19,_accountComponent$__t,ini<,_accountComponent$__$data,hostClasses,hostAttributes,$$_observers,$$_changes,hashCode,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, __binding18;
    __root = this.createShadowRoot$1(this, "account-item");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["account-item", "[is=\"account-item\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._accountComponent$_css = this._mapper;
    this._accountComponent$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$MenuAccount___shadowTemplate(), true));
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    this.__e19 = t1[1];
    __binding18 = this._accountComponent$__t.contentBind$2(new G.MenuAccount_created_autogenerated_closure(this), false);
    J.get$nodes$x(this.__e19)._this.appendChild(__binding18);
    this._accountComponent$__t.listen$2(J.get$onClick$x(this.__e19), new G.MenuAccount_created_autogenerated_closure0(this));
    this._accountComponent$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._accountComponent$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._accountComponent$__t;
    t1.remove$0(t1);
    this.__e19 = null;
    this._accountComponent$__t = null;
  },
  get$data: function(_) {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "data");
    return this._accountComponent$__$data;
  },
  set$data: function(_, value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "data", this._accountComponent$__$data, value);
    this._accountComponent$__$data = value;
  },
  show$0: function(_) {
    var t1, t2, t3;
    t1 = $.get$Controller__singleton();
    t2 = J.toString$0(J.get$id$x(J.get$data$x(J.get$first$ax(J.get$reversed$ax($.get$Controller__singleton().data.get$folder())))));
    t3 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t3;
    t3 = new B.ShowAccountComponent(null, null, null, null, null, null, null, null, null, null, false, null, "*******", t2, null, null, t3, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t3.set$data(t3, this.get$data(this));
    t1.pageComp.loadePage$1(t3);
  },
  static: {
"": "MenuAccount___shadowTemplate",
}

},

WebComponent_Observable: {"": "WebComponent+Observable;$$_observers@,$$_changes@,hashCode>", $isObservable: true},

MenuAccount_created_autogenerated_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    return J.get$name$x(t1.get$data(t1));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

MenuAccount_created_autogenerated_closure0: {"": "Closure;this_1",
  call$1: function($$event) {
    var t1 = this.this_1;
    t1.show$0(t1);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["accountOverview", "_from_packages/ams/views/page/account-overview.dart", , G, {
AccountOverview: {"": "WebPage_Observable;_accountOverview$_css,__e60,__e61,__e62,__e56,__e59,_accountOverview$__t,ini<,_accountOverview$__$folder,_accountOverview$__$selectedFolder,id*,accounts,$$_observers,$$_changes,hashCode,Controller0$WebPage$ini,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, t2, __binding55, t3;
    __root = this.createShadowRoot$1(this, "account-overview");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["account-overview", "[is=\"account-overview\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._accountOverview$_css = this._mapper;
    this._accountOverview$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$AccountOverview___shadowTemplate(), true));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e56 = t2[1];
    __binding55 = this._accountOverview$__t.contentBind$2(new G.AccountOverview_created_autogenerated_closure(this), false);
    J.get$nodes$x(this.__e56)._this.appendChild(__binding55);
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e59 = t2[1];
    this._accountOverview$__t.listen$2(J.get$onChange$x(this.__e59), new G.AccountOverview_created_autogenerated_closure0(this));
    t2 = this._accountOverview$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t3 = true;
    } else
      t3 = false;
    t3 = t3 ? $.get$readCurrentStackTrace().call$0() : null;
    t2.push(new V.DomPropertyBinding(new G.AccountOverview_created_autogenerated_closure1(this), false, new G.AccountOverview_created_autogenerated_closure2(this), false, t3, null));
    t3 = this._accountOverview$__t;
    t2 = this.__e59;
    t3.children.push(new V.LoopTemplateInAttribute(new G.AccountOverview_created_autogenerated_closure3(), new G.AccountOverview_created_autogenerated_closure4(this), null, t2, [], []));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    this.__e60 = t2[3];
    this._accountOverview$__t.listen$2(J.get$onClick$x(this.__e60), new G.AccountOverview_created_autogenerated_closure5(this));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (5 >= t2.length)
      throw H.ioore(t2, 5);
    this.__e61 = t2[5];
    this._accountOverview$__t.listen$2(J.get$onClick$x(this.__e61), new G.AccountOverview_created_autogenerated_closure6(this));
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t1.length)
      throw H.ioore(t1, 3);
    t1 = J.get$nodes$x(t1[3])._this.childNodes;
    if (7 >= t1.length)
      throw H.ioore(t1, 7);
    this.__e62 = t1[7];
    this._accountOverview$__t.listen$2(J.get$onClick$x(this.__e62), new G.AccountOverview_created_autogenerated_closure7(this));
    this._accountOverview$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._accountOverview$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._accountOverview$__t;
    t1.remove$0(t1);
    this.__e62 = null;
    this.__e61 = null;
    this.__e60 = null;
    this.__e59 = null;
    this.__e56 = null;
    this._accountOverview$__t = null;
  },
  getPageUrl$0: function() {
    return C.JSString_methods.$add($.AccountOverview_pageUrl + "/", J.toString$0(J.get$id$x(this.get$folder())));
  },
  get$folder: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "folder");
    return this._accountOverview$__$folder;
  },
  set$folder: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "folder", this._accountOverview$__$folder, value);
    this._accountOverview$__$folder = value;
  },
  get$selectedFolder: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "selectedFolder");
    return this._accountOverview$__$selectedFolder;
  },
  set$selectedFolder: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "selectedFolder", this._accountOverview$__$selectedFolder, value);
    this._accountOverview$__$selectedFolder = value;
  },
  init$0: function() {
    J.forEach$1$ax(J.get$reversed$ax($.get$Controller__singleton().data.get$account()), new G.AccountOverview_init_closure(this));
  },
  clickSelect$1: function(e) {
    var t1, t2, id;
    t1 = J.getInterceptor$x(e);
    t2 = J.get$attributes$x(H.interceptedTypeCast(J.get$parent$x(t1.get$target(e)), "$isElement"));
    t2.forEach$1(t2, new G.AccountOverview_clickSelect_closure());
    id = J.get$attributes$x(H.interceptedTypeCast(t1.get$target(e), "$isElement"))._element.getAttribute("account");
    t1 = this.accounts;
    t1.$index(t1, id).set$isSelected(true);
    t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1(C.JSString_methods.$add("#acc", id)).toggleClass$1("selected");
    t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1(C.JSString_methods.$add("#acc", id) + " .listviewSelectButton").toggleClass$1("blue");
  },
  get$clickSelect: function() {
    return new B.BoundClosure$1(this, G.AccountOverview.prototype.clickSelect$1, null, "clickSelect$1");
  },
  remove$0: function(_) {
    var dialog, t1;
    dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Warning..!", "content", "Are you sure to delete the accounts?", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["No", H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "Yes", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new G.AccountOverview_remove_closure(this))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").Dialog$1(dialog);
  },
  move$0: function() {
    var dialog, t1;
    dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Warning..!", "content", "Are you sure to move the accounts?", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["No", H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "Yes", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new G.AccountOverview_move_closure(this))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").Dialog$1(dialog);
  },
  rename$0: function() {
    var dialog, t1;
    dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Warning..!", "content", "Enter your new Foldername:<br><br><div class=\"input-control text\"><input autofocus=\"true\" id=\"foldername\" type=\"text\" /><button class=\"btn-clear\"></button></div>", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["No", H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "Yes", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new G.AccountOverview_rename_closure(this))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").Dialog$1(dialog);
  },
  AccountOverview$1: function(folderid) {
    this.set$folder(J.get$data$x(J.firstWhere$1$ax($.get$Controller__singleton().data.get$folder(), new G.AccountOverview_closure(folderid))));
  },
  static: {
"": "AccountOverview___html1,AccountOverview___shadowTemplate,AccountOverview_pageUrl",
AccountOverview$: function(folderid) {
  var t1, t2, t3;
  t1 = J.toString$0(J.get$id$x(J.get$data$x(J.get$first$ax(J.get$reversed$ax($.get$Controller__singleton().data.get$folder())))));
  t2 = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
  t3 = $.Observable_$_nextHashCode + 1;
  $.Observable_$_nextHashCode = t3;
  t3 = new G.AccountOverview(null, null, null, null, null, null, null, true, null, t1, null, t2, null, null, t3, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
  t3.AccountOverview$1(folderid);
  return t3;
}}

},

WebPage_Observable: {"": "WebPage+Observable;$$_observers@,$$_changes@,hashCode>", $isObservable: true},

AccountOverview_created_autogenerated_closure: {"": "Closure;this_1",
  call$0: function() {
    return J.get$name$x(this.this_1.get$folder());
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverview_created_autogenerated_closure0: {"": "Closure;this_2",
  call$1: function($$event) {
    var t1 = this.this_2;
    t1.set$selectedFolder(J.get$value$x(t1.__e59));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverview_created_autogenerated_closure2: {"": "Closure;this_3",
  call$0: function() {
    return this.this_3.get$selectedFolder();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverview_created_autogenerated_closure1: {"": "Closure;this_4",
  call$1: function(e) {
    var t1 = this.this_4;
    if (!J.$eq(J.get$value$x(t1.__e59), e))
      J.set$value$x(t1.__e59, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverview_created_autogenerated_closure4: {"": "Closure;this_5",
  call$0: function() {
    return P.List_List$from(J.get$reversed$ax($.get$Controller__singleton().data.get$folder()), true, null);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverview_created_autogenerated_closure3: {"": "Closure;",
  call$3: function($$list, $$index, __t) {
    var t1, folder, __binding57;
    t1 = {};
    folder = J.$index$asx($$list, $$index);
    t1.__e58_0 = null;
    t1.__e58_0 = $.get$AccountOverview___html1().cloneNode(true);
    __binding57 = __t.contentBind$2(new G.AccountOverview_created_autogenerated__closure(folder), false);
    J.get$nodes$x(t1.__e58_0)._this.appendChild(__binding57);
    __t.oneWayBind$4(new G.AccountOverview_created_autogenerated__closure0(folder), new G.AccountOverview_created_autogenerated__closure1(t1), false, false);
    J.addAll$1$ax(__t, [document.createTextNode("\n            "), t1.__e58_0, document.createTextNode("\n          ")]);
  },
  "+call:3:0": 0,
  $isFunction: true
},

AccountOverview_created_autogenerated__closure: {"": "Closure;folder_6",
  call$0: function() {
    return J.get$name$x(J.get$data$x(this.folder_6));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverview_created_autogenerated__closure0: {"": "Closure;folder_7",
  call$0: function() {
    return J.toString$0(J.get$id$x(J.get$data$x(this.folder_7)));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverview_created_autogenerated__closure1: {"": "Closure;box_0",
  call$1: function(e) {
    var t1 = this.box_0;
    if (!J.$eq(J.get$value$x(t1.__e58_0), e))
      J.set$value$x(t1.__e58_0, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverview_created_autogenerated_closure5: {"": "Closure;this_8",
  call$1: function($$event) {
    this.this_8.move$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverview_created_autogenerated_closure6: {"": "Closure;this_9",
  call$1: function($$event) {
    var t1 = this.this_9;
    t1.remove$0(t1);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverview_created_autogenerated_closure7: {"": "Closure;this_10",
  call$1: function($$event) {
    this.this_10.rename$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverview_closure: {"": "Closure;folderid_0",
  call$1: function(e) {
    return J.$eq(J.get$id$x(J.get$data$x(e)), this.folderid_0);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverview_init_closure: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2, ul, host, t3, t4, accountElement;
    t1 = J.getInterceptor$x(e);
    t2 = this.this_0;
    if (J.$eq(t1.get$data(e).get$folder(), J.get$id$x(t2.get$folder()))) {
      ul = document.querySelector(".page-region ul");
      host = document.createElement("li", null);
      t3 = J.getInterceptor$x(host);
      t3.set$id(host, C.JSString_methods.$add("acc", J.toString$0(J.get$id$x(t1.get$data(e)))));
      t1 = t3.get$onMouseOver(host);
      t4 = new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(new G.AccountOverview_init__closure(host)), t1._useCapture);
      H.setRuntimeTypeInfo(t4, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
      t4._tryResume$0();
      t3 = t3.get$onMouseOut(host);
      t4 = new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(new G.AccountOverview_init__closure0(host)), t3._useCapture);
      H.setRuntimeTypeInfo(t4, [H.getRuntimeTypeArgument(t3, "_EventStream", 0)]);
      t4._tryResume$0();
      accountElement = new M.AccountOverviewElement(null, null, null, null, null, null, true, e, null, false, false, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      accountElement.set$host(accountElement, host);
      accountElement.folder = t2.get$folder();
      E.addComponent(ul, accountElement, null, null);
      t2.accounts.putIfAbsent$2(J.toString$0(J.get$id$x(J.get$data$x(accountElement.account))), new G.AccountOverview_init__closure1(accountElement));
      t4 = J.get$onClick$x(J.querySelector$1$x(accountElement.get$host(accountElement), ".listviewSelectButton"));
      t3 = t2.get$clickSelect();
      t3 = new W._EventStreamSubscription(0, t4._target, t4._eventType, W._wrapZone(t3), t4._useCapture);
      H.setRuntimeTypeInfo(t3, [H.getRuntimeTypeArgument(t4, "_EventStream", 0)]);
      t3._tryResume$0();
      t3 = J.get$onClick$x(J.querySelector$1$x(accountElement.get$host(accountElement), ".listviewSelectButtonHaken"));
      t2 = t2.get$clickSelect();
      t2 = new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t2), t3._useCapture);
      H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t3, "_EventStream", 0)]);
      t2._tryResume$0();
    }
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverview_init__closure: {"": "Closure;host_1",
  call$1: function(e) {
    var t1, t2;
    t1 = this.host_1;
    t2 = J.getInterceptor$x(t1);
    J.set$display$x(J.get$style$x(t2.querySelector$1(t1, ".listviewSelectButton")), "block");
    J.set$display$x(J.get$style$x(t2.querySelector$1(t1, ".listviewSelectButtonHaken")), "block");
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverview_init__closure0: {"": "Closure;host_2",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.host_2;
    t2 = J.getInterceptor$x(t1);
    t3 = t2.get$classes(t1).readClasses$0();
    if (!t3.contains$1(t3, "selected")) {
      J.set$display$x(J.get$style$x(t2.querySelector$1(t1, ".listviewSelectButton")), "none");
      J.set$display$x(J.get$style$x(t2.querySelector$1(t1, ".listviewSelectButtonHaken")), "none");
    }
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverview_init__closure1: {"": "Closure;accountElement_3",
  call$0: function() {
    return this.accountElement_3;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverview_clickSelect_closure: {"": "Closure;",
  call$2: function(k, v) {
    P.print(J.$add$ns(k, v));
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

AccountOverview_remove_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.accounts;
    t2.forEach$1(t2, new G.AccountOverview_remove__closure(t1));
    t1.remove$0(t1);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverview_remove__closure: {"": "Closure;this_1",
  call$2: function(k, v) {
    var t1 = J.get$classes$x(v).readClasses$0();
    if (t1.contains$1(t1, "selected"))
      $.get$Controller__singleton().removeAccount$2(v.get$account(), this.this_1.get$folder());
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

AccountOverview_move_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.accounts;
    t2.forEach$1(t2, new G.AccountOverview_move__closure(t1));
    t1.remove$0(t1);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverview_move__closure: {"": "Closure;this_1",
  call$2: function(k, v) {
    var t1 = J.get$classes$x(v).readClasses$0();
    if (t1.contains$1(t1, "selected")) {
      t1 = this.this_1;
      $.get$Controller__singleton().moveAccount$3(v.get$account(), t1.get$selectedFolder(), t1.get$folder());
    }
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

AccountOverview_rename_closure: {"": "Closure;this_0",
  call$0: function() {
    var foldername, t1, t2, t3;
    foldername = J.get$value$x(document.querySelector("#foldername"));
    t1 = $.get$Controller__singleton();
    t2 = this.this_0;
    t3 = t2.get$folder();
    J.set$name$x(t3, foldername);
    t1.renameFolder$1(t3);
    t3 = $.get$Controller__singleton();
    t1 = G.AccountOverview$(J.get$id$x(t2.get$folder()));
    t3.pageComp.loadePage$1(t1);
    t2.remove$0(t2);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
}}],
["accountOverviewElement", "_from_packages/ams/views/page/elements/account-overview-element.dart", , M, {
AccountOverviewElement: {"": "WebComponent;_accountOverviewElement$_css,__e66,__e67,__e63,__e64,_accountOverviewElement$__t,ini<,account<,folder@,isremove,isSelected?,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, t2, t3, __binding65;
    __root = this.createShadowRoot$1(this, "account-overview-element");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["account-overview-element", "[is=\"account-overview-element\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._accountOverviewElement$_css = this._mapper;
    this._accountOverviewElement$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$AccountOverviewElement___shadowTemplate(), true));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e63 = t2[1];
    t2 = this._accountOverviewElement$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t3 = true;
    } else
      t3 = false;
    t3 = t3 ? $.get$readCurrentStackTrace().call$0() : null;
    t2.push(new V.DomPropertyBinding(new M.AccountOverviewElement_created_autogenerated_closure(this), false, new M.AccountOverviewElement_created_autogenerated_closure0(this), false, t3, null));
    t3 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    this.__e64 = t3[3];
    t3 = this._accountOverviewElement$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t2 = true;
    } else
      t2 = false;
    t2 = t2 ? $.get$readCurrentStackTrace().call$0() : null;
    t3.push(new V.DomPropertyBinding(new M.AccountOverviewElement_created_autogenerated_closure1(this), false, new M.AccountOverviewElement_created_autogenerated_closure2(this), false, t2, null));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (7 >= t2.length)
      throw H.ioore(t2, 7);
    t2 = J.get$nodes$x(t2[7])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (0 >= t2.length)
      throw H.ioore(t2, 0);
    this.__e66 = t2[0];
    __binding65 = this._accountOverviewElement$__t.contentBind$2(new M.AccountOverviewElement_created_autogenerated_closure3(this), false);
    J.get$nodes$x(this.__e66)._this.appendChild(__binding65);
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (7 >= t1.length)
      throw H.ioore(t1, 7);
    t1 = J.get$nodes$x(t1[7])._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    t1 = J.get$nodes$x(t1[1])._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    this.__e67 = t1[1];
    this._accountOverviewElement$__t.listen$2(J.get$onClick$x(this.__e67), new M.AccountOverviewElement_created_autogenerated_closure4(this));
    this._accountOverviewElement$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._accountOverviewElement$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._accountOverviewElement$__t;
    t1.remove$0(t1);
    this.__e67 = null;
    this.__e66 = null;
    this.__e64 = null;
    this.__e63 = null;
    this._accountOverviewElement$__t = null;
  },
  init$0: function() {
    var t1, t2;
    t1 = this._host;
    if (t1 == null)
      H.throwExpression(new P.StateError("host element has not been set."));
    t1 = J.get$onClick$x(t1);
    t2 = this.get$open(this);
    t2 = new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(t2), t1._useCapture);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
    t2._tryResume$0();
  },
  open$1: function(_, e) {
    if (!this.isSelected && !this.isremove)
      J.show$0$x(this.account);
    this.isSelected = false;
    this.isremove = false;
  },
  get$open: function(_receiver) {
    return new M.BoundClosure$i1(this, M.AccountOverviewElement.prototype.open$1, _receiver, "open$1");
  },
  delete$0: function() {
    var dialog, t1;
    this.isremove = true;
    dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Warning..!", "content", "Are you sure to delete the account?", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["No", H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "Yes", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new M.AccountOverviewElement_delete_closure(this))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").Dialog$1(dialog);
  },
  static: {
"": "AccountOverviewElement___shadowTemplate",
}

},

AccountOverviewElement_created_autogenerated_closure0: {"": "Closure;this_0",
  call$0: function() {
    return J.toString$0(J.get$id$x(J.get$data$x(this.this_0.account)));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverviewElement_created_autogenerated_closure: {"": "Closure;this_1",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_1;
    t2 = J.get$attributes$x(t1.__e63)._element.getAttribute("account");
    if (t2 == null ? e != null : t2 !== e)
      J.get$attributes$x(t1.__e63)._element.setAttribute("account", e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverviewElement_created_autogenerated_closure2: {"": "Closure;this_2",
  call$0: function() {
    return J.toString$0(J.get$id$x(J.get$data$x(this.this_2.account)));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverviewElement_created_autogenerated_closure1: {"": "Closure;this_3",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_3;
    t2 = J.get$attributes$x(t1.__e64)._element.getAttribute("account");
    if (t2 == null ? e != null : t2 !== e)
      J.get$attributes$x(t1.__e64)._element.setAttribute("account", e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverviewElement_created_autogenerated_closure3: {"": "Closure;this_4",
  call$0: function() {
    return J.get$name$x(J.get$data$x(this.this_4.account));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AccountOverviewElement_created_autogenerated_closure4: {"": "Closure;this_5",
  call$1: function($$event) {
    this.this_5.delete$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AccountOverviewElement_delete_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    $.get$Controller__singleton().removeAccount$2(t1.account, t1.folder);
    t2 = $.get$Controller__singleton();
    t1 = G.AccountOverview$(J.get$id$x(t1.folder));
    t2.pageComp.loadePage$1(t1);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
}}],
["addaccount", "_from_packages/ams/views/page/add-account.dart", , D, {
AddAccountComponent: {"": "WebPage_Observable0;_addaccount$_css,__e30,__e31,__e27,__e28,__e29,__e32,__e33,__e34,__e35,__e36,__e26,_addaccount$__t,ini<,_addaccount$__$selectedFolder,_addaccount$__$accName,_addaccount$__$accLogin,_addaccount$__$accPw,pwLength,pwLittle,pwBig,pwNum,pwSpz,isInit,$$_observers,$$_changes,hashCode,Controller0$WebPage$ini,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, t2, t3;
    __root = this.createShadowRoot$1(this, "add-account");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["add-account", "[is=\"add-account\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._addaccount$_css = this._mapper;
    this._addaccount$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$AddAccountComponent___shadowTemplate(), true));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e26 = t2[1];
    this._addaccount$__t.listen$2(J.get$onChange$x(this.__e26), new D.AddAccountComponent_created_autogenerated_closure(this));
    t2 = this._addaccount$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t3 = true;
    } else
      t3 = false;
    t3 = t3 ? $.get$readCurrentStackTrace().call$0() : null;
    t2.push(new V.DomPropertyBinding(new D.AddAccountComponent_created_autogenerated_closure0(this), false, new D.AddAccountComponent_created_autogenerated_closure1(this), false, t3, null));
    t3 = this._addaccount$__t;
    t2 = this.__e26;
    t3.children.push(new V.LoopTemplateInAttribute(new D.AddAccountComponent_created_autogenerated_closure2(this), new D.AddAccountComponent_created_autogenerated_closure3(this), null, t2, [], []));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e27 = t2[1];
    this._addaccount$__t.listen$2(J.get$onInput$x(this.__e27), new D.AddAccountComponent_created_autogenerated_closure4(this));
    t2 = this._addaccount$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t3 = true;
    } else
      t3 = false;
    t3 = t3 ? $.get$readCurrentStackTrace().call$0() : null;
    t2.push(new V.DomPropertyBinding(new D.AddAccountComponent_created_autogenerated_closure5(this), false, new D.AddAccountComponent_created_autogenerated_closure6(this), false, t3, null));
    t3 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    t3 = J.get$nodes$x(t3[3])._this.childNodes;
    if (5 >= t3.length)
      throw H.ioore(t3, 5);
    t3 = J.get$nodes$x(t3[5])._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    t3 = J.get$nodes$x(t3[3])._this.childNodes;
    if (1 >= t3.length)
      throw H.ioore(t3, 1);
    t3 = J.get$nodes$x(t3[1])._this.childNodes;
    if (1 >= t3.length)
      throw H.ioore(t3, 1);
    this.__e28 = t3[1];
    this._addaccount$__t.listen$2(J.get$onInput$x(this.__e28), new D.AddAccountComponent_created_autogenerated_closure7(this));
    t3 = this._addaccount$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t2 = true;
    } else
      t2 = false;
    t2 = t2 ? $.get$readCurrentStackTrace().call$0() : null;
    t3.push(new V.DomPropertyBinding(new D.AddAccountComponent_created_autogenerated_closure8(this), false, new D.AddAccountComponent_created_autogenerated_closure9(this), false, t2, null));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (7 >= t2.length)
      throw H.ioore(t2, 7);
    t2 = J.get$nodes$x(t2[7])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e29 = t2[1];
    this._addaccount$__t.listen$2(J.get$onInput$x(this.__e29), new D.AddAccountComponent_created_autogenerated_closure10(this));
    t2 = this._addaccount$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t3 = true;
    } else
      t3 = false;
    t3 = t3 ? $.get$readCurrentStackTrace().call$0() : null;
    t2.push(new V.DomPropertyBinding(new D.AddAccountComponent_created_autogenerated_closure11(this), false, new D.AddAccountComponent_created_autogenerated_closure12(this), false, t3, null));
    t3 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    t3 = J.get$nodes$x(t3[3])._this.childNodes;
    if (7 >= t3.length)
      throw H.ioore(t3, 7);
    t3 = J.get$nodes$x(t3[7])._this.childNodes;
    if (5 >= t3.length)
      throw H.ioore(t3, 5);
    t3 = J.get$nodes$x(t3[5])._this.childNodes;
    if (1 >= t3.length)
      throw H.ioore(t3, 1);
    t3 = J.get$nodes$x(t3[1])._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    this.__e30 = t3[3];
    this._addaccount$__t.listen$2(J.get$onClick$x(this.__e30), new D.AddAccountComponent_created_autogenerated_closure13(this));
    t3 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    t3 = J.get$nodes$x(t3[3])._this.childNodes;
    if (9 >= t3.length)
      throw H.ioore(t3, 9);
    t3 = J.get$nodes$x(t3[9])._this.childNodes;
    if (5 >= t3.length)
      throw H.ioore(t3, 5);
    this.__e31 = t3[5];
    this._addaccount$__t.listen$2(J.get$onClick$x(this.__e31), new D.AddAccountComponent_created_autogenerated_closure14(this));
    t3 = t1.get$nodes(__root)._this.childNodes;
    if (5 >= t3.length)
      throw H.ioore(t3, 5);
    t3 = J.get$nodes$x(t3[5])._this.childNodes;
    if (1 >= t3.length)
      throw H.ioore(t3, 1);
    this.__e32 = t3[1];
    this._addaccount$__t.listen$2(J.get$onChange$x(this.__e32), new D.AddAccountComponent_created_autogenerated_closure15(this));
    t3 = this._addaccount$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t2 = true;
    } else
      t2 = false;
    t2 = t2 ? $.get$readCurrentStackTrace().call$0() : null;
    t3.push(new V.DomPropertyBinding(new D.AddAccountComponent_created_autogenerated_closure16(this), false, new D.AddAccountComponent_created_autogenerated_closure17(this), false, t2, null));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (5 >= t2.length)
      throw H.ioore(t2, 5);
    t2 = J.get$nodes$x(t2[5])._this.childNodes;
    if (2 >= t2.length)
      throw H.ioore(t2, 2);
    this.__e33 = t2[2];
    this._addaccount$__t.listen$2(J.get$onChange$x(this.__e33), new D.AddAccountComponent_created_autogenerated_closure18(this));
    t2 = this._addaccount$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t3 = true;
    } else
      t3 = false;
    t3 = t3 ? $.get$readCurrentStackTrace().call$0() : null;
    t2.push(new V.DomPropertyBinding(new D.AddAccountComponent_created_autogenerated_closure19(this), false, new D.AddAccountComponent_created_autogenerated_closure20(this), false, t3, null));
    t3 = t1.get$nodes(__root)._this.childNodes;
    if (5 >= t3.length)
      throw H.ioore(t3, 5);
    t3 = J.get$nodes$x(t3[5])._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    this.__e34 = t3[3];
    this._addaccount$__t.listen$2(J.get$onChange$x(this.__e34), new D.AddAccountComponent_created_autogenerated_closure21(this));
    t3 = this._addaccount$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t2 = true;
    } else
      t2 = false;
    t2 = t2 ? $.get$readCurrentStackTrace().call$0() : null;
    t3.push(new V.DomPropertyBinding(new D.AddAccountComponent_created_autogenerated_closure22(this), false, new D.AddAccountComponent_created_autogenerated_closure23(this), false, t2, null));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (5 >= t2.length)
      throw H.ioore(t2, 5);
    t2 = J.get$nodes$x(t2[5])._this.childNodes;
    if (4 >= t2.length)
      throw H.ioore(t2, 4);
    this.__e35 = t2[4];
    this._addaccount$__t.listen$2(J.get$onInput$x(this.__e35), new D.AddAccountComponent_created_autogenerated_closure24(this));
    t2 = this._addaccount$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t3 = true;
    } else
      t3 = false;
    t3 = t3 ? $.get$readCurrentStackTrace().call$0() : null;
    t2.push(new V.DomPropertyBinding(new D.AddAccountComponent_created_autogenerated_closure25(this), false, new D.AddAccountComponent_created_autogenerated_closure26(this), false, t3, null));
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (5 >= t1.length)
      throw H.ioore(t1, 5);
    t1 = J.get$nodes$x(t1[5])._this.childNodes;
    if (5 >= t1.length)
      throw H.ioore(t1, 5);
    this.__e36 = t1[5];
    this._addaccount$__t.listen$2(J.get$onChange$x(this.__e36), new D.AddAccountComponent_created_autogenerated_closure27(this));
    t1 = this._addaccount$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t2 = true;
    } else
      t2 = false;
    t2 = t2 ? $.get$readCurrentStackTrace().call$0() : null;
    t1.push(new V.DomPropertyBinding(new D.AddAccountComponent_created_autogenerated_closure28(this), false, new D.AddAccountComponent_created_autogenerated_closure29(this), false, t2, null));
    this._addaccount$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._addaccount$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._addaccount$__t;
    t1.remove$0(t1);
    this.__e36 = null;
    this.__e35 = null;
    this.__e34 = null;
    this.__e33 = null;
    this.__e32 = null;
    this.__e31 = null;
    this.__e30 = null;
    this.__e29 = null;
    this.__e28 = null;
    this.__e27 = null;
    this.__e26 = null;
    this._addaccount$__t = null;
  },
  getPageUrl$0: function() {
    return $.AddAccountComponent_pageUrl;
  },
  get$selectedFolder: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "selectedFolder");
    return this._addaccount$__$selectedFolder;
  },
  set$selectedFolder: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "selectedFolder", this._addaccount$__$selectedFolder, value);
    this._addaccount$__$selectedFolder = value;
  },
  get$accName: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "accName");
    return this._addaccount$__$accName;
  },
  set$accName: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "accName", this._addaccount$__$accName, value);
    this._addaccount$__$accName = value;
  },
  get$accLogin: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "accLogin");
    return this._addaccount$__$accLogin;
  },
  set$accLogin: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "accLogin", this._addaccount$__$accLogin, value);
    this._addaccount$__$accLogin = value;
  },
  get$accPw: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "accPw");
    return this._addaccount$__$accPw;
  },
  set$accPw: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "accPw", this._addaccount$__$accPw, value);
    this._addaccount$__$accPw = value;
  },
  togglePwMenu$1: function(_) {
    var t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1(P.JsFunction_JsFunction$withThis(new D.AddAccountComponent_togglePwMenu_closure()));
  },
  get$togglePwMenu: function() {
    return new B.BoundClosure$1(this, D.AddAccountComponent.prototype.togglePwMenu$1, null, "togglePwMenu$1");
  },
  init$0: function() {
    var generatePwRow, t1, t2, options;
    J.set$display$x(J.get$style$x(document.querySelector("#pwSettings")), "block");
    generatePwRow = J.get$innerHtml$x(document.querySelector("#generatePwCellWrapper"));
    J.set$innerHtml$x(document.querySelector("#generatePwCellWrapper"), "");
    t1 = $.get$context();
    J.html$1$x(t1.$index(t1, "jQuery").call$1("#generatePwCellWrapper"), generatePwRow);
    E.moveParkedElements();
    t1 = J.get$onClick$x(document.querySelector("#generatePw"));
    t2 = this.get$generatePw();
    t2 = new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(t2), t1._useCapture);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
    t2._tryResume$0();
    options = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["initAll", true], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t2 = $.get$context();
    J.$index$asx(t2.$index(t2, "jQuery").call$0(), "Slider").call$1(options);
    t2 = $.get$context();
    J.position$1$x(t2.$index(t2, "jQuery").call$1("#pwSettings"), P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["my", "left top", "at", "left bottom", "of", "#generatePwCell"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
    t2 = $.get$context();
    t2.$index(t2, "jQuery").call$1("#pwSettings").hide$0();
    t2 = J.get$onClick$x(document.querySelector("#togglePwSettings"));
    t1 = this.get$togglePwMenu();
    t1 = new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1), t2._useCapture);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
    t1._tryResume$0();
    t1 = $.get$context();
    J.$index$asx(t1.$index(t1, "jQuery").call$0(), "Input").call$1(P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["initAll", true], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
  },
  generatePw$1: function(e) {
    var pwChars, max, i, t1, max0, t2;
    pwChars = this.pwLittle === true ? "" + "abcdefghijklmnopqrstuvwxyz" : "";
    if (this.pwBig === true)
      pwChars += "abcdefghijklmnopqrstuvwxyz".toUpperCase();
    if (this.pwNum === true)
      pwChars += "0123456789";
    if (this.pwSpz === true)
      pwChars += "!\u00a7$%&/()=?";
    this.set$accPw("");
    max = pwChars.length;
    i = 0;
    while (true) {
      t1 = H.Primitives_parseInt(this.pwLength, null, null);
      if (typeof t1 !== "number")
        throw H.iae(t1);
      if (!(i < t1))
        break;
      t1 = $._activeObserver;
      if (t1 != null)
        t1._addRead$3(this, 1, "accPw");
      t1 = this._addaccount$__$accPw;
      max0 = max > 4294967295 ? 4294967295 : max;
      t2 = Math.random() * max0 >>> 0;
      if (t2 < 0 || t2 >= max)
        throw H.ioore(pwChars, t2);
      t2 = J.$add$ns(t1, pwChars[t2]);
      t1 = this.get$$$_observers();
      if (t1 != null && t1._linked_list$_head != null)
        T.notifyChange(this, 1, "accPw", this._addaccount$__$accPw, t2);
      this._addaccount$__$accPw = t2;
      ++i;
    }
  },
  get$generatePw: function() {
    return new B.BoundClosure$1(this, D.AddAccountComponent.prototype.generatePw$1, null, "generatePw$1");
  },
  saveAccount$0: function() {
    var dialog, t1, cry, t2;
    if (this.get$selectedFolder() == null || this.get$accPw() == null || this.get$accLogin() == null || this.get$accName() == null || J.get$isEmpty$asx(this.get$selectedFolder()) === true || J.get$isEmpty$asx(this.get$accName()) === true || J.get$isEmpty$asx(this.get$accLogin()) === true || J.get$isEmpty$asx(this.get$accPw()) === true) {
      dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Warning..!", "content", "Please fillout all Datafields.", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["Ok", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new D.AddAccountComponent_saveAccount_closure())], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      t1 = $.get$context();
      t1.$index(t1, "jQuery").Dialog$1(dialog);
    } else {
      cry = new B.Crypt(null, null);
      t1 = this.get$accPw();
      t2 = this.get$sendData();
      cry.pw = t1;
      cry.toCall = t2;
      cry.openDialog$1(cry.get$cryptPasswordReplayCallback());
    }
  },
  sendData$1: function(cryptPw) {
    var t1, t2, t3, t4, account;
    t1 = this.get$accName();
    t2 = this.get$accLogin();
    t3 = H.Primitives_parseInt(this.get$selectedFolder(), null, null);
    t4 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t4;
    account = new B.AccountData(t1, "-1", t2, cryptPw, t3, null, null, t4);
    E.sendJson("account", "POST", account.toString$0(account), this.get$requestCompleded(), false);
  },
  get$sendData: function() {
    return new B.BoundClosure$1(this, D.AddAccountComponent.prototype.sendData$1, null, "sendData$1");
  },
  requestCompleded$1: function(request) {
    var parsedData, data, t1, t2, t3;
    parsedData = C.C_JsonCodec.parse$1(J.get$response$x(request));
    data = $.get$Controller__singleton().addAccount$1(parsedData);
    t1 = $.get$Controller__singleton();
    t2 = J.toString$0(J.get$id$x(J.get$data$x(J.get$first$ax(J.get$reversed$ax($.get$Controller__singleton().data.get$folder())))));
    t3 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t3;
    t3 = new B.ShowAccountComponent(null, null, null, null, null, null, null, null, null, null, false, null, "*******", t2, null, null, t3, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t3.set$data(t3, data);
    t1.pageComp.loadePage$1(t3);
  },
  get$requestCompleded: function() {
    return new B.BoundClosure$1(this, D.AddAccountComponent.prototype.requestCompleded$1, null, "requestCompleded$1");
  },
  static: {
"": "AddAccountComponent___html1,AddAccountComponent___shadowTemplate,AddAccountComponent_pageUrl",
}

},

WebPage_Observable0: {"": "WebPage+Observable;$$_observers@,$$_changes@,hashCode>", $isObservable: true},

AddAccountComponent_created_autogenerated_closure: {"": "Closure;this_1",
  call$1: function($$event) {
    var t1 = this.this_1;
    t1.set$selectedFolder(J.get$value$x(t1.__e26));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure1: {"": "Closure;this_2",
  call$0: function() {
    return this.this_2.get$selectedFolder();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated_closure0: {"": "Closure;this_3",
  call$1: function(e) {
    var t1 = this.this_3;
    if (!J.$eq(J.get$value$x(t1.__e26), e))
      J.set$value$x(t1.__e26, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure3: {"": "Closure;this_4",
  call$0: function() {
    return P.List_List$from(J.get$reversed$ax($.get$Controller__singleton().data.get$folder()), true, null);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated_closure2: {"": "Closure;this_5",
  call$3: function($$list, $$index, __t) {
    var t1, folder, __binding24;
    t1 = {};
    folder = J.$index$asx($$list, $$index);
    t1.__e25_0 = null;
    t1.__e25_0 = $.get$AddAccountComponent___html1().cloneNode(true);
    __binding24 = __t.contentBind$2(new D.AddAccountComponent_created_autogenerated__closure(folder), false);
    J.get$nodes$x(t1.__e25_0)._this.appendChild(__binding24);
    __t.oneWayBind$4(new D.AddAccountComponent_created_autogenerated__closure0(this.this_5, folder), new D.AddAccountComponent_created_autogenerated__closure1(t1), false, false);
    __t.oneWayBind$4(new D.AddAccountComponent_created_autogenerated__closure2(folder), new D.AddAccountComponent_created_autogenerated__closure3(t1), false, false);
    J.addAll$1$ax(__t, [document.createTextNode("\n            "), t1.__e25_0, document.createTextNode("\n          ")]);
  },
  "+call:3:0": 0,
  $isFunction: true
},

AddAccountComponent_created_autogenerated__closure: {"": "Closure;folder_6",
  call$0: function() {
    return J.get$name$x(J.get$data$x(this.folder_6));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated__closure0: {"": "Closure;this_7,folder_8",
  call$0: function() {
    return J.$eq(this.this_7.get$selectedFolder(), J.toString$0(J.get$id$x(J.get$data$x(this.folder_8))));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated__closure1: {"": "Closure;box_0",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.box_0.__e25_0;
    t2 = J.getInterceptor$x(t1);
    t3 = t2.get$selected(t1);
    if (t3 == null ? e != null : t3 !== e)
      t2.set$selected(t1, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated__closure2: {"": "Closure;folder_9",
  call$0: function() {
    return J.toString$0(J.get$id$x(J.get$data$x(this.folder_9)));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated__closure3: {"": "Closure;box_0",
  call$1: function(e) {
    var t1 = this.box_0;
    if (!J.$eq(J.get$value$x(t1.__e25_0), e))
      J.set$value$x(t1.__e25_0, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure4: {"": "Closure;this_10",
  call$1: function($$event) {
    var t1 = this.this_10;
    t1.set$accName(J.get$value$x(t1.__e27));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure6: {"": "Closure;this_11",
  call$0: function() {
    return this.this_11.get$accName();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated_closure5: {"": "Closure;this_12",
  call$1: function(e) {
    var t1 = this.this_12;
    if (!J.$eq(J.get$value$x(t1.__e27), e))
      J.set$value$x(t1.__e27, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure7: {"": "Closure;this_13",
  call$1: function($$event) {
    var t1 = this.this_13;
    t1.set$accLogin(J.get$value$x(t1.__e28));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure9: {"": "Closure;this_14",
  call$0: function() {
    return this.this_14.get$accLogin();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated_closure8: {"": "Closure;this_15",
  call$1: function(e) {
    var t1 = this.this_15;
    if (!J.$eq(J.get$value$x(t1.__e28), e))
      J.set$value$x(t1.__e28, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure10: {"": "Closure;this_16",
  call$1: function($$event) {
    var t1 = this.this_16;
    t1.set$accPw(J.get$value$x(t1.__e29));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure12: {"": "Closure;this_17",
  call$0: function() {
    return this.this_17.get$accPw();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated_closure11: {"": "Closure;this_18",
  call$1: function(e) {
    var t1 = this.this_18;
    if (!J.$eq(J.get$value$x(t1.__e29), e))
      J.set$value$x(t1.__e29, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure13: {"": "Closure;this_19",
  call$1: function($$event) {
    this.this_19.togglePwMenu$1(null);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure14: {"": "Closure;this_20",
  call$1: function($$event) {
    this.this_20.saveAccount$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure15: {"": "Closure;this_21",
  call$1: function($$event) {
    var t1 = this.this_21;
    t1.pwSpz = J.get$checked$x(t1.__e32);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure17: {"": "Closure;this_22",
  call$0: function() {
    return this.this_22.pwSpz;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated_closure16: {"": "Closure;this_23",
  call$1: function(e) {
    var t1 = this.this_23;
    if (!J.$eq(J.get$checked$x(t1.__e32), e))
      J.set$checked$x(t1.__e32, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure18: {"": "Closure;this_24",
  call$1: function($$event) {
    var t1 = this.this_24;
    t1.pwNum = J.get$checked$x(t1.__e33);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure20: {"": "Closure;this_25",
  call$0: function() {
    return this.this_25.pwNum;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated_closure19: {"": "Closure;this_26",
  call$1: function(e) {
    var t1 = this.this_26;
    if (!J.$eq(J.get$checked$x(t1.__e33), e))
      J.set$checked$x(t1.__e33, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure21: {"": "Closure;this_27",
  call$1: function($$event) {
    var t1 = this.this_27;
    t1.pwBig = J.get$checked$x(t1.__e34);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure23: {"": "Closure;this_28",
  call$0: function() {
    return this.this_28.pwBig;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated_closure22: {"": "Closure;this_29",
  call$1: function(e) {
    var t1 = this.this_29;
    if (!J.$eq(J.get$checked$x(t1.__e34), e))
      J.set$checked$x(t1.__e34, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure24: {"": "Closure;this_30",
  call$1: function($$event) {
    var t1 = this.this_30;
    t1.pwLength = J.get$value$x(t1.__e35);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure26: {"": "Closure;this_31",
  call$0: function() {
    return this.this_31.pwLength;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated_closure25: {"": "Closure;this_32",
  call$1: function(e) {
    var t1 = this.this_32;
    if (!J.$eq(J.get$value$x(t1.__e35), e))
      J.set$value$x(t1.__e35, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure27: {"": "Closure;this_33",
  call$1: function($$event) {
    var t1 = this.this_33;
    t1.pwLittle = J.get$checked$x(t1.__e36);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_created_autogenerated_closure29: {"": "Closure;this_34",
  call$0: function() {
    return this.this_34.pwLittle;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

AddAccountComponent_created_autogenerated_closure28: {"": "Closure;this_35",
  call$1: function(e) {
    var t1 = this.this_35;
    if (!J.$eq(J.get$checked$x(t1.__e36), e))
      J.set$checked$x(t1.__e36, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_togglePwMenu_closure: {"": "Closure;",
  call$1: function(jquery) {
    var t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1("#pwSettings").toggle$1("fast");
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

AddAccountComponent_saveAccount_closure: {"": "Closure;",
  call$0: function() {
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
}}],
["app_package", "_from_packages/ams/views/main/app-page.dart", , E, {
AppPage: {"": "WebComponent;_app_package$_css,__e21,__e22,__e23,_app_package$__t,ini<,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, t2, t3, t4, t5;
    __root = this.createShadowRoot$1(this, "app-page");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["app-page", "[is=\"app-page\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._app_package$_css = this._mapper;
    this._app_package$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$AppPage___shadowTemplate(), true));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e21 = t2[1];
    t2 = this._app_package$__t;
    t3 = $.get$Controller__singleton();
    t4 = $.get$Controller__singleton().data.get$user().get$givenName();
    t5 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t5;
    t5 = new Q.HeaderComponent(null, null, null, null, null, null, null, false, "PasswordManager", t3, t4, null, null, t5, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t5.set$host(t5, this.__e21);
    t2.children.push(new V.ComponentItem(t5));
    t5 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t5.length)
      throw H.ioore(t5, 1);
    t5 = J.get$nodes$x(t5[1])._this.childNodes;
    if (3 >= t5.length)
      throw H.ioore(t5, 3);
    this.__e22 = t5[3];
    t5 = this._app_package$__t;
    t2 = new A.MenuComponent(null, null, null, null, null, null, null, true, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t2.set$host(t2, this.__e22);
    t5.children.push(new V.ComponentItem(t2));
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    t1 = J.get$nodes$x(t1[1])._this.childNodes;
    if (5 >= t1.length)
      throw H.ioore(t1, 5);
    this.__e23 = t1[5];
    t1 = this._app_package$__t;
    t2 = D.PageComponent$();
    t2.set$host(t2, this.__e23);
    t1.children.push(new V.ComponentItem(t2));
    this._app_package$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._app_package$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._app_package$__t;
    t1.remove$0(t1);
    this.__e23 = null;
    this.__e22 = null;
    this.__e21 = null;
    this._app_package$__t = null;
  },
  static: {
"": "AppPage___shadowTemplate",
}

}}],
["bootstrap", "index.html_bootstrap.dart", , Y, {
main0: function() {
  $.useObservers = true;
  S.main();
  S.init_autogenerated();
}},
1],
["crypto", "package:crypto/crypto.dart", , M, {
_HashBase: {"": "Object;",
  add$1: function(_, data) {
    if (this._digestCalled)
      throw H.wrapException(new P.StateError("Hash update method called after digest was retrieved"));
    this._lengthInBytes = this._lengthInBytes + J.get$length$asx(data);
    C.JSArray_methods.addAll$1(this._pendingData, data);
    this._iterate$0();
  },
  close$0: function(_) {
    if (this._digestCalled)
      return this._resultAsBytes$0();
    this._digestCalled = true;
    this._finalizeData$0();
    this._iterate$0();
    return this._resultAsBytes$0();
  },
  _resultAsBytes$0: function() {
    var result, t1, t2, i;
    result = [];
    for (t1 = this._h, t2 = t1.length, i = 0; i < t2; ++i)
      C.JSArray_methods.addAll$1(result, this._wordToBytes$1(t1[i]));
    return result;
  },
  _bytesToChunk$2: function(data, dataIndex) {
    var t1, t2, t3, t4, wordIndex, t5, w3, t6, w2, w1, w0, t7, t8;
    for (t1 = this._chunkSizeInWords, t2 = this._currentChunk, t3 = t2.length, t4 = this._bigEndianWords, wordIndex = 0; wordIndex < t1; ++wordIndex) {
      t5 = data.length;
      if (t4) {
        if (dataIndex < 0 || dataIndex >= t5)
          throw H.ioore(data, dataIndex);
        w3 = data[dataIndex];
      } else {
        t6 = dataIndex + 3;
        if (t6 < 0 || t6 >= t5)
          throw H.ioore(data, t6);
        w3 = data[t6];
      }
      t5 = data.length;
      if (t4) {
        t6 = dataIndex + 1;
        if (t6 < 0 || t6 >= t5)
          throw H.ioore(data, t6);
        w2 = data[t6];
      } else {
        t6 = dataIndex + 2;
        if (t6 < 0 || t6 >= t5)
          throw H.ioore(data, t6);
        w2 = data[t6];
      }
      t5 = data.length;
      if (t4) {
        t6 = dataIndex + 2;
        if (t6 < 0 || t6 >= t5)
          throw H.ioore(data, t6);
        w1 = data[t6];
      } else {
        t6 = dataIndex + 1;
        if (t6 < 0 || t6 >= t5)
          throw H.ioore(data, t6);
        w1 = data[t6];
      }
      t5 = data.length;
      if (t4) {
        t6 = dataIndex + 3;
        if (t6 < 0 || t6 >= t5)
          throw H.ioore(data, t6);
        w0 = data[t6];
      } else {
        if (dataIndex < 0 || dataIndex >= t5)
          throw H.ioore(data, dataIndex);
        w0 = data[dataIndex];
      }
      dataIndex += 4;
      t5 = J.$and$n(w3, 255);
      t6 = J.$and$n(w2, 255);
      t7 = J.$and$n(w1, 255);
      t8 = J.$and$n(w0, 255);
      if (wordIndex >= t3)
        throw H.ioore(t2, wordIndex);
      t2[wordIndex] = (t5 << 24 | t6 << 16 | t7 << 8 | t8) >>> 0;
    }
  },
  _wordToBytes$1: function(word) {
    var bytes, t1, t2, t3;
    bytes = P.List_List(4, null);
    t1 = this._bigEndianWords;
    t2 = t1 ? 24 : 0;
    if (typeof word !== "number")
      throw word.$shr();
    t2 = C.JSInt_methods.$shr(word, t2);
    t3 = bytes.length;
    if (0 >= t3)
      throw H.ioore(bytes, 0);
    bytes[0] = t2 & 255;
    t2 = C.JSInt_methods.$shr(word, t1 ? 16 : 8);
    if (1 >= t3)
      throw H.ioore(bytes, 1);
    bytes[1] = t2 & 255;
    t2 = C.JSInt_methods.$shr(word, t1 ? 8 : 16);
    if (2 >= t3)
      throw H.ioore(bytes, 2);
    bytes[2] = t2 & 255;
    t2 = C.JSInt_methods.$shr(word, t1 ? 0 : 24);
    if (3 >= t3)
      throw H.ioore(bytes, 3);
    bytes[3] = t2 & 255;
    return bytes;
  },
  _iterate$0: function() {
    var len, chunkSizeInBytes, t1, index, t2;
    len = this._pendingData.length;
    chunkSizeInBytes = this._chunkSizeInWords * 4;
    if (len >= chunkSizeInBytes) {
      for (t1 = this._currentChunk, index = 0; t2 = this._pendingData, len - index >= chunkSizeInBytes; index += chunkSizeInBytes) {
        this._bytesToChunk$2(t2, index);
        this._updateHash$1(t1);
      }
      this._pendingData = C.JSArray_methods.sublist$2(t2, index, len);
    }
  },
  _finalizeData$0: function() {
    var contentsLength, chunkSizeInBytes, zeroPadding, i, t1, t2;
    this._pendingData.push(128);
    contentsLength = this._lengthInBytes + 9;
    chunkSizeInBytes = this._chunkSizeInWords * 4;
    zeroPadding = ((contentsLength + chunkSizeInBytes - 1 & -chunkSizeInBytes) >>> 0) - contentsLength;
    for (i = 0; i < zeroPadding; ++i)
      this._pendingData.push(0);
    t1 = (this._lengthInBytes * 8 & 4294967295) >>> 0;
    t2 = this._pendingData;
    if (this._bigEndianWords) {
      C.JSArray_methods.addAll$1(t2, this._wordToBytes$1(0));
      C.JSArray_methods.addAll$1(this._pendingData, this._wordToBytes$1(t1));
    } else {
      C.JSArray_methods.addAll$1(t2, this._wordToBytes$1(t1));
      C.JSArray_methods.addAll$1(this._pendingData, this._wordToBytes$1(0));
    }
  }
},

SHA256: {"": "_HashBase;_w,_chunkSizeInWords,_digestSizeInWords,_bigEndianWords,_lengthInBytes,_pendingData,_currentChunk,_h,_digestCalled",
  _updateHash$1: function($M) {
    var t1, t2, i, t3, t4, t5, t6, t7, t8, t9, t10, t11, a, b, c, d, e, f, g, h, a0, t, e0, a1;
    for (t1 = this._w, t2 = $M.length, i = 0; i < 16; ++i) {
      if (i >= t2)
        throw H.ioore($M, i);
      t1[i] = $M[i];
    }
    for (; i < 64; ++i) {
      t2 = t1[i - 2];
      if (typeof t2 !== "number")
        throw t2.$shr();
      t3 = C.JSInt_methods.$shr(t2, 17);
      t4 = C.JSInt_methods.$shr(t2, 19);
      t5 = C.JSInt_methods.$shr(t2, 10);
      t6 = t1[i - 7];
      if (typeof t6 !== "number")
        throw H.iae(t6);
      t7 = t1[i - 15];
      if (typeof t7 !== "number")
        throw t7.$shr();
      t8 = C.JSInt_methods.$shr(t7, 7);
      t9 = C.JSInt_methods.$shr(t7, 18);
      t10 = C.JSInt_methods.$shr(t7, 3);
      t11 = t1[i - 16];
      if (typeof t11 !== "number")
        throw H.iae(t11);
      t1[i] = ((((((t3 | t2 << 15 & 4294967295) ^ (t4 | t2 << 13 & 4294967295) ^ t5) >>> 0) + t6 & 4294967295) >>> 0) + (((((t8 | t7 << 25 & 4294967295) ^ (t9 | t7 << 14 & 4294967295) ^ t10) >>> 0) + t11 & 4294967295) >>> 0) & 4294967295) >>> 0;
    }
    t2 = this._h;
    t3 = t2.length;
    if (0 >= t3)
      throw H.ioore(t2, 0);
    a = t2[0];
    if (1 >= t3)
      throw H.ioore(t2, 1);
    b = t2[1];
    if (2 >= t3)
      throw H.ioore(t2, 2);
    c = t2[2];
    if (3 >= t3)
      throw H.ioore(t2, 3);
    d = t2[3];
    if (4 >= t3)
      throw H.ioore(t2, 4);
    e = t2[4];
    if (5 >= t3)
      throw H.ioore(t2, 5);
    f = t2[5];
    if (6 >= t3)
      throw H.ioore(t2, 6);
    g = t2[6];
    if (7 >= t3)
      throw H.ioore(t2, 7);
    h = t2[7];
    for (a0 = a, t = 0; t < 64; ++t, h = g, g = f, f = e, e = e0, d = c, c = b, b = a0, a0 = a1) {
      if (typeof e !== "number")
        throw e.$shr();
      t3 = C.JSInt_methods.$shr(e, 6);
      t4 = C.JSInt_methods.$shr(e, 11);
      t5 = C.JSInt_methods.$shr(e, 25);
      if (typeof h !== "number")
        throw h.$add();
      if (typeof f !== "number")
        throw H.iae(f);
      if (typeof g !== "number")
        throw H.iae(g);
      t6 = C.List_6JR[t];
      t7 = t1[t];
      if (typeof t7 !== "number")
        throw H.iae(t7);
      t10 = (((h + (((t3 | e << 26 & 4294967295) ^ (t4 | e << 21 & 4294967295) ^ (t5 | e << 7 & 4294967295)) >>> 0) & 4294967295) >>> 0) + ((((e & f ^ ~e & 4294967295 & g) >>> 0) + ((t6 + t7 & 4294967295) >>> 0) & 4294967295) >>> 0) & 4294967295) >>> 0;
      if (typeof a0 !== "number")
        throw a0.$shr();
      t7 = C.JSInt_methods.$shr(a0, 2);
      t6 = C.JSInt_methods.$shr(a0, 13);
      t5 = C.JSInt_methods.$shr(a0, 22);
      if (typeof b !== "number")
        throw H.iae(b);
      if (typeof c !== "number")
        throw H.iae(c);
      if (typeof d !== "number")
        throw d.$add();
      e0 = (d + t10 & 4294967295) >>> 0;
      a1 = (t10 + (((((t7 | a0 << 30 & 4294967295) ^ (t6 | a0 << 19 & 4294967295) ^ (t5 | a0 << 10 & 4294967295)) >>> 0) + ((a0 & b ^ a0 & c ^ b & c) >>> 0) & 4294967295) >>> 0) & 4294967295) >>> 0;
    }
    if (typeof a0 !== "number")
      throw a0.$add();
    if (typeof a !== "number")
      throw H.iae(a);
    t2[0] = (a0 + a & 4294967295) >>> 0;
    t1 = t2[1];
    if (typeof b !== "number")
      throw b.$add();
    if (typeof t1 !== "number")
      throw H.iae(t1);
    t2[1] = (b + t1 & 4294967295) >>> 0;
    t1 = t2[2];
    if (typeof c !== "number")
      throw c.$add();
    if (typeof t1 !== "number")
      throw H.iae(t1);
    t2[2] = (c + t1 & 4294967295) >>> 0;
    t1 = t2[3];
    if (typeof d !== "number")
      throw d.$add();
    if (typeof t1 !== "number")
      throw H.iae(t1);
    t2[3] = (d + t1 & 4294967295) >>> 0;
    t1 = t2[4];
    if (typeof e !== "number")
      throw e.$add();
    if (typeof t1 !== "number")
      throw H.iae(t1);
    t2[4] = (e + t1 & 4294967295) >>> 0;
    t1 = t2[5];
    if (typeof f !== "number")
      throw f.$add();
    if (typeof t1 !== "number")
      throw H.iae(t1);
    t2[5] = (f + t1 & 4294967295) >>> 0;
    t1 = t2[6];
    if (typeof g !== "number")
      throw g.$add();
    if (typeof t1 !== "number")
      throw H.iae(t1);
    t2[6] = (g + t1 & 4294967295) >>> 0;
    t1 = t2[7];
    if (typeof h !== "number")
      throw h.$add();
    if (typeof t1 !== "number")
      throw H.iae(t1);
    t2[7] = (h + t1 & 4294967295) >>> 0;
  },
  SHA256$0: function() {
    var t1, t2;
    t1 = this._h;
    t2 = t1.length;
    if (0 >= t2)
      throw H.ioore(t1, 0);
    t1[0] = 1779033703;
    if (1 >= t2)
      throw H.ioore(t1, 1);
    t1[1] = 3144134277;
    if (2 >= t2)
      throw H.ioore(t1, 2);
    t1[2] = 1013904242;
    if (3 >= t2)
      throw H.ioore(t1, 3);
    t1[3] = 2773480762;
    if (4 >= t2)
      throw H.ioore(t1, 4);
    t1[4] = 1359893119;
    if (5 >= t2)
      throw H.ioore(t1, 5);
    t1[5] = 2600822924;
    if (6 >= t2)
      throw H.ioore(t1, 6);
    t1[6] = 528734635;
    if (7 >= t2)
      throw H.ioore(t1, 7);
    t1[7] = 1541459225;
  },
  static: {
"": "SHA256__K",
SHA256$: function() {
  var t1 = new M.SHA256(P.List_List(64, null), 16, 8, true, 0, [], P.List_List(16, null), P.List_List(8, null), false);
  t1.SHA256$0();
  return t1;
}}

}}],
["custom_element", "package:custom_element/custom_element.dart", , B, {
CustomElement: {"": "Object;",
  get$host: function(_) {
    throw H.wrapException(P.StateError$("host element has not been set."));
  },
  createShadowRoot$1: function(_, componentName) {
    var root = J.createShadowRoot$0$x(this.get$host(this));
    return root;
  },
  createShadowRoot$0: function($receiver) {
    return this.createShadowRoot$1($receiver, null);
  },
  get$nodes: function(_) {
    return J.get$nodes$x(this.get$host(this));
  },
  replaceWith$1: function(_, otherNode) {
    J.replaceWith$1$x(this.get$host(this), otherNode);
  },
  remove$0: function(_) {
    return J.remove$0$ax(this.get$host(this));
  },
  get$nextNode: function(_) {
    return J.get$nextNode$x(this.get$host(this));
  },
  get$previousNode: function(_) {
    return J.get$previousNode$x(this.get$host(this));
  },
  set$text: function(_, v) {
    J.set$text$x(this.get$host(this), v);
  },
  insertBefore$2: function(_, newChild, refChild) {
    return J.insertBefore$2$x(this.get$host(this), newChild, refChild);
  },
  insertAllBefore$2: function(_, newChild, refChild) {
    return J.insertAllBefore$2$x(this.get$host(this), newChild, refChild);
  },
  get$attributes: function(_) {
    return J.get$attributes$x(this.get$host(this));
  },
  get$children: function(_) {
    return J.get$children$x(this.get$host(this));
  },
  get$classes: function(_) {
    return J.get$classes$x(this.get$host(this));
  },
  clone$1: function(_, deep) {
    return J.clone$1$x(this.get$host(this), deep);
  },
  get$parent: function(_) {
    return J.get$parent$x(this.get$host(this));
  },
  get$parentNode: function(_) {
    return J.get$parentNode$x(this.get$host(this));
  },
  get$id: function(_) {
    return J.get$id$x(this.get$host(this));
  },
  set$id: function(_, v) {
    J.set$id$x(this.get$host(this), v);
  },
  get$innerHtml: function(_) {
    return J.get$innerHtml$x(this.get$host(this));
  },
  set$innerHtml: function(_, v) {
    J.set$innerHtml$x(this.get$host(this), v);
  },
  createFragment$3$treeSanitizer$validator: function(_, html, treeSanitizer, validator) {
    return J.createFragment$3$treeSanitizer$validator$x(this.get$host(this), html, treeSanitizer, validator);
  },
  insertAdjacentElement$2: function(_, where, element) {
    return J.insertAdjacentElement$2$x(this.get$host(this), where, element);
  },
  get$style: function(_) {
    return J.get$style$x(this.get$host(this));
  },
  get$tagName: function(_) {
    return J.get$tagName$x(this.get$host(this));
  },
  focus$0: function(_) {
    J.focus$0$x(this.get$host(this));
  },
  matches$1: function(_, selectors) {
    return J.matches$1$x(this.get$host(this), selectors);
  },
  querySelector$1: function(_, selectors) {
    return J.querySelector$1$x(this.get$host(this), selectors);
  },
  querySelectorAll$1: function(_, selectors) {
    return J.querySelectorAll$1$x(this.get$host(this), selectors);
  },
  query$1: function(_, selectors) {
    return J.querySelector$1$x(this.get$host(this), selectors);
  },
  queryAll$1: function(_, selectors) {
    return J.querySelectorAll$1$x(this.get$host(this), selectors);
  },
  get$className: function(_) {
    return J.get$className$x(this.get$host(this));
  },
  set$className: function(_, value) {
    J.set$className$x(this.get$host(this), value);
  },
  get$firstChild: function(_) {
    return J.get$firstChild$x(this.get$host(this));
  },
  get$lastChild: function(_) {
    return J.get$lastChild$x(this.get$host(this));
  },
  get$nodeType: function(_) {
    return J.get$nodeType$x(this.get$host(this));
  },
  addEventListener$3: function(_, type, listener, useCapture) {
    J.addEventListener$3$x(this.get$host(this), type, listener, useCapture);
  },
  removeEventListener$3: function(_, type, listener, useCapture) {
    J.removeEventListener$3$x(this.get$host(this), type, listener, useCapture);
  },
  get$xtag: function(_) {
    return J.get$xtag$x(this.get$host(this));
  },
  set$xtag: function(_, value) {
    J.set$xtag$x(this.get$host(this), value);
  },
  append$1: function(_, e) {
    return J.append$1$x(this.get$host(this), e);
  },
  get$onChange: function(_) {
    return J.get$onChange$x(this.get$host(this));
  },
  get$onClick: function(_) {
    return J.get$onClick$x(this.get$host(this));
  },
  get$onInput: function(_) {
    return J.get$onInput$x(this.get$host(this));
  },
  get$onMouseOut: function(_) {
    return J.get$onMouseOut$x(this.get$host(this));
  },
  get$onMouseOver: function(_) {
    return J.get$onMouseOver$x(this.get$host(this));
  },
  $isElement: true,
  $isNode: true,
  $isEventTarget: true
}}],
["dart._collection.dev", "dart:_collection-dev", , H, {
Arrays_copy: function(src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i < 0 || i >= src.length)
        throw H.ioore(src, i);
      C.JSArray_methods.$indexSet(dst, j, src[i]);
    }
  else
    for (t1 = srcStart + count, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw H.ioore(src, i);
      C.JSArray_methods.$indexSet(dst, j, src[i]);
    }
},

Arrays_indexOf: function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw H.ioore(a, i);
    if (J.$eq(a[i], element))
      return i;
  }
  return -1;
},

IterableMixinWorkaround_forEach: function(iterable, f) {
  var t1;
  for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();)
    f.call$1(t1._dev$_current);
},

IterableMixinWorkaround_any: function(iterable, f) {
  var t1;
  for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();)
    if (f.call$1(t1._dev$_current) === true)
      return true;
  return false;
},

IterableMixinWorkaround_firstWhere: function(iterable, test, orElse) {
  var t1, element;
  for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();) {
    element = t1._dev$_current;
    if (test.call$1(element) === true)
      return element;
  }
  throw H.wrapException(new P.StateError("No matching element"));
},

IterableMixinWorkaround_toStringIterable: function(iterable, leftDelimiter, rightDelimiter) {
  var result, i, t1;
  for (i = 0; i < $.get$IterableMixinWorkaround__toStringList().length; ++i) {
    t1 = $.get$IterableMixinWorkaround__toStringList();
    if (i >= t1.length)
      throw H.ioore(t1, i);
    if (t1[i] === iterable)
      return H.S(leftDelimiter) + "..." + H.S(rightDelimiter);
  }
  result = P.StringBuffer$("");
  try {
    $.get$IterableMixinWorkaround__toStringList().push(iterable);
    result.write$1(leftDelimiter);
    result.writeAll$2(iterable, ", ");
    result.write$1(rightDelimiter);
  } finally {
    t1 = $.get$IterableMixinWorkaround__toStringList();
    if (0 >= t1.length)
      throw H.ioore(t1, 0);
    t1.pop();
  }
  return result.get$_contents();
},

IterableMixinWorkaround_sortList: function(list, compare) {
  H.Sort__doSort(list, 0, list.length - 1, compare);
},

IterableMixinWorkaround__rangeCheck: function(list, start, end) {
  if (start < 0 || start > list.length)
    throw H.wrapException(P.RangeError$range(start, 0, list.length));
  if (end < start || end > list.length)
    throw H.wrapException(P.RangeError$range(end, start, list.length));
},

IterableMixinWorkaround_setRangeList: function(list, start, end, from, skipCount) {
  var $length;
  H.IterableMixinWorkaround__rangeCheck(list, start, end);
  $length = end - start;
  if ($length === 0)
    return;
  if (skipCount < 0)
    throw H.wrapException(new P.ArgumentError(skipCount));
  if (skipCount + $length > from.length)
    throw H.wrapException(P.StateError$("Not enough elements"));
  H.Arrays_copy(from, skipCount, list, start, $length);
},

printToConsole: function(line) {
  if (typeof dartPrint == "function") {
    dartPrint(line);
    return;
  }
  if (typeof console == "object" && typeof console.log == "function") {
    console.log(line);
    return;
  }
  if (typeof window == "object")
    return;
  if (typeof print == "function") {
    print(line);
    return;
  }
  throw "Unable to print message: " + String(line);
},

Sort__doSort: function(a, left, right, compare) {
  if (right - left <= 32)
    H.Sort__insertionSort(a, left, right, compare);
  else
    H.Sort__dualPivotQuicksort(a, left, right, compare);
},

Sort__insertionSort: function(a, left, right, compare) {
  var i, t1, el, j, j0;
  for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
    el = t1.$index(a, i);
    j = i;
    while (true) {
      if (!(j > left && J.$gt$n(compare.call$2(t1.$index(a, j - 1), el), 0)))
        break;
      j0 = j - 1;
      t1.$indexSet(a, j, t1.$index(a, j0));
      j = j0;
    }
    t1.$indexSet(a, j, el);
  }
},

Sort__dualPivotQuicksort: function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t2, great0, less0, pivots_are_equal;
  sixth = C.JSInt_methods.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = C.JSInt_methods.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = J.getInterceptor$asx(a);
  el1 = t1.$index(a, index1);
  el2 = t1.$index(a, index2);
  el3 = t1.$index(a, index3);
  el4 = t1.$index(a, index4);
  el5 = t1.$index(a, index5);
  if (J.$gt$n(compare.call$2(el1, el2), 0)) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if (J.$gt$n(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if (J.$gt$n(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if (J.$gt$n(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if (J.$gt$n(compare.call$2(el1, el4), 0)) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if (J.$gt$n(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if (J.$gt$n(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if (J.$gt$n(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if (J.$gt$n(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1.$indexSet(a, index1, el1);
  t1.$indexSet(a, index3, el3);
  t1.$indexSet(a, index5, el5);
  t1.$indexSet(a, index2, t1.$index(a, left));
  t1.$indexSet(a, index4, t1.$index(a, right));
  less = left + 1;
  great = right - 1;
  if (J.$eq(compare.call$2(el2, el4), 0)) {
    for (k = less; k <= great; ++k) {
      ak = t1.$index(a, k);
      comp = compare.call$2(ak, el2);
      t2 = J.getInterceptor(comp);
      if (t2.$eq(comp, 0))
        continue;
      if (t2.$lt(comp, 0)) {
        if (k !== less) {
          t1.$indexSet(a, k, t1.$index(a, less));
          t1.$indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          comp = compare.call$2(t1.$index(a, great), el2);
          t2 = J.getInterceptor$n(comp);
          if (t2.$gt(comp, 0)) {
            --great;
            continue;
          } else {
            great0 = great - 1;
            if (t2.$lt(comp, 0)) {
              t1.$indexSet(a, k, t1.$index(a, less));
              less0 = less + 1;
              t1.$indexSet(a, less, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
              break;
            } else {
              t1.$indexSet(a, k, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
              break;
            }
          }
        }
    }
    pivots_are_equal = true;
  } else {
    for (k = less; k <= great; ++k) {
      ak = t1.$index(a, k);
      if (J.$lt$n(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          t1.$indexSet(a, k, t1.$index(a, less));
          t1.$indexSet(a, less, ak);
        }
        ++less;
      } else if (J.$gt$n(compare.call$2(ak, el4), 0))
        for (; true;)
          if (J.$gt$n(compare.call$2(t1.$index(a, great), el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            great0 = great - 1;
            if (J.$lt$n(compare.call$2(t1.$index(a, great), el2), 0)) {
              t1.$indexSet(a, k, t1.$index(a, less));
              less0 = less + 1;
              t1.$indexSet(a, less, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              t1.$indexSet(a, k, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
    }
    pivots_are_equal = false;
  }
  t2 = less - 1;
  t1.$indexSet(a, left, t1.$index(a, t2));
  t1.$indexSet(a, t2, el2);
  t2 = great + 1;
  t1.$indexSet(a, right, t1.$index(a, t2));
  t1.$indexSet(a, t2, el4);
  H.Sort__doSort(a, left, less - 2, compare);
  H.Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    for (; J.$eq(compare.call$2(t1.$index(a, less), el2), 0);)
      ++less;
    for (; J.$eq(compare.call$2(t1.$index(a, great), el4), 0);)
      --great;
    for (k = less; k <= great; ++k) {
      ak = t1.$index(a, k);
      if (J.$eq(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          t1.$indexSet(a, k, t1.$index(a, less));
          t1.$indexSet(a, less, ak);
        }
        ++less;
      } else if (J.$eq(compare.call$2(ak, el4), 0))
        for (; true;)
          if (J.$eq(compare.call$2(t1.$index(a, great), el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            great0 = great - 1;
            if (J.$lt$n(compare.call$2(t1.$index(a, great), el2), 0)) {
              t1.$indexSet(a, k, t1.$index(a, less));
              less0 = less + 1;
              t1.$indexSet(a, less, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              t1.$indexSet(a, k, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
    }
    H.Sort__doSort(a, less, great, compare);
  } else
    H.Sort__doSort(a, less, great, compare);
},

ListIterable: {"": "IterableBase;",
  get$iterator: function(_) {
    return new H.ListIterator(this, this.get$length(this), 0, null);
  },
  forEach$1: function(_, action) {
    var $length, i;
    $length = this.get$length(this);
    if (typeof $length !== "number")
      throw H.iae($length);
    i = 0;
    for (; i < $length; ++i) {
      action.call$1(this.elementAt$1(this, i));
      if ($length !== this.get$length(this))
        throw H.wrapException(P.ConcurrentModificationError$(this));
    }
  },
  get$isEmpty: function(_) {
    return this.get$length(this) === 0;
  },
  get$first: function(_) {
    if (this.get$length(this) === 0)
      throw H.wrapException(new P.StateError("No elements"));
    return this.elementAt$1(this, 0);
  },
  get$last: function(_) {
    var t1;
    if (this.get$length(this) === 0)
      throw H.wrapException(new P.StateError("No elements"));
    t1 = this.get$length(this);
    if (typeof t1 !== "number")
      throw t1.$sub();
    return this.elementAt$1(this, t1 - 1);
  },
  firstWhere$2$orElse: function(_, test, orElse) {
    var $length, i, element;
    $length = this.get$length(this);
    if (typeof $length !== "number")
      throw H.iae($length);
    i = 0;
    for (; i < $length; ++i) {
      element = this.elementAt$1(this, i);
      if (test.call$1(element) === true)
        return element;
      if ($length !== this.get$length(this))
        throw H.wrapException(P.ConcurrentModificationError$(this));
    }
    throw H.wrapException(new P.StateError("No matching element"));
  },
  firstWhere$1: function($receiver, test) {
    return this.firstWhere$2$orElse($receiver, test, null);
  },
  join$1: function(_, separator) {
    var $length, first, t1, buffer, i, str;
    $length = this.get$length(this);
    if (separator.length !== 0) {
      if ($length === 0)
        return "";
      first = H.S(this.elementAt$1(this, 0));
      t1 = this.get$length(this);
      if ($length == null ? t1 != null : $length !== t1)
        throw H.wrapException(P.ConcurrentModificationError$(this));
      buffer = P.StringBuffer$(first);
      if (typeof $length !== "number")
        throw H.iae($length);
      i = 1;
      for (; i < $length; ++i) {
        buffer._contents = buffer._contents + separator;
        str = this.elementAt$1(this, i);
        str = typeof str === "string" ? str : H.S(str);
        buffer._contents = buffer._contents + str;
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return buffer._contents;
    } else {
      buffer = P.StringBuffer$("");
      if (typeof $length !== "number")
        throw H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        str = this.elementAt$1(this, i);
        str = typeof str === "string" ? str : H.S(str);
        buffer._contents = buffer._contents + str;
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return buffer._contents;
    }
  },
  map$1: function(_, f) {
    var t1 = new H.MappedListIterable(this, f);
    H.setRuntimeTypeInfo(t1, [null, null]);
    return t1;
  },
  fold$2: function(_, initialValue, combine) {
    var $length, value, i;
    $length = this.get$length(this);
    if (typeof $length !== "number")
      throw H.iae($length);
    value = initialValue;
    i = 0;
    for (; i < $length; ++i) {
      value = combine.call$2(value, this.elementAt$1(this, i));
      if ($length !== this.get$length(this))
        throw H.wrapException(P.ConcurrentModificationError$(this));
    }
    return value;
  },
  toList$1$growable: function(_, growable) {
    var result, i, t1;
    if (growable) {
      result = P.List_List(null, H.getRuntimeTypeArgument(this, "ListIterable", 0));
      H.setRuntimeTypeInfo(result, [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
      C.JSArray_methods.set$length(result, this.get$length(this));
    } else {
      result = P.List_List(this.get$length(this), H.getRuntimeTypeArgument(this, "ListIterable", 0));
      H.setRuntimeTypeInfo(result, [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
    }
    i = 0;
    while (true) {
      t1 = this.get$length(this);
      if (typeof t1 !== "number")
        throw H.iae(t1);
      if (!(i < t1))
        break;
      t1 = this.elementAt$1(this, i);
      if (i >= result.length)
        throw H.ioore(result, i);
      result[i] = t1;
      ++i;
    }
    return result;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  $asIterableBase: null,
  $asIterable: null,
  $isEfficientLength: true
},

SubListIterable: {"": "ListIterable;_iterable,_start,_endOrLength",
  get$_endIndex: function() {
    var $length, t1, t2;
    $length = J.get$length$asx(this._iterable);
    t1 = this._endOrLength;
    if (t1 != null) {
      if (typeof t1 !== "number")
        throw t1.$gt();
      if (typeof $length !== "number")
        throw H.iae($length);
      t2 = t1 > $length;
    } else
      t2 = true;
    if (t2)
      return $length;
    return t1;
  },
  get$_startIndex: function() {
    var $length, t1;
    $length = J.get$length$asx(this._iterable);
    t1 = this._start;
    if (typeof $length !== "number")
      throw H.iae($length);
    if (t1 > $length)
      return $length;
    return t1;
  },
  get$length: function(_) {
    var $length, t1, t2, t3;
    $length = J.get$length$asx(this._iterable);
    t1 = this._start;
    if (typeof $length !== "number")
      throw H.iae($length);
    if (t1 >= $length)
      return 0;
    t2 = this._endOrLength;
    if (t2 != null) {
      if (typeof t2 !== "number")
        throw t2.$ge();
      t3 = t2 >= $length;
    } else
      t3 = true;
    if (t3)
      return $length - t1;
    if (typeof t2 !== "number")
      throw t2.$sub();
    return t2 - t1;
  },
  elementAt$1: function(_, index) {
    var t1, realIndex;
    t1 = this.get$_startIndex();
    if (typeof t1 !== "number")
      throw t1.$add();
    realIndex = t1 + index;
    if (!(index < 0)) {
      t1 = this.get$_endIndex();
      if (typeof t1 !== "number")
        throw H.iae(t1);
      t1 = realIndex >= t1;
    } else
      t1 = true;
    if (t1)
      throw H.wrapException(P.RangeError$range(index, 0, this.get$length(this)));
    return J.elementAt$1$ax(this._iterable, realIndex);
  },
  $asListIterable: null,
  $asIterable: null
},

ListIterator: {"": "Object;_iterable,_dev$_length,_index,_dev$_current",
  get$current: function() {
    return this._dev$_current;
  },
  moveNext$0: function() {
    var t1, t2, $length, t3;
    t1 = this._iterable;
    t2 = J.getInterceptor$asx(t1);
    $length = t2.get$length(t1);
    t3 = this._dev$_length;
    if (t3 == null ? $length != null : t3 !== $length)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    t3 = this._index;
    if (typeof $length !== "number")
      throw H.iae($length);
    if (t3 >= $length) {
      this._dev$_current = null;
      return false;
    }
    this._dev$_current = t2.elementAt$1(t1, t3);
    this._index = this._index + 1;
    return true;
  }
},

MappedIterable: {"": "IterableBase;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function(_) {
    var t1 = this._iterable;
    t1 = t1.get$iterator(t1);
    t1 = new H.MappedIterator(null, t1, this._f);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "MappedIterable", 0), H.getRuntimeTypeArgument(this, "MappedIterable", 1)]);
    return t1;
  },
  get$length: function(_) {
    var t1 = this._iterable;
    return t1.get$length(t1);
  },
  get$isEmpty: function(_) {
    var t1 = this._iterable;
    return t1.get$isEmpty(t1);
  },
  get$last: function(_) {
    var t1 = this._iterable;
    return this._f$1(t1.get$last(t1));
  },
  elementAt$1: function(_, index) {
    var t1 = this._iterable;
    return this._f$1(t1.elementAt$1(t1, index));
  },
  $asIterableBase: function($S, $T) {
    return [$T];
  },
  $asIterable: function($S, $T) {
    return [$T];
  },
  static: {
MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
  var t1;
  if (!!iterable.$isEfficientLength) {
    t1 = new H.EfficientLengthMappedIterable(iterable, $function);
    H.setRuntimeTypeInfo(t1, [$S, $T]);
    return t1;
  }
  t1 = new H.MappedIterable(iterable, $function);
  H.setRuntimeTypeInfo(t1, [$S, $T]);
  return t1;
}}

},

EfficientLengthMappedIterable: {"": "MappedIterable;_iterable,_f", $asMappedIterable: null,
  $asIterable: function($S, $T) {
    return [$T];
  },
  $isEfficientLength: true
},

MappedIterator: {"": "Iterator;_dev$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0()) {
      this._dev$_current = this._f$1(t1.get$current());
      return true;
    }
    this._dev$_current = null;
    return false;
  },
  get$current: function() {
    return this._dev$_current;
  },
  $asIterator: function($S, $T) {
    return [$T];
  }
},

MappedListIterable: {"": "ListIterable;_dev$_source,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$length: function(_) {
    return J.get$length$asx(this._dev$_source);
  },
  elementAt$1: function(_, index) {
    return this._f$1(J.elementAt$1$ax(this._dev$_source, index));
  },
  $asListIterable: function($S, $T) {
    return [$T];
  },
  $asIterable: function($S, $T) {
    return [$T];
  },
  $isEfficientLength: true
},

WhereIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    var t1 = J.get$iterator$ax(this._iterable);
    t1 = new H.WhereIterator(t1, this._f);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "WhereIterable", 0)]);
    return t1;
  },
  $asIterableBase: null,
  $asIterable: null
},

WhereIterator: {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0();)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  },
  $asIterator: null
},

ExpandIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    return new H.ExpandIterator(J.get$iterator$ax(this._iterable), this._f, C.C_EmptyIterator, null);
  },
  $asIterableBase: function($S, $T) {
    return [$T];
  },
  $asIterable: function($S, $T) {
    return [$T];
  }
},

ExpandIterator: {"": "Object;_iterator,_f,_currentExpansion,_dev$_current",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$current: function() {
    return this._dev$_current;
  },
  moveNext$0: function() {
    if (this._currentExpansion == null)
      return false;
    for (var t1 = this._iterator; !this._currentExpansion.moveNext$0();) {
      this._dev$_current = null;
      if (t1.moveNext$0()) {
        this._currentExpansion = null;
        this._currentExpansion = J.get$iterator$ax(this._f$1(t1.get$current()));
      } else
        return false;
    }
    this._dev$_current = this._currentExpansion.get$current();
    return true;
  }
},

EmptyIterator: {"": "Object;",
  moveNext$0: function() {
    return false;
  },
  get$current: function() {
    return;
  }
},

FixedLengthListMixin: {"": "Object;",
  set$length: function(receiver, newLength) {
    throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
  },
  add$1: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
  },
  addAll$1: function(receiver, iterable) {
    throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
  },
  remove$1: function(receiver, element) {
    throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
  },
  clear$0: function(receiver) {
    throw H.wrapException(P.UnsupportedError$("Cannot clear a fixed-length list"));
  }
},

UnmodifiableListMixin: {"": "Object;",
  $indexSet: function(_, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
  },
  set$length: function(_, newLength) {
    throw H.wrapException(P.UnsupportedError$("Cannot change the length of an unmodifiable list"));
  },
  add$1: function(_, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  addAll$1: function(_, iterable) {
    throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  remove$1: function(_, element) {
    throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  sort$1: function(_, compare) {
    throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
  },
  clear$0: function(_) {
    throw H.wrapException(P.UnsupportedError$("Cannot clear an unmodifiable list"));
  },
  setRange$4: function(_, start, end, iterable, skipCount) {
    throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
  },
  $isList: true,
  $asList: null,
  $isEfficientLength: true,
  $isIterable: true,
  $asIterable: null
},

UnmodifiableListBase: {"": "ListBase+UnmodifiableListMixin;", $asListBase: null, $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

ReversedListIterable: {"": "ListIterable;_dev$_source",
  get$length: function(_) {
    return J.get$length$asx(this._dev$_source);
  },
  elementAt$1: function(_, index) {
    var t1, t2, t3;
    t1 = this._dev$_source;
    t2 = J.getInterceptor$asx(t1);
    t3 = t2.get$length(t1);
    if (typeof t3 !== "number")
      throw t3.$sub();
    return t2.elementAt$1(t1, t3 - 1 - index);
  },
  $asListIterable: null,
  $asIterable: null
},

Symbol0: {"": "Object;_name<",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$isSymbol0 && J.$eq(this._name, other._name);
  },
  get$hashCode: function(_) {
    return 536870911 & 664597 * J.get$hashCode$(this._name);
  },
  toString$0: function(_) {
    return "Symbol(\"" + H.S(this._name) + "\")";
  },
  $isSymbol0: true,
  $isSymbol: true,
  static: {
"": "Symbol_validationPattern",
}

}}],
["dart._js_names", "dart:_js_names", , H, {
unmangleGlobalNameIfPreservedAnyways: function($name) {
  return init.mangledGlobalNames[$name];
}}],
["dart.async", "dart:async", , P, {
_attachStackTrace: function(o, st) {
  var t1;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  t1.$indexSet(t1, o, st);
},

_invokeErrorHandler: function(errorHandler, error, stackTrace) {
  var t1 = J.getInterceptor(errorHandler);
  if (!!t1.$is_args2)
    return errorHandler.call$2(error, stackTrace);
  else
    return errorHandler.call$1(error);
},

_registerErrorHandler: function(errorHandler, zone) {
  var t1 = J.getInterceptor(errorHandler);
  zone.toString;
  if (!!t1.$is_args2)
    return errorHandler;
  else
    return errorHandler;
},

getAttachedStackTrace: function(o) {
  var t1;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  return t1.$index(t1, o);
},

Future_wait: function(futures) {
  var t1, t2, t3, future, pos, t4, t5, result, completer;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new P.Future_wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = new H.ListIterator(futures, futures.length, 0, null); t3.moveNext$0();) {
    future = t3._dev$_current;
    pos = t1.remaining_2;
    t1.remaining_2 = pos + 1;
    t4 = future.catchError$1(t2);
    t5 = $.Zone__current;
    t5.toString;
    result = new P._Future(0, t5, null, null, new P.Future_wait_closure(t1, pos), null, P._registerErrorHandler(null, t5), null);
    result.$builtinTypeInfo = [null];
    t4._addListener$1(result);
  }
  t2 = t1.remaining_2;
  if (t2 === 0)
    return P._Future$immediate(C.List_empty, null);
  t1.values_1 = P.List_List(t2, null);
  t2 = J.JSArray;
  completer = new P._AsyncCompleter(P._Future$(t2));
  H.setRuntimeTypeInfo(completer, [t2]);
  t1.completer_0 = completer;
  return t1.completer_0.future;
},

_asyncRunCallback: function() {
  var callback, t1, exception, milliseconds;
  for (; t1 = $.get$_asyncCallbacks(), t1._head !== t1._tail;) {
    callback = $.get$_asyncCallbacks().removeFirst$0();
    try {
      callback.call$0();
    } catch (exception) {
      H.unwrapException(exception);
      milliseconds = C.JSNumber_methods.$tdiv(C.Duration_0._duration, 1000);
      H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, P._asyncRunCallback$closure);
      throw exception;
    }

  }
  $._callbacksAreEnqueued = false;
},

_scheduleAsyncCallback: function(callback) {
  $.get$_asyncCallbacks()._add$1(callback);
  if (!$._callbacksAreEnqueued) {
    P._createTimer(C.Duration_0, P._asyncRunCallback$closure);
    $._callbacksAreEnqueued = true;
  }
},

scheduleMicrotask: function(callback) {
  var t1, t2;
  t1 = $.Zone__current;
  if (t1 === C.C__RootZone) {
    t1.toString;
    P._scheduleAsyncCallback(callback);
    return;
  }
  t2 = t1.bindCallback$2$runGuarded(callback, true);
  t1.toString;
  P._scheduleAsyncCallback(t2);
},

StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
  var t1;
  if (sync) {
    t1 = new P._SyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null);
    H.setRuntimeTypeInfo(t1, [$T]);
  } else {
    t1 = new P._AsyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null);
    H.setRuntimeTypeInfo(t1, [$T]);
  }
  return t1;
},

_runGuarded: function(notificationHandler) {
  var result, e, s, t1, t2, exception;
  if (notificationHandler == null)
    return;
  try {
    result = notificationHandler.call$0();
    t1 = result;
    t2 = J.getInterceptor(t1);
    if (typeof t1 === "object" && t1 !== null && !!t2.$isFuture)
      return result;
    return;
  } catch (exception) {
    t1 = H.unwrapException(exception);
    e = t1;
    s = new H._StackTrace(exception, null);
    t1 = $.Zone__current;
    t2 = P._asyncError(e, s);
    t1.toString;
    P._rootHandleUncaughtError(t1, null, t1, t2, s);
  }

},

_nullDataHandler: function(value) {
},

_nullErrorHandler: function(error, stackTrace) {
  var t1 = $.Zone__current;
  t1.toString;
  P._rootHandleUncaughtError(t1, null, t1, error, stackTrace);
},

_nullDoneHandler: function() {
},

_asyncError: function(error, stackTrace) {
  if (stackTrace == null)
    return error;
  if (P.getAttachedStackTrace(error) != null)
    return error;
  P._attachStackTrace(error, stackTrace);
  return error;
},

_runUserCode: function(userCode, onSuccess, onError) {
  var e, s, exception, t1;
  try {
    onSuccess.call$1(userCode.call$0());
  } catch (exception) {
    t1 = H.unwrapException(exception);
    e = t1;
    s = new H._StackTrace(exception, null);
    onError.call$2(P._asyncError(e, s), s);
  }

},

_cancelAndError: function(subscription, future, error, stackTrace) {
  var cancelFuture, t1;
  cancelFuture = subscription.cancel$0();
  t1 = J.getInterceptor(cancelFuture);
  if (typeof cancelFuture === "object" && cancelFuture !== null && !!t1.$isFuture)
    cancelFuture.whenComplete$1(new P._cancelAndError_closure(future, error, stackTrace));
  else
    future._completeError$2(error, stackTrace);
},

_cancelAndErrorClosure: function(subscription, future) {
  return new P._cancelAndErrorClosure_closure(subscription, future);
},

_cancelAndValue: function(subscription, future, value) {
  var cancelFuture, t1;
  cancelFuture = subscription.cancel$0();
  t1 = J.getInterceptor(cancelFuture);
  if (typeof cancelFuture === "object" && cancelFuture !== null && !!t1.$isFuture)
    cancelFuture.whenComplete$1(new P._cancelAndValue_closure(future, value));
  else
    future._complete$1(value);
},

Timer_Timer: function(duration, callback) {
  var t1, t2;
  t1 = $.Zone__current;
  if (t1 === C.C__RootZone) {
    t1.toString;
    return P._createTimer(duration, callback);
  }
  t2 = t1.bindCallback$2$runGuarded(callback, true);
  t1.toString;
  return P._createTimer(duration, t2);
},

_createTimer: function(duration, callback) {
  var milliseconds = C.JSNumber_methods.$tdiv(duration._duration, 1000);
  return H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
},

_rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
  P._rootRun($self, null, $self, new P._rootHandleUncaughtError_closure(error, stackTrace));
},

_rootRun: function($self, $parent, zone, f) {
  var old, t1, t2;
  t1 = $.Zone__current;
  t2 = zone;
  if (t1 == null ? t2 == null : t1 === t2)
    return f.call$0();
  old = t1;
  try {
    $.Zone__current = zone;
    t1 = f.call$0();
    return t1;
  } finally {
    $.Zone__current = old;
  }
},

_rootRunUnary: function($self, $parent, zone, f, arg) {
  var old, t1, t2;
  t1 = $.Zone__current;
  t2 = zone;
  if (t1 == null ? t2 == null : t1 === t2)
    return f.call$1(arg);
  old = t1;
  try {
    $.Zone__current = zone;
    t1 = f.call$1(arg);
    return t1;
  } finally {
    $.Zone__current = old;
  }
},

_rootRunBinary: function($self, $parent, zone, f, arg1, arg2) {
  var old, t1, t2;
  t1 = $.Zone__current;
  t2 = zone;
  if (t1 == null ? t2 == null : t1 === t2)
    return f.call$2(arg1, arg2);
  old = t1;
  try {
    $.Zone__current = zone;
    t1 = f.call$2(arg1, arg2);
    return t1;
  } finally {
    $.Zone__current = old;
  }
},

_AsyncError: {"": "Object;error>,stackTrace<", $isError: true},

Future: {"": "Object;", $isFuture: true},

Future_wait_handleError: {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1 = t1.completer_0.future;
      if (t1._state !== 0)
        H.throwExpression(new P.StateError("Future already completed"));
      t1._asyncCompleteError$2(error, null);
    }
    return;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Future_wait_closure: {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    t3 = this.pos_1;
    if (t3 < 0 || t3 >= t2.length)
      throw H.ioore(t2, t3);
    t2[t3] = value;
    t1.remaining_2 = t1.remaining_2 - 1;
    if (t1.remaining_2 === 0) {
      t2 = t1.completer_0;
      t1 = t1.values_1;
      t2 = t2.future;
      if (t2._state !== 0)
        H.throwExpression(new P.StateError("Future already completed"));
      t2._asyncComplete$1(t1);
    }
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_Completer: {"": "Object;"},

_AsyncCompleter: {"": "_Completer;future", $as_Completer: null},

_Future: {"": "Object;_state,_zone<,_resultOrListeners,_nextListener@,_onValueCallback,_errorTestCallback,_onErrorCallback,_whenCompleteActionCallback",
  get$_isComplete: function() {
    return this._state >= 4;
  },
  get$_hasError: function() {
    return this._state === 8;
  },
  set$_isChained: function(value) {
    if (value)
      this._state = 2;
    else
      this._state = 0;
  },
  get$_onValue: function() {
    return this._state === 2 ? null : this._onValueCallback;
  },
  _onValue$1: function(arg0) {
    return this.get$_onValue().call$1(arg0);
  },
  get$_errorTest: function() {
    return this._state === 2 ? null : this._errorTestCallback;
  },
  get$_onError: function() {
    return this._state === 2 ? null : this._onErrorCallback;
  },
  get$_whenCompleteAction: function() {
    return this._state === 2 ? null : this._whenCompleteActionCallback;
  },
  _whenCompleteAction$0: function() {
    return this.get$_whenCompleteAction().call$0();
  },
  then$2$onError: function(f, onError) {
    var result = P._Future$_then(f, onError, null);
    this._addListener$1(result);
    return result;
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(onError, test) {
    var result = P._Future$_catchError(onError, test, null);
    this._addListener$1(result);
    return result;
  },
  catchError$1: function(onError) {
    return this.catchError$2$test(onError, null);
  },
  whenComplete$1: function(action) {
    var result = P._Future$_whenComplete(action, H.getRuntimeTypeArgument(this, "_Future", 0));
    this._addListener$1(result);
    return result;
  },
  get$_async$_value: function() {
    return this._resultOrListeners;
  },
  get$_error: function() {
    return this._resultOrListeners;
  },
  _setValue$1: function(value) {
    this._state = 4;
    this._resultOrListeners = value;
  },
  _setError$2: function(error, stackTrace) {
    this._state = 8;
    this._resultOrListeners = new P._AsyncError(error, stackTrace);
  },
  _addListener$1: function(listener) {
    if (this._state >= 4) {
      this._zone.toString;
      P._scheduleAsyncCallback(new P._Future__addListener_closure(this, listener));
    } else {
      listener.set$_nextListener(this._resultOrListeners);
      this._resultOrListeners = listener;
    }
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _complete$1: function(value) {
    var t1, listeners;
    t1 = J.getInterceptor(value);
    if (typeof value === "object" && value !== null && !!t1.$isFuture) {
      P._Future__chainFutures(value, this);
      return;
    }
    listeners = this._removeListeners$0();
    this._setValue$1(value);
    P._Future__propagateToListeners(this, listeners);
  },
  _completeError$2: function(error, stackTrace) {
    var listeners;
    if (stackTrace != null)
      P._attachStackTrace(error, stackTrace);
    listeners = this._state === 2 ? null : this._removeListeners$0();
    this._setError$2(error, stackTrace);
    P._Future__propagateToListeners(this, listeners);
  },
  _completeError$1: function(error) {
    return this._completeError$2(error, null);
  },
  get$_completeError: function() {
    return new B.BoundClosure$20(this, P._Future.prototype._completeError$2, null, "_completeError$2");
  },
  _asyncComplete$1: function(value) {
    if (this._state !== 0)
      H.throwExpression(new P.StateError("Future already completed"));
    this._state = 1;
    this._zone.toString;
    P._scheduleAsyncCallback(new P._Future__asyncComplete_closure(this, value));
  },
  _asyncCompleteError$2: function(error, stackTrace) {
    if (this._state !== 0)
      H.throwExpression(new P.StateError("Future already completed"));
    this._state = 1;
    this._zone.toString;
    P._scheduleAsyncCallback(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
  },
  _async$_Future$immediate$1: function(value, $T) {
    this._asyncComplete$1(value);
  },
  $is_Future: true,
  $isFuture: true,
  static: {
"": "_Future__INCOMPLETE,_Future__PENDING_COMPLETE,_Future__CHAINED,_Future__VALUE,_Future__ERROR",
_Future$: function($T) {
  var t1 = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$T]);
  return t1;
},

_Future$immediate: function(value, $T) {
  var t1 = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$T]);
  t1._async$_Future$immediate$1(value, $T);
  return t1;
},

_Future$_then: function(onValueCallback, onErrorCallback, $T) {
  var t1 = $.Zone__current;
  t1.toString;
  t1 = new P._Future(0, t1, null, null, onValueCallback, null, P._registerErrorHandler(onErrorCallback, t1), null);
  H.setRuntimeTypeInfo(t1, [$T]);
  return t1;
},

_Future$_catchError: function(onErrorCallback, errorTestCallback, $T) {
  var t1, t2;
  t1 = $.Zone__current;
  t2 = P._registerErrorHandler(onErrorCallback, t1);
  $.Zone__current.toString;
  t2 = new P._Future(0, t1, null, null, null, errorTestCallback, t2, null);
  H.setRuntimeTypeInfo(t2, [$T]);
  return t2;
},

_Future$_whenComplete: function(whenCompleteActionCallback, $T) {
  var t1 = $.Zone__current;
  t1.toString;
  t1 = new P._Future(0, t1, null, null, null, null, null, whenCompleteActionCallback);
  H.setRuntimeTypeInfo(t1, [$T]);
  return t1;
},

_Future__chainFutures: function(source, target) {
  var t1;
  target.set$_isChained(true);
  t1 = J.getInterceptor(source);
  if (typeof source === "object" && source !== null && !!t1.$is_Future)
    if (source._state >= 4)
      P._Future__propagateToListeners(source, target);
    else
      source._addListener$1(target);
  else
    source.then$2$onError(new P._Future__chainFutures_closure(target), new P._Future__chainFutures_closure0(target));
},

_Future__propagateMultipleListeners: function(source, listeners) {
  var listeners0;
  do {
    listeners0 = listeners.get$_nextListener();
    listeners.set$_nextListener(null);
    P._Future__propagateToListeners(source, listeners);
    if (listeners0 != null) {
      listeners = listeners0;
      continue;
    } else
      break;
  } while (true);
},

_Future__propagateToListeners: function(source, listeners) {
  var t1, t2, hasError, asyncError, t3, t4, t5, chainSource, listeners0;
  t1 = {};
  t1.source_4 = source;
  for (; true;) {
    t2 = {};
    if (!t1.source_4.get$_isComplete())
      return;
    hasError = t1.source_4.get$_hasError();
    if (hasError && listeners == null) {
      asyncError = t1.source_4.get$_error();
      t2 = t1.source_4.get$_zone();
      t3 = J.get$error$x(asyncError);
      t4 = asyncError.get$stackTrace();
      t2.toString;
      P._rootHandleUncaughtError(t2, null, t2, t3, t4);
      return;
    }
    if (listeners == null)
      return;
    if (listeners.get$_nextListener() != null) {
      P._Future__propagateMultipleListeners(t1.source_4, listeners);
      return;
    }
    if (hasError) {
      t3 = t1.source_4.get$_zone();
      t4 = listeners.get$_zone();
      t3.toString;
      t4.toString;
      t3 = t4 == null ? t3 != null : t4 !== t3;
    } else
      t3 = false;
    if (t3) {
      asyncError = t1.source_4.get$_error();
      t2 = t1.source_4.get$_zone();
      t3 = J.get$error$x(asyncError);
      t4 = asyncError.get$stackTrace();
      t2.toString;
      P._rootHandleUncaughtError(t2, null, t2, t3, t4);
      return;
    }
    t3 = $.Zone__current;
    t4 = listeners.get$_zone();
    if (t3 == null ? t4 != null : t3 !== t4) {
      t4.toString;
      P._rootRun(t4, null, t4, new P._Future__propagateToListeners_closure(t1, listeners));
      return;
    }
    t2.listenerHasValue_1 = null;
    t2.listenerValueOrError_2 = null;
    t2.isPropagationAborted_3 = false;
    t3 = listeners.get$_zone();
    t3.toString;
    P._rootRun(t3, null, t3, new P._Future__propagateToListeners_closure0(t1, t2, hasError, listeners));
    if (t2.isPropagationAborted_3)
      return;
    t3 = t2.listenerHasValue_1 === true;
    if (t3) {
      t4 = t2.listenerValueOrError_2;
      t5 = J.getInterceptor(t4);
      t5 = typeof t4 === "object" && t4 !== null && !!t5.$isFuture;
      t4 = t5;
    } else
      t4 = false;
    if (t4) {
      chainSource = t2.listenerValueOrError_2;
      t2 = J.getInterceptor(chainSource);
      if (typeof chainSource === "object" && chainSource !== null && !!t2.$is_Future && chainSource._state >= 4) {
        listeners.set$_isChained(true);
        t1.source_4 = chainSource;
        continue;
      }
      P._Future__chainFutures(chainSource, listeners);
      return;
    }
    if (t3) {
      listeners0 = listeners._removeListeners$0();
      listeners._setValue$1(t2.listenerValueOrError_2);
    } else {
      listeners0 = listeners._removeListeners$0();
      asyncError = t2.listenerValueOrError_2;
      listeners._setError$2(J.get$error$x(asyncError), asyncError.get$stackTrace());
    }
    t1.source_4 = listeners;
    listeners = listeners0;
  }
}}

},

_Future__addListener_closure: {"": "Closure;this_0,listener_1",
  call$0: function() {
    P._Future__propagateToListeners(this.this_0, this.listener_1);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_Future__chainFutures_closure: {"": "Closure;target_0",
  call$1: function(value) {
    this.target_0._complete$1(value);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_Future__chainFutures_closure0: {"": "Closure;target_1",
  call$2: function(error, stackTrace) {
    this.target_1._completeError$2(error, stackTrace);
  },
  "+call:2:0": 0,
  "*call": [0],
  call$1: function(error) {
    return this.call$2(error, null);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args2: true,
  $is_args1: true
},

_Future__asyncComplete_closure: {"": "Closure;this_0,value_1",
  call$0: function() {
    this.this_0._complete$1(this.value_1);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_Future__asyncCompleteError_closure: {"": "Closure;this_0,error_1,stackTrace_2",
  call$0: function() {
    this.this_0._completeError$2(this.error_1, this.stackTrace_2);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_Future__propagateToListeners_closure: {"": "Closure;box_2,listener_3",
  call$0: function() {
    P._Future__propagateToListeners(this.box_2.source_4, this.listener_3);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_Future__propagateToListeners_closure0: {"": "Closure;box_2,box_1,hasError_4,listener_5",
  call$0: function() {
    var t1, value, asyncError, test, matchesTest, errorCallback, e, s, t2, t3, t4, exception;
    t1 = {};
    try {
      t2 = this.box_2;
      if (!this.hasError_4) {
        value = t2.source_4.get$_async$_value();
        t2 = this.listener_5;
        t3 = this.box_1;
        if (t2.get$_onValue() != null) {
          t3.listenerValueOrError_2 = t2._onValue$1(value);
          t3.listenerHasValue_1 = true;
        } else {
          t3.listenerValueOrError_2 = value;
          t3.listenerHasValue_1 = true;
        }
      } else {
        asyncError = t2.source_4.get$_error();
        t2 = this.listener_5;
        test = t2.get$_errorTest();
        matchesTest = true;
        if (test != null)
          matchesTest = test.call$1(J.get$error$x(asyncError));
        t3 = matchesTest === true && t2.get$_onError() != null;
        t4 = this.box_1;
        if (t3) {
          errorCallback = t2.get$_onError();
          t4.listenerValueOrError_2 = P._invokeErrorHandler(errorCallback, J.get$error$x(asyncError), asyncError.get$stackTrace());
          t4.listenerHasValue_1 = true;
        } else {
          t4.listenerValueOrError_2 = asyncError;
          t4.listenerHasValue_1 = false;
        }
      }
      t2 = this.listener_5;
      if (t2.get$_whenCompleteAction() != null) {
        t1.completeResult_0 = t2._whenCompleteAction$0();
        t3 = t1.completeResult_0;
        t4 = J.getInterceptor(t3);
        if (typeof t3 === "object" && t3 !== null && !!t4.$isFuture) {
          t2.set$_isChained(true);
          t1.completeResult_0.then$2$onError(new P._Future__propagateToListeners__closure(this.box_2, t2), new P._Future__propagateToListeners__closure0(t1, t2));
          this.box_1.isPropagationAborted_3 = true;
        }
      }
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      if (this.hasError_4) {
        t1 = J.get$error$x(this.box_2.source_4.get$_error());
        t2 = e;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      t2 = this.box_1;
      if (t1)
        t2.listenerValueOrError_2 = this.box_2.source_4.get$_error();
      else
        t2.listenerValueOrError_2 = new P._AsyncError(P._asyncError(e, s), s);
      this.box_1.listenerHasValue_1 = false;
    }

  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_Future__propagateToListeners__closure: {"": "Closure;box_2,listener_6",
  call$1: function(ignored) {
    P._Future__propagateToListeners(this.box_2.source_4, this.listener_6);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_Future__propagateToListeners__closure0: {"": "Closure;box_0,listener_7",
  call$2: function(error, stackTrace) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.completeResult_0;
    t3 = J.getInterceptor(t2);
    if (typeof t2 !== "object" || t2 === null || !t3.$is_Future) {
      t1.completeResult_0 = P._Future$(null);
      t1.completeResult_0._setError$2(error, stackTrace);
    }
    P._Future__propagateToListeners(t1.completeResult_0, this.listener_7);
  },
  "+call:2:0": 0,
  "*call": [0],
  call$1: function(error) {
    return this.call$2(error, null);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args2: true,
  $is_args1: true
},

Stream: {"": "Object;",
  map$1: function(_, convert) {
    var t1 = new P._MapStream(convert, this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "Stream", 0), null]);
    return t1;
  },
  forEach$1: function(_, action) {
    var t1, future;
    t1 = {};
    future = P._Future$(null);
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_forEach_closure(t1, this, action, future), true, new P.Stream_forEach_closure0(future), future.get$_completeError());
    return future;
  },
  get$length: function(_) {
    var t1, future;
    t1 = {};
    future = P._Future$(J.JSInt);
    t1.count_0 = 0;
    this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
    return future;
  },
  get$isEmpty: function(_) {
    var t1, future;
    t1 = {};
    future = P._Future$(J.JSBool);
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_isEmpty_closure(t1, future), true, new P.Stream_isEmpty_closure0(future), future.get$_completeError());
    return future;
  },
  toList$0: function(_) {
    var result, future;
    result = [];
    future = P._Future$([J.JSArray, H.getRuntimeTypeArgument(this, "Stream", 0)]);
    this.listen$4$cancelOnError$onDone$onError(new P.Stream_toList_closure(this, result), true, new P.Stream_toList_closure0(result, future), future.get$_completeError());
    return future;
  },
  get$last: function(_) {
    var t1, future;
    t1 = {};
    future = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
    t1.result_0 = null;
    t1.foundResult_1 = false;
    this.listen$4$cancelOnError$onDone$onError(new P.Stream_last_closure(t1, this), true, new P.Stream_last_closure0(t1, future), future.get$_completeError());
    return future;
  },
  firstWhere$2$defaultValue: function(_, test, defaultValue) {
    var t1, future;
    t1 = {};
    future = P._Future$(null);
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_firstWhere_closure(t1, this, test, future), true, new P.Stream_firstWhere_closure0(defaultValue, future), future.get$_completeError());
    return future;
  },
  firstWhere$1: function($receiver, test) {
    return this.firstWhere$2$defaultValue($receiver, test, null);
  },
  elementAt$1: function(_, index) {
    var t1, t2, future;
    t1 = {};
    t1.index_0 = index;
    t2 = t1.index_0;
    if (typeof t2 !== "number" || Math.floor(t2) !== t2 || t2 < 0)
      throw H.wrapException(new P.ArgumentError(t2));
    future = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
    t1.subscription_1 = null;
    t1.subscription_1 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_elementAt_closure(t1, this, future), true, new P.Stream_elementAt_closure0(t1, future), future.get$_completeError());
    return future;
  }
},

Stream_forEach_closure: {"": "Closure;box_0,this_1,action_2,future_3",
  call$1: function(element) {
    P._runUserCode(new P.Stream_forEach__closure(this.action_2, element), new P.Stream_forEach__closure0(), P._cancelAndErrorClosure(this.box_0.subscription_0, this.future_3));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Stream_forEach__closure: {"": "Closure;action_4,element_5",
  call$0: function() {
    return this.action_4.call$1(this.element_5);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Stream_forEach__closure0: {"": "Closure;",
  call$1: function(_) {
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Stream_forEach_closure0: {"": "Closure;future_6",
  call$0: function() {
    this.future_6._complete$1(null);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Stream_length_closure: {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = t1.count_0 + 1;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Stream_length_closure0: {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._complete$1(this.box_0.count_0);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Stream_isEmpty_closure: {"": "Closure;box_0,future_1",
  call$1: function(_) {
    P._cancelAndValue(this.box_0.subscription_0, this.future_1, false);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Stream_isEmpty_closure0: {"": "Closure;future_2",
  call$0: function() {
    this.future_2._complete$1(true);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Stream_toList_closure: {"": "Closure;this_0,result_1",
  call$1: function(data) {
    this.result_1.push(data);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Stream_toList_closure0: {"": "Closure;result_2,future_3",
  call$0: function() {
    this.future_3._complete$1(this.result_2);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Stream_last_closure: {"": "Closure;box_0,this_1",
  call$1: function(value) {
    var t1 = this.box_0;
    t1.foundResult_1 = true;
    t1.result_0 = value;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Stream_last_closure0: {"": "Closure;box_0,future_2",
  call$0: function() {
    var t1 = this.box_0;
    if (t1.foundResult_1) {
      this.future_2._complete$1(t1.result_0);
      return;
    }
    this.future_2._completeError$1(new P.StateError("No elements"));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Stream_firstWhere_closure: {"": "Closure;box_0,this_1,test_2,future_3",
  call$1: function(value) {
    var t1, t2;
    t1 = this.box_0;
    t2 = this.future_3;
    P._runUserCode(new P.Stream_firstWhere__closure(this.test_2, value), new P.Stream_firstWhere__closure0(t1, t2, value), P._cancelAndErrorClosure(t1.subscription_0, t2));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Stream_firstWhere__closure: {"": "Closure;test_4,value_5",
  call$0: function() {
    return this.test_4.call$1(this.value_5);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Stream_firstWhere__closure0: {"": "Closure;box_0,future_6,value_7",
  call$1: function(isMatch) {
    if (isMatch === true)
      P._cancelAndValue(this.box_0.subscription_0, this.future_6, this.value_7);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Stream_firstWhere_closure0: {"": "Closure;defaultValue_8,future_9",
  call$0: function() {
    this.future_9._completeError$1(new P.StateError("firstMatch ended without match"));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Stream_elementAt_closure: {"": "Closure;box_0,this_1,future_2",
  call$1: function(value) {
    var t1, t2;
    t1 = this.box_0;
    t2 = t1.index_0;
    if (t2 === 0) {
      P._cancelAndValue(t1.subscription_1, this.future_2, value);
      return;
    }
    t1.index_0 = t2 - 1;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Stream_elementAt_closure0: {"": "Closure;box_0,future_3",
  call$0: function() {
    this.future_3._completeError$1(new P.RangeError("value " + H.S(this.box_0.index_0)));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

StreamSubscription: {"": "Object;"},

_StreamController: {"": "Object;",
  get$_pendingEvents: function() {
    if ((this._state & 8) === 0)
      return this._varData;
    return this._varData.get$varData();
  },
  _ensurePendingEvents$0: function() {
    if ((this._state & 8) === 0) {
      if (this._varData == null)
        this._varData = new P._StreamImplEvents(null, null, 0);
      return this._varData;
    }
    var t1 = this._varData.get$varData();
    return t1;
  },
  get$_async$_subscription: function() {
    if ((this._state & 8) !== 0)
      return this._varData.get$varData();
    return this._varData;
  },
  _badEventState$0: function() {
    if ((this._state & 4) !== 0)
      return new P.StateError("Cannot add event after closing");
    return new P.StateError("Cannot add event while adding a stream");
  },
  _ensureDoneFuture$0: function() {
    if (this._doneFuture == null) {
      this._doneFuture = P._Future$(null);
      if ((this._state & 2) !== 0)
        this._doneFuture._complete$1(null);
    }
    return this._doneFuture;
  },
  add$1: function(_, value) {
    if (this._state >= 4)
      throw H.wrapException(this._badEventState$0());
    this._async$_add$1(value);
  },
  close$0: function(_) {
    var t1 = this._state;
    if ((t1 & 4) !== 0)
      return this._doneFuture;
    if (t1 >= 4)
      throw H.wrapException(this._badEventState$0());
    this._state = (t1 | 4) >>> 0;
    this._ensureDoneFuture$0();
    t1 = this._state;
    if ((t1 & 1) !== 0)
      this._sendDone$0();
    else if ((t1 & 3) === 0) {
      t1 = this._ensurePendingEvents$0();
      t1.add$1(t1, C.C__DelayedDone);
    }
    return this._doneFuture;
  },
  _async$_add$1: function(value) {
    var t1 = this._state;
    if ((t1 & 1) !== 0)
      this._sendData$1(value);
    else if ((t1 & 3) === 0) {
      t1 = this._ensurePendingEvents$0();
      t1.add$1(t1, new P._DelayedData(value, null));
    }
  },
  _addError$2: function(error, stackTrace) {
    var t1 = this._state;
    if ((t1 & 1) !== 0)
      this._sendError$2(error, stackTrace);
    else if ((t1 & 3) === 0) {
      t1 = this._ensurePendingEvents$0();
      t1.add$1(t1, new P._DelayedError(error, stackTrace, null));
    }
  },
  _subscribe$1: function(cancelOnError) {
    var t1, t2, subscription, pendingEvents;
    if ((this._state & 3) !== 0)
      throw H.wrapException(new P.StateError("Stream has already been listened to."));
    t1 = $.Zone__current;
    t2 = cancelOnError ? 1 : 0;
    subscription = new P._ControllerSubscription(this, null, null, null, t1, t2, null, null);
    H.setRuntimeTypeInfo(subscription, [null]);
    pendingEvents = this.get$_pendingEvents();
    this._state = (this._state | 1) >>> 0;
    if ((this._state & 8) !== 0)
      this._varData.set$varData(subscription);
    else
      this._varData = subscription;
    subscription._setPendingEvents$1(pendingEvents);
    subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
    return subscription;
  },
  _recordCancel$1: function(subscription) {
    var t1, future;
    if ((this._state & 8) !== 0)
      this._varData.cancel$0();
    this._varData = null;
    this._state = (this._state & 4294967286 | 2) >>> 0;
    t1 = new P._StreamController__recordCancel_complete(this);
    future = P._runGuarded(this.get$_onCancel());
    if (future != null)
      future = future.whenComplete$1(t1);
    else
      t1.call$0();
    return future;
  },
  _recordPause$1: function(subscription) {
    var addState;
    if ((this._state & 8) !== 0) {
      addState = this._varData;
      addState.pause$0(addState);
    }
    P._runGuarded(this.get$_onPause());
  },
  _recordResume$1: function(subscription) {
    if ((this._state & 8) !== 0)
      this._varData.resume$0();
    P._runGuarded(this.get$_onResume());
  }
},

_StreamController__subscribe_closure: {"": "Closure;this_0",
  call$0: function() {
    P._runGuarded(this.this_0.get$_onListen());
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_StreamController__recordCancel_complete: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0._doneFuture;
    if (t1 != null && t1._state === 0)
      t1._asyncComplete$1(null);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_SyncStreamControllerDispatch: {"": "Object;",
  _sendData$1: function(data) {
    this.get$_async$_subscription()._async$_add$1(data);
  },
  _sendError$2: function(error, stackTrace) {
    this.get$_async$_subscription()._addError$2(error, stackTrace);
  },
  _sendDone$0: function() {
    this.get$_async$_subscription()._close$0();
  }
},

_AsyncStreamControllerDispatch: {"": "Object;",
  _sendData$1: function(data) {
    this.get$_async$_subscription()._addPending$1(new P._DelayedData(data, null));
  },
  _sendError$2: function(error, stackTrace) {
    this.get$_async$_subscription()._addPending$1(new P._DelayedError(error, stackTrace, null));
  },
  _sendDone$0: function() {
    this.get$_async$_subscription()._addPending$1(C.C__DelayedDone);
  }
},

_AsyncStreamController: {"": "_StreamController__AsyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture"},

_StreamController__AsyncStreamControllerDispatch: {"": "_StreamController+_AsyncStreamControllerDispatch;"},

_SyncStreamController: {"": "_StreamController__SyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture"},

_StreamController__SyncStreamControllerDispatch: {"": "_StreamController+_SyncStreamControllerDispatch;"},

_ControllerStream: {"": "_StreamImpl;_async$_controller",
  _createSubscription$1: function(cancelOnError) {
    return this._async$_controller._subscribe$1(cancelOnError);
  },
  get$hashCode: function(_) {
    return (H.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (this === other)
      return true;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$is_ControllerStream)
      return false;
    return other._async$_controller === this._async$_controller;
  },
  $is_ControllerStream: true,
  $as_StreamImpl: null
},

_ControllerSubscription: {"": "_BufferingStreamSubscription;_async$_controller<,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
  _onCancel$0: function() {
    return this.get$_async$_controller()._recordCancel$1(this);
  },
  _onPause$0: function() {
    this.get$_async$_controller()._recordPause$1(this);
  },
  get$_onPause: function() {
    return new B.BoundClosure$0(this, P._ControllerSubscription.prototype._onPause$0, null, "_onPause$0");
  },
  _onResume$0: function() {
    this.get$_async$_controller()._recordResume$1(this);
  },
  get$_onResume: function() {
    return new B.BoundClosure$0(this, P._ControllerSubscription.prototype._onResume$0, null, "_onResume$0");
  },
  $as_BufferingStreamSubscription: null
},

_EventSink: {"": "Object;"},

_BufferingStreamSubscription: {"": "Object;_async$_onData,_onError<,_onDone,_zone<,_state,_cancelFuture,_pending",
  _setPendingEvents$1: function(pendingEvents) {
    if (pendingEvents == null)
      return;
    this._pending = pendingEvents;
    if (!pendingEvents.get$isEmpty(pendingEvents)) {
      this._state = (this._state | 64) >>> 0;
      this._pending.schedule$1(this);
    }
  },
  onData$1: function(handleData) {
    $.Zone__current.toString;
    this._async$_onData = handleData;
  },
  onError$1: function(_, handleError) {
    if (handleError == null)
      handleError = P._nullErrorHandler$closure;
    this._onError = P._registerErrorHandler(handleError, $.Zone__current);
  },
  onDone$1: function(handleDone) {
    $.Zone__current.toString;
    this._onDone = handleDone;
  },
  pause$1: function(_, resumeSignal) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    this._state = (t1 + 128 | 4) >>> 0;
    if (t1 < 128 && this._pending != null)
      this._pending.cancelSchedule$0();
    if ((t1 & 4) === 0 && (this._state & 32) === 0)
      this._guardCallback$1(this.get$_onPause());
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 >= 128) {
      this._state = t1 - 128;
      t1 = this._state;
      if (t1 < 128) {
        if ((t1 & 64) !== 0) {
          t1 = this._pending;
          t1 = !t1.get$isEmpty(t1);
        } else
          t1 = false;
        if (t1)
          this._pending.schedule$1(this);
        else {
          this._state = (this._state & 4294967291) >>> 0;
          if ((this._state & 32) === 0)
            this._guardCallback$1(this.get$_onResume());
        }
      }
    }
  },
  cancel$0: function() {
    this._state = (this._state & 4294967279) >>> 0;
    if ((this._state & 8) !== 0)
      return this._cancelFuture;
    this._cancel$0();
    return this._cancelFuture;
  },
  get$_mayResumeInput: function() {
    if (this._state < 128) {
      var t1 = this._pending;
      t1 = t1 == null || t1.get$isEmpty(t1);
    } else
      t1 = false;
    return t1;
  },
  _cancel$0: function() {
    this._state = (this._state | 8) >>> 0;
    if ((this._state & 64) !== 0)
      this._pending.cancelSchedule$0();
    if ((this._state & 32) === 0)
      this._pending = null;
    this._cancelFuture = this._onCancel$0();
  },
  _async$_add$1: function(data) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 < 32)
      this._sendData$1(data);
    else
      this._addPending$1(new P._DelayedData(data, null));
  },
  _addError$2: function(error, stackTrace) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 < 32)
      this._sendError$2(error, stackTrace);
    else
      this._addPending$1(new P._DelayedError(error, stackTrace, null));
  },
  _close$0: function() {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    this._state = (t1 | 2) >>> 0;
    if (this._state < 32)
      this._sendDone$0();
    else
      this._addPending$1(C.C__DelayedDone);
  },
  _onPause$0: function() {
  },
  get$_onPause: function() {
    return new B.BoundClosure$0(this, P._BufferingStreamSubscription.prototype._onPause$0, null, "_onPause$0");
  },
  _onResume$0: function() {
  },
  get$_onResume: function() {
    return new B.BoundClosure$0(this, P._BufferingStreamSubscription.prototype._onResume$0, null, "_onResume$0");
  },
  _onCancel$0: function() {
  },
  _addPending$1: function($event) {
    var pending, t1;
    pending = this._pending;
    if (pending == null) {
      pending = new P._StreamImplEvents(null, null, 0);
      this._pending = pending;
    }
    pending.add$1(pending, $event);
    t1 = this._state;
    if ((t1 & 64) === 0) {
      this._state = (t1 | 64) >>> 0;
      if (this._state < 128)
        this._pending.schedule$1(this);
    }
  },
  _sendData$1: function(data) {
    var t1 = this._state;
    this._state = (t1 | 32) >>> 0;
    this._zone.runUnaryGuarded$2(this._async$_onData, data);
    this._state = (this._state & 4294967263) >>> 0;
    this._checkState$1((t1 & 4) !== 0);
  },
  _sendError$2: function(error, stackTrace) {
    var t1, t2, t3;
    t1 = this._state;
    t2 = new P._BufferingStreamSubscription__sendError_sendError(this, error, stackTrace);
    if ((t1 & 1) !== 0) {
      this._state = (t1 | 16) >>> 0;
      this._cancel$0();
      t1 = this._cancelFuture;
      t3 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t3.$isFuture)
        t1.whenComplete$1(t2);
      else
        t2.call$0();
    } else {
      t2.call$0();
      this._checkState$1((t1 & 4) !== 0);
    }
  },
  _sendDone$0: function() {
    var t1, t2, t3;
    t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
    this._cancel$0();
    this._state = (this._state | 16) >>> 0;
    t2 = this._cancelFuture;
    t3 = J.getInterceptor(t2);
    if (typeof t2 === "object" && t2 !== null && !!t3.$isFuture)
      t2.whenComplete$1(t1);
    else
      t1.call$0();
  },
  _guardCallback$1: function(callback) {
    var t1 = this._state;
    this._state = (t1 | 32) >>> 0;
    callback.call$0();
    this._state = (this._state & 4294967263) >>> 0;
    this._checkState$1((t1 & 4) !== 0);
  },
  _checkState$1: function(wasInputPaused) {
    var t1, isInputPaused;
    if ((this._state & 64) !== 0) {
      t1 = this._pending;
      t1 = t1.get$isEmpty(t1);
    } else
      t1 = false;
    if (t1) {
      this._state = (this._state & 4294967231) >>> 0;
      if ((this._state & 4) !== 0 && this.get$_mayResumeInput())
        this._state = (this._state & 4294967291) >>> 0;
    }
    for (; true; wasInputPaused = isInputPaused) {
      t1 = this._state;
      if ((t1 & 8) !== 0) {
        this._pending = null;
        return;
      }
      isInputPaused = (t1 & 4) !== 0;
      if (wasInputPaused === isInputPaused)
        break;
      this._state = (t1 ^ 32) >>> 0;
      if (isInputPaused)
        this._onPause$0();
      else
        this._onResume$0();
      this._state = (this._state & 4294967263) >>> 0;
    }
    t1 = this._state;
    if ((t1 & 64) !== 0 && t1 < 128)
      this._pending.schedule$1(this);
  },
  static: {
"": "_BufferingStreamSubscription__STATE_CANCEL_ON_ERROR,_BufferingStreamSubscription__STATE_CLOSED,_BufferingStreamSubscription__STATE_INPUT_PAUSED,_BufferingStreamSubscription__STATE_CANCELED,_BufferingStreamSubscription__STATE_WAIT_FOR_CANCEL,_BufferingStreamSubscription__STATE_IN_CALLBACK,_BufferingStreamSubscription__STATE_HAS_PENDING,_BufferingStreamSubscription__STATE_PAUSE_COUNT,_BufferingStreamSubscription__STATE_PAUSE_COUNT_SHIFT",
}

},

_BufferingStreamSubscription__sendError_sendError: {"": "Closure;this_0,error_1,stackTrace_2",
  call$0: function() {
    var t1, t2, t3, t4, t5;
    t1 = this.this_0;
    t2 = t1._state;
    if ((t2 & 8) !== 0 && (t2 & 16) === 0)
      return;
    t1._state = (t2 | 32) >>> 0;
    t2 = t1._zone;
    t3 = $.Zone__current;
    t2.toString;
    t3.toString;
    if (t3 == null ? t2 != null : t3 !== t2)
      P._rootHandleUncaughtError(t3, null, t3, this.error_1, this.stackTrace_2);
    else {
      t3 = t1._onError;
      t4 = J.getInterceptor(t3);
      t5 = this.error_1;
      if (!!t4.$is_args2)
        t2.runBinaryGuarded$3(t3, t5, this.stackTrace_2);
      else
        t2.runUnaryGuarded$2(t3, t5);
    }
    t1._state = (t1._state & 4294967263) >>> 0;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_BufferingStreamSubscription__sendDone_sendDone: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1._state;
    if ((t2 & 16) === 0)
      return;
    t1._state = (t2 | 42) >>> 0;
    t1._zone.runGuarded$1(t1._onDone);
    t1._state = (t1._state & 4294967263) >>> 0;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_StreamImpl: {"": "Stream;",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var subscription = this._createSubscription$1(true === cancelOnError);
    subscription.onData$1(onData);
    subscription.onError$1(subscription, onError);
    subscription.onDone$1(onDone);
    return subscription;
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  },
  _createSubscription$1: function(cancelOnError) {
    var t1, t2, t3;
    t1 = H.getRuntimeTypeArgument(this, "_StreamImpl", 0);
    t2 = $.Zone__current;
    t3 = cancelOnError ? 1 : 0;
    t3 = new P._BufferingStreamSubscription(null, null, null, t2, t3, null, null);
    H.setRuntimeTypeInfo(t3, [t1]);
    return t3;
  },
  $asStream: null
},

_DelayedEvent: {"": "Object;next@"},

_DelayedData: {"": "_DelayedEvent;value>,next",
  perform$1: function(dispatch) {
    dispatch._sendData$1(this.value);
  }
},

_DelayedError: {"": "_DelayedEvent;error>,stackTrace<,next",
  perform$1: function(dispatch) {
    dispatch._sendError$2(this.error, this.stackTrace);
  }
},

_DelayedDone: {"": "Object;",
  perform$1: function(dispatch) {
    dispatch._sendDone$0();
  },
  get$next: function() {
    return;
  },
  set$next: function(_) {
    throw H.wrapException(P.StateError$("No events after a done."));
  }
},

_PendingEvents: {"": "Object;",
  schedule$1: function(dispatch) {
    var t1 = this._state;
    if (t1 === 1)
      return;
    if (t1 >= 1) {
      this._state = 1;
      return;
    }
    P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
    this._state = 1;
  },
  cancelSchedule$0: function() {
    if (this._state === 1)
      this._state = 3;
  }
},

_PendingEvents_schedule_closure: {"": "Closure;this_0,dispatch_1",
  call$0: function() {
    var t1, oldState;
    t1 = this.this_0;
    oldState = t1._state;
    t1._state = 0;
    if (oldState === 3)
      return;
    t1.handleNext$1(this.dispatch_1);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_StreamImplEvents: {"": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
  get$isEmpty: function(_) {
    return this.lastPendingEvent == null;
  },
  add$1: function(_, $event) {
    var t1 = this.lastPendingEvent;
    if (t1 == null) {
      this.lastPendingEvent = $event;
      this.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      this.lastPendingEvent = $event;
    }
  },
  handleNext$1: function(dispatch) {
    var $event = this.firstPendingEvent;
    this.firstPendingEvent = $event.get$next();
    if (this.firstPendingEvent == null)
      this.lastPendingEvent = null;
    $event.perform$1(dispatch);
  }
},

_cancelAndError_closure: {"": "Closure;future_0,error_1,stackTrace_2",
  call$0: function() {
    return this.future_0._completeError$2(this.error_1, this.stackTrace_2);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_cancelAndErrorClosure_closure: {"": "Closure;subscription_0,future_1",
  call$2: function(error, stackTrace) {
    return P._cancelAndError(this.subscription_0, this.future_1, error, stackTrace);
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

_cancelAndValue_closure: {"": "Closure;future_0,value_1",
  call$0: function() {
    return this.future_0._complete$1(this.value_1);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_ForwardingStream: {"": "Stream;",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var result = P._ForwardingStreamSubscription$(this, true === cancelOnError, H.getRuntimeTypeArgument(this, "_ForwardingStream", 0), H.getRuntimeTypeArgument(this, "_ForwardingStream", 1));
    result.onData$1(onData);
    result.onError$1(result, onError);
    result.onDone$1(onDone);
    return result;
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  },
  _handleData$2: function(data, sink) {
    sink._async$_add$1(data);
  },
  $asStream: function($S, $T) {
    return [$T];
  }
},

_ForwardingStreamSubscription: {"": "_BufferingStreamSubscription;_stream,_async$_subscription,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
  _async$_add$1: function(data) {
    if ((this._state & 2) !== 0)
      return;
    P._BufferingStreamSubscription.prototype._async$_add$1.call(this, data);
  },
  _addError$2: function(error, stackTrace) {
    if ((this._state & 2) !== 0)
      return;
    P._BufferingStreamSubscription.prototype._addError$2.call(this, error, stackTrace);
  },
  _onPause$0: function() {
    var t1 = this._async$_subscription;
    if (t1 == null)
      return;
    t1.pause$0(t1);
  },
  get$_onPause: function() {
    return new B.BoundClosure$0(this, P._ForwardingStreamSubscription.prototype._onPause$0, null, "_onPause$0");
  },
  _onResume$0: function() {
    var t1 = this._async$_subscription;
    if (t1 == null)
      return;
    t1.resume$0();
  },
  get$_onResume: function() {
    return new B.BoundClosure$0(this, P._ForwardingStreamSubscription.prototype._onResume$0, null, "_onResume$0");
  },
  _onCancel$0: function() {
    var t1 = this._async$_subscription;
    if (t1 != null) {
      this._async$_subscription = null;
      t1.cancel$0();
    }
  },
  _handleData$1: function(data) {
    this._stream._handleData$2(data, this);
  },
  get$_handleData: function() {
    return new B.BoundClosure$1(this, P._ForwardingStreamSubscription.prototype._handleData$1, null, "_handleData$1");
  },
  _handleError$2: function(error, stackTrace) {
    this._addError$2(error, stackTrace);
  },
  get$_handleError: function() {
    return new B.BoundClosure$2(this, P._ForwardingStreamSubscription.prototype._handleError$2, null, "_handleError$2");
  },
  _handleDone$0: function() {
    this._close$0();
  },
  get$_handleDone: function() {
    return new B.BoundClosure$0(this, P._ForwardingStreamSubscription.prototype._handleDone$0, null, "_handleDone$0");
  },
  _ForwardingStreamSubscription$2: function(_stream, cancelOnError, $S, $T) {
    var t1, t2;
    t1 = this.get$_handleData();
    t2 = this.get$_handleError();
    this._async$_subscription = this._stream._async$_source.listen$3$onDone$onError(t1, this.get$_handleDone(), t2);
  },
  $as_BufferingStreamSubscription: function($S, $T) {
    return [$T];
  },
  static: {
_ForwardingStreamSubscription$: function(_stream, cancelOnError, $S, $T) {
  var t1, t2;
  t1 = $.Zone__current;
  t2 = cancelOnError ? 1 : 0;
  t2 = new P._ForwardingStreamSubscription(_stream, null, null, null, null, t1, t2, null, null);
  H.setRuntimeTypeInfo(t2, [$S, $T]);
  t2._ForwardingStreamSubscription$2(_stream, cancelOnError, $S, $T);
  return t2;
}}

},

_MapStream: {"": "_ForwardingStream;_transform,_async$_source",
  _transform$1: function(arg0) {
    return this._transform.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var outputEvent, e, s, exception, t1;
    outputEvent = null;
    try {
      outputEvent = this._transform$1(inputEvent);
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      sink._addError$2(P._asyncError(e, s), s);
      return;
    }

    sink._async$_add$1(outputEvent);
  },
  $as_ForwardingStream: null
},

_BaseZone: {"": "Object;",
  runGuarded$1: function(f) {
    var e, s, t1, exception;
    try {
      t1 = this.run$1(f);
      return t1;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      return this.handleUncaughtError$2(e, s);
    }

  },
  runUnaryGuarded$2: function(f, arg) {
    var e, s, t1, exception;
    try {
      t1 = this.runUnary$2(f, arg);
      return t1;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      return this.handleUncaughtError$2(e, s);
    }

  },
  runBinaryGuarded$3: function(f, arg1, arg2) {
    var e, s, t1, exception;
    try {
      t1 = this.runBinary$3(f, arg1, arg2);
      return t1;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      return this.handleUncaughtError$2(e, s);
    }

  },
  bindCallback$2$runGuarded: function(f, runGuarded) {
    var registered = this.registerCallback$1(f);
    if (runGuarded)
      return new P._BaseZone_bindCallback_closure(this, registered);
    else
      return new P._BaseZone_bindCallback_closure0(this, registered);
  },
  bindUnaryCallback$2$runGuarded: function(f, runGuarded) {
    var registered = this.registerUnaryCallback$1(f);
    if (runGuarded)
      return new P._BaseZone_bindUnaryCallback_closure(this, registered);
    else
      return new P._BaseZone_bindUnaryCallback_closure0(this, registered);
  }
},

_BaseZone_bindCallback_closure: {"": "Closure;this_0,registered_1",
  call$0: function() {
    return this.this_0.runGuarded$1(this.registered_1);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_BaseZone_bindCallback_closure0: {"": "Closure;this_2,registered_3",
  call$0: function() {
    return this.this_2.run$1(this.registered_3);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_BaseZone_bindUnaryCallback_closure: {"": "Closure;this_0,registered_1",
  call$1: function(arg) {
    return this.this_0.runUnaryGuarded$2(this.registered_1, arg);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_BaseZone_bindUnaryCallback_closure0: {"": "Closure;this_2,registered_3",
  call$1: function(arg) {
    return this.this_2.runUnary$2(this.registered_3, arg);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_rootHandleUncaughtError_closure: {"": "Closure;error_0,stackTrace_1",
  call$0: function() {
    P._scheduleAsyncCallback(new P._rootHandleUncaughtError__closure(this.error_0, this.stackTrace_1));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_rootHandleUncaughtError__closure: {"": "Closure;error_2,stackTrace_3",
  call$0: function() {
    var t1, trace;
    t1 = this.error_2;
    P.print("Uncaught Error: " + H.S(t1));
    trace = this.stackTrace_3;
    if (trace == null)
      trace = P.getAttachedStackTrace(t1);
    P._attachStackTrace(t1, null);
    if (trace != null)
      P.print("Stack Trace: \n" + H.S(trace) + "\n");
    throw H.wrapException(t1);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_RootZone: {"": "_BaseZone;",
  get$parent: function(_) {
    return;
  },
  $index: function(_, key) {
    return;
  },
  handleUncaughtError$2: function(error, stackTrace) {
    return P._rootHandleUncaughtError(this, null, this, error, stackTrace);
  },
  run$1: function(f) {
    return P._rootRun(this, null, this, f);
  },
  runUnary$2: function(f, arg) {
    return P._rootRunUnary(this, null, this, f, arg);
  },
  runBinary$3: function(f, arg1, arg2) {
    return P._rootRunBinary(this, null, this, f, arg1, arg2);
  },
  registerCallback$1: function(f) {
    return f;
  },
  registerUnaryCallback$1: function(f) {
    return f;
  }
}}],
["dart.collection", "dart:collection", , P, {
_defaultEquals: function(a, b) {
  return J.$eq(a, b);
},

_defaultHashCode: function(a) {
  return J.get$hashCode$(a);
},

HashMap_HashMap: function(equals, hashCode, isValidKey, $K, $V) {
  var t1 = new P._HashMap(0, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$K, $V]);
  return t1;
},

_iterableToString: function(iterable) {
  var parts, t1;
  t1 = $.get$_toStringVisiting();
  if (t1.contains$1(t1, iterable))
    return "(...)";
  t1 = $.get$_toStringVisiting();
  t1.add$1(t1, iterable);
  parts = [];
  try {
    P._iterablePartsToStrings(iterable, parts);
  } finally {
    t1 = $.get$_toStringVisiting();
    t1.remove$1(t1, iterable);
  }
  t1 = P.StringBuffer$("(");
  t1.writeAll$2(parts, ", ");
  t1.write$1(")");
  return t1._contents;
},

_iterablePartsToStrings: function(iterable, parts) {
  var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
  it = iterable.get$iterator(iterable);
  $length = 0;
  count = 0;
  while (true) {
    if (!($length < 80 || count < 3))
      break;
    if (!it.moveNext$0())
      return;
    next = H.S(it.get$current());
    parts.push(next);
    $length += next.length + 2;
    ++count;
  }
  if (!it.moveNext$0()) {
    if (count <= 5)
      return;
    if (0 >= parts.length)
      throw H.ioore(parts, 0);
    ultimateString = parts.pop();
    if (0 >= parts.length)
      throw H.ioore(parts, 0);
    penultimateString = parts.pop();
  } else {
    penultimate = it.get$current();
    ++count;
    if (!it.moveNext$0()) {
      if (count <= 4) {
        parts.push(H.S(penultimate));
        return;
      }
      ultimateString = H.S(penultimate);
      if (0 >= parts.length)
        throw H.ioore(parts, 0);
      penultimateString = parts.pop();
      $length += ultimateString.length + 2;
    } else {
      ultimate = it.get$current();
      ++count;
      for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
        ultimate0 = it.get$current();
        ++count;
        if (count > 100) {
          while (true) {
            if (!($length > 75 && count > 3))
              break;
            if (0 >= parts.length)
              throw H.ioore(parts, 0);
            $length -= parts.pop().length + 2;
            --count;
          }
          parts.push("...");
          return;
        }
      }
      penultimateString = H.S(penultimate);
      ultimateString = H.S(ultimate);
      $length += ultimateString.length + penultimateString.length + 4;
    }
  }
  if (count > parts.length + 2) {
    $length += 5;
    elision = "...";
  } else
    elision = null;
  while (true) {
    if (!($length > 80 && parts.length > 3))
      break;
    if (0 >= parts.length)
      throw H.ioore(parts, 0);
    $length -= parts.pop().length + 2;
    if (elision == null) {
      $length += 5;
      elision = "...";
    }
  }
  if (elision != null)
    parts.push(elision);
  parts.push(penultimateString);
  parts.push(ultimateString);
},

LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
  var t1 = new P._LinkedHashMap(0, null, null, null, null, null, 0);
  H.setRuntimeTypeInfo(t1, [$K, $V]);
  return t1;
},

Maps_mapToString: function(m) {
  var t1, result, i, t2;
  t1 = {};
  for (i = 0; i < $.get$Maps__toStringList().length; ++i) {
    t2 = $.get$Maps__toStringList();
    if (i >= t2.length)
      throw H.ioore(t2, i);
    if (t2[i] === m)
      return "{...}";
  }
  result = P.StringBuffer$("");
  try {
    $.get$Maps__toStringList().push(m);
    result.write$1("{");
    t1.first_0 = true;
    J.forEach$1$ax(m, new P.Maps_mapToString_closure(t1, result));
    result.write$1("}");
  } finally {
    t1 = $.get$Maps__toStringList();
    if (0 >= t1.length)
      throw H.ioore(t1, 0);
    t1.pop();
  }
  return result.get$_contents();
},

_HashMap: {"": "Object;_collection$_length,_strings,_nums,_rest,_keys",
  get$length: function(_) {
    return this._collection$_length;
  },
  get$isEmpty: function(_) {
    return this._collection$_length === 0;
  },
  get$isNotEmpty: function(_) {
    return this._collection$_length !== 0;
  },
  get$keys: function() {
    var t1 = new P.HashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_HashMap", 0)]);
    return t1;
  },
  get$values: function(_) {
    var t1 = new P.HashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_HashMap", 0)]);
    return H.MappedIterable_MappedIterable(t1, new P._HashMap_values_closure(this), H.getRuntimeTypeArgument(t1, "IterableBase", 0), null);
  },
  containsKey$1: function(key) {
    var strings, nums, rest;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      return strings == null ? false : strings[key] != null;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      return nums == null ? false : nums[key] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
    }
  },
  addAll$1: function(_, other) {
    H.IterableMixinWorkaround_forEach(other, new P._HashMap_addAll_closure(this));
  },
  $index: function(_, key) {
    var strings, t1, entry, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        t1 = null;
      else {
        entry = strings[key];
        t1 = entry === strings ? null : entry;
      }
      return t1;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        t1 = null;
      else {
        entry = nums[key];
        t1 = entry === nums ? null : entry;
      }
      return t1;
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(key)];
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    }
  },
  $indexSet: function(_, key, value) {
    var strings, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        strings = P._HashMap__newHashTable();
        this._strings = strings;
      }
      this._addHashTableEntry$3(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        nums = P._HashMap__newHashTable();
        this._nums = nums;
      }
      this._addHashTableEntry$3(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        rest = P._HashMap__newHashTable();
        this._rest = rest;
      }
      hash = this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        P._HashMap__setTableEntry(rest, hash, [key, value]);
        this._collection$_length = this._collection$_length + 1;
        this._keys = null;
      } else {
        index = this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          this._collection$_length = this._collection$_length + 1;
          this._keys = null;
        }
      }
    }
  },
  remove$1: function(_, key) {
    var rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, key);
    else if (typeof key === "number" && (key & 0x3ffffff) === key)
      return this._removeHashTableEntry$2(this._nums, key);
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(key)];
      index = this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return;
      this._collection$_length = this._collection$_length - 1;
      this._keys = null;
      return bucket.splice(index, 2)[1];
    }
  },
  forEach$1: function(_, action) {
    var keys, $length, i, key;
    keys = this._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      key = keys[i];
      action.call$2(key, this.$index(this, key));
      if (keys !== this._keys)
        throw H.wrapException(P.ConcurrentModificationError$(this));
    }
  },
  _computeKeys$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._keys;
    if (t1 != null)
      return t1;
    result = P.List_List(this._collection$_length, null);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; i0 += 2) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._keys = result;
    return result;
  },
  _addHashTableEntry$3: function(table, key, value) {
    if (table[key] == null) {
      this._collection$_length = this._collection$_length + 1;
      this._keys = null;
    }
    P._HashMap__setTableEntry(table, key, value);
  },
  _removeHashTableEntry$2: function(table, key) {
    var value;
    if (table != null && table[key] != null) {
      value = P._HashMap__getTableEntry(table, key);
      delete table[key];
      this._collection$_length = this._collection$_length - 1;
      this._keys = null;
      return value;
    } else
      return;
  },
  _computeHashCode$1: function(key) {
    return J.get$hashCode$(key) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, key) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; i += 2)
      if (J.$eq(bucket[i], key))
        return i;
    return -1;
  },
  $isMap: true,
  static: {
_HashMap__getTableEntry: function(table, key) {
  var entry = table[key];
  return entry === table ? null : entry;
},

_HashMap__setTableEntry: function(table, key, value) {
  if (value == null)
    table[key] = table;
  else
    table[key] = value;
},

_HashMap__newHashTable: function() {
  var table = Object.create(null);
  P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
  delete table["<non-identifier-key>"];
  return table;
}}

},

_HashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    var t1 = this.this_0;
    return t1.$index(t1, each);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_HashMap_addAll_closure: {"": "Closure;this_0",
  call$2: function(key, value) {
    var t1 = this.this_0;
    t1.$indexSet(t1, key, value);
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

HashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._collection$_length;
  },
  get$isEmpty: function(_) {
    return this._map._collection$_length === 0;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return new P.HashMapKeyIterator(t1, t1._computeKeys$0(), 0, null);
  },
  forEach$1: function(_, f) {
    var t1, keys, $length, i;
    t1 = this._map;
    keys = t1._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      f.call$1(keys[i]);
      if (keys !== t1._keys)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
    }
  },
  $asIterableBase: null,
  $asIterable: null,
  $isEfficientLength: true
},

HashMapKeyIterator: {"": "Object;_map,_keys,_offset,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var keys, offset, t1;
    keys = this._keys;
    offset = this._offset;
    t1 = this._map;
    if (keys !== t1._keys)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else if (offset >= keys.length) {
      this._collection$_current = null;
      return false;
    } else {
      this._collection$_current = keys[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

_LinkedHashMap: {"": "Object;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
  get$length: function(_) {
    return this._collection$_length;
  },
  get$isEmpty: function(_) {
    return this._collection$_length === 0;
  },
  get$isNotEmpty: function(_) {
    return this._collection$_length !== 0;
  },
  get$keys: function() {
    var t1 = new P.LinkedHashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_LinkedHashMap", 0)]);
    return t1;
  },
  get$values: function(_) {
    var t1 = new P.LinkedHashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_LinkedHashMap", 0)]);
    return H.MappedIterable_MappedIterable(t1, new P._LinkedHashMap_values_closure(this), H.getRuntimeTypeArgument(t1, "IterableBase", 0), null);
  },
  containsKey$1: function(key) {
    var strings, nums, rest;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return false;
      return strings[key] != null;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return false;
      return nums[key] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
    }
  },
  addAll$1: function(_, other) {
    J.forEach$1$ax(other, new P._LinkedHashMap_addAll_closure(this));
  },
  $index: function(_, key) {
    var strings, cell, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return;
      cell = strings[key];
      return cell == null ? null : cell.get$_value();
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return;
      cell = nums[key];
      return cell == null ? null : cell.get$_value();
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(key)];
      index = this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return;
      return bucket[index].get$_value();
    }
  },
  $indexSet: function(_, key, value) {
    var strings, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        strings = P._LinkedHashMap__newHashTable();
        this._strings = strings;
      }
      this._addHashTableEntry$3(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        nums = P._LinkedHashMap__newHashTable();
        this._nums = nums;
      }
      this._addHashTableEntry$3(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        rest = P._LinkedHashMap__newHashTable();
        this._rest = rest;
      }
      hash = this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [this._newLinkedCell$2(key, value)];
      else {
        index = this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].set$_value(value);
        else
          bucket.push(this._newLinkedCell$2(key, value));
      }
    }
  },
  putIfAbsent$2: function(key, ifAbsent) {
    var value;
    if (this.containsKey$1(key))
      return this.$index(this, key);
    value = ifAbsent.call$0();
    this.$indexSet(this, key, value);
    return value;
  },
  remove$1: function(_, key) {
    var rest, bucket, index, cell;
    if (typeof key === "string" && key !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, key);
    else if (typeof key === "number" && (key & 0x3ffffff) === key)
      return this._removeHashTableEntry$2(this._nums, key);
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(key)];
      index = this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return;
      cell = bucket.splice(index, 1)[0];
      this._unlinkCell$1(cell);
      return cell.get$_value();
    }
  },
  clear$0: function(_) {
    if (this._collection$_length > 0) {
      this._last = null;
      this._first = null;
      this._rest = null;
      this._nums = null;
      this._strings = null;
      this._collection$_length = 0;
      this._modifications = this._modifications + 1 & 67108863;
    }
  },
  forEach$1: function(_, action) {
    var cell, modifications;
    cell = this._first;
    modifications = this._modifications;
    for (; cell != null;) {
      action.call$2(cell.get$_key(), cell.get$_value());
      if (modifications !== this._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(this));
      cell = cell.get$_next();
    }
  },
  _addHashTableEntry$3: function(table, key, value) {
    var cell = table[key];
    if (cell == null)
      table[key] = this._newLinkedCell$2(key, value);
    else
      cell.set$_value(value);
  },
  _removeHashTableEntry$2: function(table, key) {
    var cell;
    if (table == null)
      return;
    cell = table[key];
    if (cell == null)
      return;
    this._unlinkCell$1(cell);
    delete table[key];
    return cell.get$_value();
  },
  _newLinkedCell$2: function(key, value) {
    var cell, last;
    cell = new P.LinkedHashMapCell(key, value, null, null);
    if (this._first == null) {
      this._last = cell;
      this._first = cell;
    } else {
      last = this._last;
      cell._previous = last;
      last.set$_next(cell);
      this._last = cell;
    }
    this._collection$_length = this._collection$_length + 1;
    this._modifications = this._modifications + 1 & 67108863;
    return cell;
  },
  _unlinkCell$1: function(cell) {
    var previous, next;
    previous = cell.get$_previous();
    next = cell.get$_next();
    if (previous == null)
      this._first = next;
    else
      previous.set$_next(next);
    if (next == null)
      this._last = previous;
    else
      next.set$_previous(previous);
    this._collection$_length = this._collection$_length - 1;
    this._modifications = this._modifications + 1 & 67108863;
  },
  _computeHashCode$1: function(key) {
    return J.get$hashCode$(key) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, key) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i)
      if (J.$eq(bucket[i].get$_key(), key))
        return i;
    return -1;
  },
  toString$0: function(_) {
    return P.Maps_mapToString(this);
  },
  $isLinkedHashMap: true,
  $isMap: true,
  static: {
_LinkedHashMap__newHashTable: function() {
  var table = Object.create(null);
  table["<non-identifier-key>"] = table;
  delete table["<non-identifier-key>"];
  return table;
}}

},

_LinkedHashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    var t1 = this.this_0;
    return t1.$index(t1, each);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_LinkedHashMap_addAll_closure: {"": "Closure;this_0",
  call$2: function(key, value) {
    var t1 = this.this_0;
    t1.$indexSet(t1, key, value);
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

LinkedHashMapCell: {"": "Object;_key<,_value@,_next@,_previous@"},

LinkedHashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._collection$_length;
  },
  get$isEmpty: function(_) {
    return this._map._collection$_length === 0;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    t1 = new P.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
    t1._cell = t1._map._first;
    return t1;
  },
  forEach$1: function(_, f) {
    var t1, cell, modifications;
    t1 = this._map;
    cell = t1._first;
    modifications = t1._modifications;
    for (; cell != null;) {
      f.call$1(cell.get$_key());
      if (modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      cell = cell.get$_next();
    }
  },
  $asIterableBase: null,
  $asIterable: null,
  $isEfficientLength: true
},

LinkedHashMapKeyIterator: {"": "Object;_map,_modifications,_cell,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var t1 = this._map;
    if (this._modifications !== t1._modifications)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else {
      t1 = this._cell;
      if (t1 == null) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = t1.get$_key();
        this._cell = this._cell.get$_next();
        return true;
      }
    }
  }
},

_HashSet: {"": "_HashSetBase;",
  get$iterator: function(_) {
    return new P.HashSetIterator(this, this._computeElements$0(), 0, null);
  },
  get$length: function(_) {
    return this._collection$_length;
  },
  get$isEmpty: function(_) {
    return this._collection$_length === 0;
  },
  get$isNotEmpty: function(_) {
    return this._collection$_length !== 0;
  },
  contains$1: function(_, object) {
    var strings, nums, rest;
    if (typeof object === "string" && object !== "__proto__") {
      strings = this._strings;
      return strings == null ? false : strings[object] != null;
    } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
      nums = this._nums;
      return nums == null ? false : nums[object] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    }
  },
  lookup$1: function(object) {
    var t1, rest, bucket, index;
    if (!(typeof object === "string" && object !== "__proto__"))
      t1 = typeof object === "number" && (object & 0x3ffffff) === object;
    else
      t1 = true;
    if (t1)
      return this.contains$1(this, object) ? object : null;
    rest = this._rest;
    if (rest == null)
      return;
    bucket = rest[this._computeHashCode$1(object)];
    index = this._findBucketIndex$2(bucket, object);
    if (index < 0)
      return;
    return J.$index$asx(bucket, index);
  },
  add$1: function(_, element) {
    var strings, table, nums, rest, hash, bucket;
    if (typeof element === "string" && element !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      return this._addHashTableEntry$2(strings, element);
    } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      return this._addHashTableEntry$2(nums, element);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      this._collection$_length = this._collection$_length + 1;
      this._elements = null;
      return true;
    }
  },
  addAll$1: function(_, objects) {
    var t1;
    for (t1 = new H.ListIterator(objects, objects.length, 0, null); t1.moveNext$0();)
      this.add$1(this, t1._dev$_current);
  },
  remove$1: function(_, object) {
    var rest, bucket, index;
    if (typeof object === "string" && object !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, object);
    else if (typeof object === "number" && (object & 0x3ffffff) === object)
      return this._removeHashTableEntry$2(this._nums, object);
    else {
      rest = this._rest;
      if (rest == null)
        return false;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      this._collection$_length = this._collection$_length - 1;
      this._elements = null;
      bucket.splice(index, 1);
      return true;
    }
  },
  _computeElements$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._elements;
    if (t1 != null)
      return t1;
    result = P.List_List(this._collection$_length, null);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; ++i0) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._elements = result;
    return result;
  },
  _addHashTableEntry$2: function(table, element) {
    if (table[element] != null)
      return false;
    table[element] = 0;
    this._collection$_length = this._collection$_length + 1;
    this._elements = null;
    return true;
  },
  _removeHashTableEntry$2: function(table, element) {
    if (table != null && table[element] != null) {
      delete table[element];
      this._collection$_length = this._collection$_length - 1;
      this._elements = null;
      return true;
    } else
      return false;
  },
  _computeHashCode$1: function(element) {
    return J.get$hashCode$(element) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, element) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i)
      if (J.$eq(bucket[i], element))
        return i;
    return -1;
  },
  $as_HashSetBase: null,
  $asIterable: null,
  $isEfficientLength: true,
  $isIterable: true
},

_IdentityHashSet: {"": "_HashSet;_collection$_length,_strings,_nums,_rest,_elements",
  _computeHashCode$1: function(key) {
    return H.objectHashCode(key) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, element) {
    var $length, i, t1;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i) {
      t1 = bucket[i];
      if (t1 == null ? element == null : t1 === element)
        return i;
    }
    return -1;
  },
  $as_HashSet: null,
  $asIterable: null
},

HashSetIterator: {"": "Object;_set,_elements,_offset,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var elements, offset, t1;
    elements = this._elements;
    offset = this._offset;
    t1 = this._set;
    if (elements !== t1._elements)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else if (offset >= elements.length) {
      this._collection$_current = null;
      return false;
    } else {
      this._collection$_current = elements[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

_LinkedHashSet: {"": "_HashSetBase;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
  get$iterator: function(_) {
    var t1 = new P.LinkedHashSetIterator(this, this._modifications, null, null);
    t1._cell = t1._set._first;
    return t1;
  },
  get$length: function(_) {
    return this._collection$_length;
  },
  get$isEmpty: function(_) {
    return this._collection$_length === 0;
  },
  get$isNotEmpty: function(_) {
    return this._collection$_length !== 0;
  },
  contains$1: function(_, object) {
    var strings, nums, rest;
    if (typeof object === "string" && object !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return false;
      return strings[object] != null;
    } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
      nums = this._nums;
      if (nums == null)
        return false;
      return nums[object] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    }
  },
  lookup$1: function(object) {
    var t1, rest, bucket, index;
    if (!(typeof object === "string" && object !== "__proto__"))
      t1 = typeof object === "number" && (object & 0x3ffffff) === object;
    else
      t1 = true;
    if (t1)
      return this.contains$1(this, object) ? object : null;
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return;
      return J.$index$asx(bucket, index).get$_collection$_element();
    }
  },
  forEach$1: function(_, action) {
    var cell, modifications;
    cell = this._first;
    modifications = this._modifications;
    for (; cell != null;) {
      action.call$1(cell.get$_collection$_element());
      if (modifications !== this._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(this));
      cell = cell.get$_next();
    }
  },
  get$last: function(_) {
    var t1 = this._last;
    if (t1 == null)
      throw H.wrapException(new P.StateError("No elements"));
    return t1.get$_collection$_element();
  },
  add$1: function(_, element) {
    var strings, table, nums, rest, hash, bucket;
    if (typeof element === "string" && element !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      return this._addHashTableEntry$2(strings, element);
    } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      return this._addHashTableEntry$2(nums, element);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [this._newLinkedCell$1(element)];
      else {
        if (this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(this._newLinkedCell$1(element));
      }
      return true;
    }
  },
  addAll$1: function(_, objects) {
    var t1;
    for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
      this.add$1(this, t1.get$current());
  },
  remove$1: function(_, object) {
    var rest, bucket, index;
    if (typeof object === "string" && object !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, object);
    else if (typeof object === "number" && (object & 0x3ffffff) === object)
      return this._removeHashTableEntry$2(this._nums, object);
    else {
      rest = this._rest;
      if (rest == null)
        return false;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      this._unlinkCell$1(bucket.splice(index, 1)[0]);
      return true;
    }
  },
  _addHashTableEntry$2: function(table, element) {
    if (table[element] != null)
      return false;
    table[element] = this._newLinkedCell$1(element);
    return true;
  },
  _removeHashTableEntry$2: function(table, element) {
    var cell;
    if (table == null)
      return false;
    cell = table[element];
    if (cell == null)
      return false;
    this._unlinkCell$1(cell);
    delete table[element];
    return true;
  },
  _newLinkedCell$1: function(element) {
    var cell, last;
    cell = new P.LinkedHashSetCell(element, null, null);
    if (this._first == null) {
      this._last = cell;
      this._first = cell;
    } else {
      last = this._last;
      cell._previous = last;
      last.set$_next(cell);
      this._last = cell;
    }
    this._collection$_length = this._collection$_length + 1;
    this._modifications = this._modifications + 1 & 67108863;
    return cell;
  },
  _unlinkCell$1: function(cell) {
    var previous, next;
    previous = cell.get$_previous();
    next = cell.get$_next();
    if (previous == null)
      this._first = next;
    else
      previous.set$_next(next);
    if (next == null)
      this._last = previous;
    else
      next.set$_previous(previous);
    this._collection$_length = this._collection$_length - 1;
    this._modifications = this._modifications + 1 & 67108863;
  },
  _computeHashCode$1: function(element) {
    return J.get$hashCode$(element) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, element) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i)
      if (J.$eq(bucket[i].get$_collection$_element(), element))
        return i;
    return -1;
  },
  $as_HashSetBase: null,
  $asIterable: null,
  $isEfficientLength: true,
  $isIterable: true
},

LinkedHashSetCell: {"": "Object;_collection$_element<,_next@,_previous@"},

LinkedHashSetIterator: {"": "Object;_set,_modifications,_cell,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var t1 = this._set;
    if (this._modifications !== t1._modifications)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else {
      t1 = this._cell;
      if (t1 == null) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = t1.get$_collection$_element();
        this._cell = this._cell.get$_next();
        return true;
      }
    }
  }
},

_HashSetBase: {"": "IterableBase;",
  toList$1$growable: function(_, growable) {
    var result, t1, i, element, i0;
    if (growable) {
      result = P.List_List(null, H.getRuntimeTypeArgument(this, "_HashSetBase", 0));
      H.setRuntimeTypeInfo(result, [H.getRuntimeTypeArgument(this, "_HashSetBase", 0)]);
      C.JSArray_methods.set$length(result, this.get$length(this));
    } else {
      result = P.List_List(this.get$length(this), H.getRuntimeTypeArgument(this, "_HashSetBase", 0));
      H.setRuntimeTypeInfo(result, [H.getRuntimeTypeArgument(this, "_HashSetBase", 0)]);
    }
    for (t1 = this.get$iterator(this), i = 0; t1.moveNext$0(); i = i0) {
      element = t1.get$current();
      i0 = i + 1;
      if (i >= result.length)
        throw H.ioore(result, i);
      result[i] = element;
    }
    return result;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  toString$0: function(_) {
    return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
  },
  $asIterableBase: null,
  $asIterable: null,
  $isEfficientLength: true,
  $isIterable: true
},

HashSet: {"": "Object;", $isEfficientLength: true, $isIterable: true, $asIterable: null, static: {
HashSet_HashSet$identity: function($E) {
  var t1 = new P._IdentityHashSet(0, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$E]);
  return t1;
}}
},

IterableBase: {"": "Object;",
  map$1: function(_, f) {
    return H.MappedIterable_MappedIterable(this, f, H.getRuntimeTypeArgument(this, "IterableBase", 0), null);
  },
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      f.call$1(t1.get$current());
  },
  join$1: function(_, separator) {
    var iterator, buffer, t1;
    iterator = this.get$iterator(this);
    if (!iterator.moveNext$0())
      return "";
    buffer = P.StringBuffer$("");
    if (separator === "")
      do {
        t1 = H.S(iterator.get$current());
        buffer._contents = buffer._contents + t1;
      } while (iterator.moveNext$0());
    else {
      buffer.write$1(H.S(iterator.get$current()));
      for (; iterator.moveNext$0();) {
        buffer._contents = buffer._contents + separator;
        t1 = H.S(iterator.get$current());
        buffer._contents = buffer._contents + t1;
      }
    }
    return buffer._contents;
  },
  toList$1$growable: function(_, growable) {
    return P.List_List$from(this, growable, H.getRuntimeTypeArgument(this, "IterableBase", 0));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$length: function(_) {
    var it, count;
    it = this.get$iterator(this);
    for (count = 0; it.moveNext$0();)
      ++count;
    return count;
  },
  get$isEmpty: function(_) {
    return !this.get$iterator(this).moveNext$0();
  },
  get$isNotEmpty: function(_) {
    return !this.get$isEmpty(this);
  },
  get$last: function(_) {
    var it, result;
    it = this.get$iterator(this);
    if (!it.moveNext$0())
      throw H.wrapException(P.StateError$("No elements"));
    do
      result = it.get$current();
    while (it.moveNext$0());
    return result;
  },
  get$single: function(_) {
    var it, result;
    it = this.get$iterator(this);
    if (!it.moveNext$0())
      throw H.wrapException(new P.StateError("No elements"));
    result = it.get$current();
    if (it.moveNext$0())
      throw H.wrapException(new P.StateError("More than one element"));
    return result;
  },
  firstWhere$2$orElse: function(_, test, orElse) {
    var t1, element;
    for (t1 = this.get$iterator(this); t1.moveNext$0();) {
      element = t1.get$current();
      if (test.call$1(element) === true)
        return element;
    }
    throw H.wrapException(new P.StateError("No matching element"));
  },
  firstWhere$1: function($receiver, test) {
    return this.firstWhere$2$orElse($receiver, test, null);
  },
  elementAt$1: function(_, index) {
    var t1, remaining, element;
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0();) {
      element = t1.get$current();
      if (remaining === 0)
        return element;
      --remaining;
    }
    throw H.wrapException(P.RangeError$value(index));
  },
  toString$0: function(_) {
    return P._iterableToString(this);
  },
  $isIterable: true,
  $asIterable: null
},

LinkedHashSet: {"": "Object;", $isEfficientLength: true, $isIterable: true, $asIterable: null, static: {
LinkedHashSet_LinkedHashSet: function(equals, hashCode, isValidKey, $E) {
  var t1 = new P._LinkedHashSet(0, null, null, null, null, null, 0);
  H.setRuntimeTypeInfo(t1, [$E]);
  return t1;
}}
},

ListBase: {"": "Object+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

ListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return new H.ListIterator(receiver, this.get$length(receiver), 0, null);
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  forEach$1: function(receiver, action) {
    var $length, i;
    $length = this.get$length(receiver);
    if (typeof $length !== "number")
      throw H.iae($length);
    i = 0;
    for (; i < $length; ++i) {
      action.call$1(this.$index(receiver, i));
      if ($length !== this.get$length(receiver))
        throw H.wrapException(P.ConcurrentModificationError$(receiver));
    }
  },
  get$isEmpty: function(receiver) {
    return this.get$length(receiver) === 0;
  },
  get$isNotEmpty: function(receiver) {
    return !this.get$isEmpty(receiver);
  },
  get$first: function(receiver) {
    if (this.get$length(receiver) === 0)
      throw H.wrapException(P.StateError$("No elements"));
    return this.$index(receiver, 0);
  },
  get$last: function(receiver) {
    var t1;
    if (this.get$length(receiver) === 0)
      throw H.wrapException(P.StateError$("No elements"));
    t1 = this.get$length(receiver);
    if (typeof t1 !== "number")
      throw t1.$sub();
    return this.$index(receiver, t1 - 1);
  },
  firstWhere$2$orElse: function(receiver, test, orElse) {
    var $length, i, element;
    $length = this.get$length(receiver);
    if (typeof $length !== "number")
      throw H.iae($length);
    i = 0;
    for (; i < $length; ++i) {
      element = this.$index(receiver, i);
      if (test.call$1(element) === true)
        return element;
      if ($length !== this.get$length(receiver))
        throw H.wrapException(P.ConcurrentModificationError$(receiver));
    }
    throw H.wrapException(new P.StateError("No matching element"));
  },
  firstWhere$1: function($receiver, test) {
    return this.firstWhere$2$orElse($receiver, test, null);
  },
  where$1: function(receiver, test) {
    var t1 = new H.WhereIterable(receiver, test);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
    return t1;
  },
  map$1: function(receiver, f) {
    var t1 = new H.MappedListIterable(receiver, f);
    H.setRuntimeTypeInfo(t1, [null, null]);
    return t1;
  },
  toList$1$growable: function(receiver, growable) {
    var result, i, t1;
    if (growable) {
      result = P.List_List(null, H.getRuntimeTypeArgument(receiver, "ListMixin", 0));
      H.setRuntimeTypeInfo(result, [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
      C.JSArray_methods.set$length(result, this.get$length(receiver));
    } else {
      result = P.List_List(this.get$length(receiver), H.getRuntimeTypeArgument(receiver, "ListMixin", 0));
      H.setRuntimeTypeInfo(result, [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
    }
    i = 0;
    while (true) {
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        throw H.iae(t1);
      if (!(i < t1))
        break;
      t1 = this.$index(receiver, i);
      if (i >= result.length)
        throw H.ioore(result, i);
      result[i] = t1;
      ++i;
    }
    return result;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, element) {
    var t1 = this.get$length(receiver);
    if (typeof t1 !== "number")
      throw t1.$add();
    this.set$length(receiver, t1 + 1);
    this.$indexSet(receiver, t1, element);
  },
  addAll$1: function(receiver, iterable) {
    var t1, element, t2;
    for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0();) {
      element = t1.get$current();
      t2 = this.get$length(receiver);
      if (typeof t2 !== "number")
        throw t2.$add();
      this.set$length(receiver, t2 + 1);
      this.$indexSet(receiver, t2, element);
    }
  },
  remove$1: function(receiver, element) {
    var i, t1;
    i = 0;
    while (true) {
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        throw H.iae(t1);
      if (!(i < t1))
        break;
      if (J.$eq(this.$index(receiver, i), element)) {
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          throw t1.$sub();
        this.setRange$4(receiver, i, t1 - 1, receiver, i + 1);
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          throw t1.$sub();
        this.set$length(receiver, t1 - 1);
        return true;
      }
      ++i;
    }
    return false;
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  sort$1: function(receiver, compare) {
    var t1 = this.get$length(receiver);
    if (typeof t1 !== "number")
      throw t1.$sub();
    H.Sort__doSort(receiver, 0, t1 - 1, compare);
  },
  setRange$4: function(receiver, start, end, iterable, skipCount) {
    var t1, $length, t2, i;
    if (start >= 0) {
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        throw H.iae(t1);
      t1 = start > t1;
    } else
      t1 = true;
    if (t1)
      H.throwExpression(P.RangeError$range(start, 0, this.get$length(receiver)));
    if (end >= start) {
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        throw H.iae(t1);
      t1 = end > t1;
    } else
      t1 = true;
    if (t1)
      H.throwExpression(P.RangeError$range(end, start, this.get$length(receiver)));
    $length = end - start;
    if ($length === 0)
      return;
    if (skipCount < 0)
      throw H.wrapException(new P.ArgumentError(skipCount));
    t1 = J.getInterceptor$asx(iterable);
    t2 = t1.get$length(iterable);
    if (typeof t2 !== "number")
      throw H.iae(t2);
    if (skipCount + $length > t2)
      throw H.wrapException(new P.StateError("Not enough elements"));
    if (skipCount < start)
      for (i = $length - 1; i >= 0; --i)
        this.$indexSet(receiver, start + i, t1.$index(iterable, skipCount + i));
    else
      for (i = 0; i < $length; ++i)
        this.$indexSet(receiver, start + i, t1.$index(iterable, skipCount + i));
  },
  indexOf$2: function(receiver, element, startIndex) {
    var t1, i;
    t1 = this.get$length(receiver);
    if (typeof t1 !== "number")
      throw H.iae(t1);
    if (startIndex >= t1)
      return -1;
    if (startIndex < 0)
      startIndex = 0;
    i = startIndex;
    while (true) {
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        throw H.iae(t1);
      if (!(i < t1))
        break;
      if (J.$eq(this.$index(receiver, i), element))
        return i;
      ++i;
    }
    return -1;
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  get$reversed: function(receiver) {
    var t1 = new H.ReversedListIterable(receiver);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  toString$0: function(receiver) {
    var result, t1;
    t1 = $.get$_toStringVisiting();
    if (t1.contains$1(t1, receiver))
      return "[...]";
    result = P.StringBuffer$("");
    try {
      t1 = $.get$_toStringVisiting();
      t1.add$1(t1, receiver);
      result.write$1("[");
      result.writeAll$2(receiver, ", ");
      result.write$1("]");
    } finally {
      t1 = $.get$_toStringVisiting();
      t1.remove$1(t1, receiver);
    }
    return result.get$_contents();
  },
  $isList: true,
  $asList: null,
  $isEfficientLength: true,
  $isIterable: true,
  $asIterable: null
},

Maps_mapToString_closure: {"": "Closure;box_0,result_1",
  call$2: function(k, v) {
    var t1 = this.box_0;
    if (!t1.first_0)
      this.result_1.write$1(", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t1.write$1(k);
    t1.write$1(": ");
    t1.write$1(v);
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

ListQueue: {"": "IterableBase;_table,_head,_tail,_modificationCount",
  get$iterator: function(_) {
    return P._ListQueueIterator$(this);
  },
  forEach$1: function(_, action) {
    var modificationCount, i, t1;
    modificationCount = this._modificationCount;
    for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw H.ioore(t1, i);
      action.call$1(t1[i]);
      if (modificationCount !== this._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(this));
    }
  },
  get$isEmpty: function(_) {
    return this._head === this._tail;
  },
  get$length: function(_) {
    return (this._tail - this._head & this._table.length - 1) >>> 0;
  },
  get$last: function(_) {
    var t1, t2, t3;
    t1 = this._head;
    t2 = this._tail;
    if (t1 === t2)
      throw H.wrapException(P.StateError$("No elements"));
    t1 = this._table;
    t3 = t1.length;
    t2 = (t2 - 1 & t3 - 1) >>> 0;
    if (t2 < 0 || t2 >= t3)
      throw H.ioore(t1, t2);
    return t1[t2];
  },
  elementAt$1: function(_, index) {
    var t1, t2, t3;
    if (index < 0 || index > this.get$length(this))
      throw H.wrapException(P.RangeError$range(index, 0, this.get$length(this)));
    t1 = this._table;
    t2 = t1.length;
    t3 = (this._head + index & t2 - 1) >>> 0;
    if (t3 < 0 || t3 >= t2)
      throw H.ioore(t1, t3);
    return t1[t3];
  },
  toList$1$growable: function(_, growable) {
    var list;
    if (growable) {
      list = P.List_List(null, H.getRuntimeTypeArgument(this, "ListQueue", 0));
      H.setRuntimeTypeInfo(list, [H.getRuntimeTypeArgument(this, "ListQueue", 0)]);
      C.JSArray_methods.set$length(list, this.get$length(this));
    } else {
      list = P.List_List(this.get$length(this), H.getRuntimeTypeArgument(this, "ListQueue", 0));
      H.setRuntimeTypeInfo(list, [H.getRuntimeTypeArgument(this, "ListQueue", 0)]);
    }
    this._writeToList$1(list);
    return list;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(_, element) {
    this._add$1(element);
  },
  addAll$1: function(_, elements) {
    var addCount, $length, t1, t2, t3, endSpace, preSpace;
    addCount = elements.length;
    $length = this.get$length(this);
    t1 = $length + addCount;
    t2 = this._table;
    t3 = t2.length;
    if (t1 >= t3) {
      this._preGrow$1(t1);
      t2 = this._table;
      H.IterableMixinWorkaround_setRangeList(t2, $length, t1, elements, 0);
      this._tail = this._tail + addCount;
    } else {
      t1 = this._tail;
      endSpace = t3 - t1;
      if (addCount < endSpace) {
        H.IterableMixinWorkaround_setRangeList(t2, t1, t1 + addCount, elements, 0);
        this._tail = this._tail + addCount;
      } else {
        preSpace = addCount - endSpace;
        H.IterableMixinWorkaround_setRangeList(t2, t1, t1 + endSpace, elements, 0);
        t1 = this._table;
        H.IterableMixinWorkaround_setRangeList(t1, 0, preSpace, elements, endSpace);
        this._tail = preSpace;
      }
    }
    this._modificationCount = this._modificationCount + 1;
  },
  remove$1: function(_, object) {
    var i, t1;
    for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw H.ioore(t1, i);
      if (J.$eq(t1[i], object)) {
        this._remove$1(i);
        this._modificationCount = this._modificationCount + 1;
        return true;
      }
    }
    return false;
  },
  toString$0: function(_) {
    return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw H.wrapException(P.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw H.ioore(t1, t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  _add$1: function(element) {
    var t1, t2, t3;
    t1 = this._table;
    t2 = this._tail;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw H.ioore(t1, t2);
    t1[t2] = element;
    this._tail = (t2 + 1 & t3 - 1) >>> 0;
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _remove$1: function(offset) {
    var t1, t2, mask, t3, t4, i, prevOffset, nextOffset;
    t1 = this._table;
    t2 = t1.length;
    mask = t2 - 1;
    t3 = this._head;
    t4 = this._tail;
    if ((offset - t3 & mask) >>> 0 < (t4 - offset & mask) >>> 0) {
      for (i = offset; i !== t3; i = prevOffset) {
        prevOffset = (i - 1 & mask) >>> 0;
        if (prevOffset < 0 || prevOffset >= t2)
          throw H.ioore(t1, prevOffset);
        t4 = t1[prevOffset];
        if (i < 0 || i >= t2)
          throw H.ioore(t1, i);
        t1[i] = t4;
      }
      if (t3 < 0 || t3 >= t2)
        throw H.ioore(t1, t3);
      t1[t3] = null;
      this._head = (t3 + 1 & mask) >>> 0;
      return (offset + 1 & mask) >>> 0;
    } else {
      this._tail = (t4 - 1 & mask) >>> 0;
      for (t1 = this._tail, t2 = this._table, t3 = t2.length, i = offset; i !== t1; i = nextOffset) {
        nextOffset = (i + 1 & mask) >>> 0;
        if (nextOffset < 0 || nextOffset >= t3)
          throw H.ioore(t2, nextOffset);
        t4 = t2[nextOffset];
        if (i < 0 || i >= t3)
          throw H.ioore(t2, i);
        t2[i] = t4;
      }
      if (t1 < 0 || t1 >= t3)
        throw H.ioore(t2, t1);
      t2[t1] = null;
      return offset;
    }
  },
  _grow$0: function() {
    var newTable, t1, t2, split;
    newTable = P.List_List(this._table.length * 2, H.getRuntimeTypeArgument(this, "ListQueue", 0));
    H.setRuntimeTypeInfo(newTable, [H.getRuntimeTypeArgument(this, "ListQueue", 0)]);
    t1 = this._table;
    t2 = this._head;
    split = t1.length - t2;
    H.IterableMixinWorkaround_setRangeList(newTable, 0, split, t1, t2);
    t1 = this._head;
    t2 = this._table;
    H.IterableMixinWorkaround_setRangeList(newTable, split, split + t1, t2, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  _writeToList$1: function(target) {
    var t1, t2, t3, $length, firstPartSize;
    t1 = this._head;
    t2 = this._tail;
    t3 = this._table;
    if (t1 <= t2) {
      $length = t2 - t1;
      H.IterableMixinWorkaround_setRangeList(target, 0, $length, t3, t1);
      return $length;
    } else {
      firstPartSize = t3.length - t1;
      H.IterableMixinWorkaround_setRangeList(target, 0, firstPartSize, t3, t1);
      t1 = this._tail;
      t2 = this._table;
      H.IterableMixinWorkaround_setRangeList(target, firstPartSize, firstPartSize + t1, t2, 0);
      return this._tail + firstPartSize;
    }
  },
  _preGrow$1: function(newElementCount) {
    var newTable = P.List_List(P.ListQueue__nextPowerOf2(newElementCount), H.getRuntimeTypeArgument(this, "ListQueue", 0));
    H.setRuntimeTypeInfo(newTable, [H.getRuntimeTypeArgument(this, "ListQueue", 0)]);
    this._tail = this._writeToList$1(newTable);
    this._table = newTable;
    this._head = 0;
  },
  ListQueue$1: function(initialCapacity, $E) {
    var t1 = P.List_List(8, $E);
    H.setRuntimeTypeInfo(t1, [$E]);
    this._table = t1;
  },
  $asIterableBase: null,
  $asIterable: null,
  $isEfficientLength: true,
  $isIterable: true,
  static: {
"": "ListQueue__INITIAL_CAPACITY",
ListQueue$: function(initialCapacity, $E) {
  var t1 = new P.ListQueue(null, 0, 0, 0);
  H.setRuntimeTypeInfo(t1, [$E]);
  t1.ListQueue$1(initialCapacity, $E);
  return t1;
},

ListQueue__nextPowerOf2: function(number) {
  var nextNumber;
  if (typeof number !== "number")
    throw number.$shl();
  number = (number << 2 >>> 0) - 1;
  for (; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
}}

},

_ListQueueIterator: {"": "Object;_queue,_end,_modificationCount,_collection$_position,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._queue;
    if (this._modificationCount !== t1._modificationCount)
      H.throwExpression(P.ConcurrentModificationError$(t1));
    t2 = this._collection$_position;
    if (t2 === this._end) {
      this._collection$_current = null;
      return false;
    }
    t3 = t1._table;
    if (t2 < 0 || t2 >= t3.length)
      throw H.ioore(t3, t2);
    this._collection$_current = t3[t2];
    this._collection$_position = (this._collection$_position + 1 & t1._table.length - 1) >>> 0;
    return true;
  },
  static: {
_ListQueueIterator$: function(queue) {
  return new P._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
}}

},

_SplayTreeNode: {"": "Object;key>,left,right", $is_SplayTreeNode: true},

_SplayTreeMapNode: {"": "_SplayTreeNode;value>,key,left,right",
  $as_SplayTreeNode: function($K, $V) {
    return [$K];
  }
},

_SplayTree: {"": "Object;",
  _splay$1: function(key) {
    var current, left, right, left0, comp, t1, tmp, current0;
    current = this._root;
    if (current == null)
      return -1;
    left = this._dummy;
    for (right = left, left0 = right, comp = null; true;) {
      comp = this._collection$_compare$2(current.key, key);
      t1 = J.getInterceptor$n(comp);
      if (t1.$gt(comp, 0)) {
        t1 = current.left;
        if (t1 == null)
          break;
        comp = this._collection$_compare$2(t1.key, key);
        if (J.$gt$n(comp, 0)) {
          tmp = current.left;
          current.left = tmp.right;
          tmp.right = current;
          if (tmp.left == null) {
            current = tmp;
            break;
          }
          current = tmp;
        }
        right.left = current;
        current0 = current.left;
        right = current;
        current = current0;
      } else {
        if (t1.$lt(comp, 0)) {
          t1 = current.right;
          if (t1 == null)
            break;
          comp = this._collection$_compare$2(t1.key, key);
          if (J.$lt$n(comp, 0)) {
            tmp = current.right;
            current.right = tmp.left;
            tmp.left = current;
            if (tmp.right == null) {
              current = tmp;
              break;
            }
            current = tmp;
          }
          left0.right = current;
          current0 = current.right;
        } else
          break;
        left0 = current;
        current = current0;
      }
    }
    left0.right = current.left;
    right.left = current.right;
    current.left = left.right;
    current.right = left.left;
    this._root = current;
    left.right = null;
    left.left = null;
    this._splayCount = this._splayCount + 1;
    return comp;
  },
  _remove$1: function(key) {
    var result, t1, t2;
    if (this._root == null)
      return;
    if (!J.$eq(this._splay$1(key), 0))
      return;
    result = this._root;
    this._count = this._count - 1;
    t1 = this._root;
    t2 = t1.left;
    t1 = t1.right;
    if (t2 == null)
      this._root = t1;
    else {
      this._root = t2;
      this._splay$1(key);
      this._root.right = t1;
    }
    this._modificationCount = this._modificationCount + 1;
    return result;
  },
  _addNewRoot$2: function(node, comp) {
    var t1, t2;
    this._count = this._count + 1;
    this._modificationCount = this._modificationCount + 1;
    if (this._root == null) {
      this._root = node;
      return;
    }
    t1 = J.$lt$n(comp, 0);
    t2 = this._root;
    if (t1) {
      node.left = t2;
      node.right = this._root.right;
      this._root.right = null;
    } else {
      node.right = t2;
      node.left = this._root.left;
      this._root.left = null;
    }
    this._root = node;
  }
},

SplayTreeMap: {"": "_SplayTree;_comparator,_validKey,_root,_dummy,_count,_modificationCount,_splayCount",
  _comparator$2: function(arg0, arg1) {
    return this._comparator.call$2(arg0, arg1);
  },
  _validKey$1: function(arg0) {
    return this._validKey.call$1(arg0);
  },
  _collection$_compare$2: function(key1, key2) {
    return this._comparator$2(key1, key2);
  },
  $index: function(_, key) {
    if (key == null)
      throw H.wrapException(new P.ArgumentError(key));
    if (this._validKey$1(key) !== true)
      return;
    if (this._root != null)
      if (J.$eq(this._splay$1(key), 0))
        return this._root.value;
    return;
  },
  remove$1: function(_, key) {
    var mapRoot;
    if (this._validKey$1(key) !== true)
      return;
    mapRoot = this._remove$1(key);
    if (mapRoot != null)
      return mapRoot.value;
    return;
  },
  $indexSet: function(_, key, value) {
    var comp, t1;
    if (key == null)
      throw H.wrapException(new P.ArgumentError(key));
    comp = this._splay$1(key);
    if (J.$eq(comp, 0)) {
      this._root.value = value;
      return;
    }
    t1 = new P._SplayTreeMapNode(value, key, null, null);
    H.setRuntimeTypeInfo(t1, [null, null]);
    this._addNewRoot$2(t1, comp);
  },
  addAll$1: function(_, other) {
    H.IterableMixinWorkaround_forEach(other, new P.SplayTreeMap_addAll_closure(this));
  },
  get$isEmpty: function(_) {
    return this._root == null;
  },
  get$isNotEmpty: function(_) {
    return this._root != null;
  },
  forEach$1: function(_, f) {
    var nodes, node, t1;
    nodes = new P._SplayTreeNodeIterator(this, [], this._modificationCount, this._splayCount, null);
    nodes._SplayTreeIterator$1(this);
    for (; nodes.moveNext$0();) {
      node = nodes.get$current();
      t1 = J.getInterceptor$x(node);
      f.call$2(t1.get$key(node), t1.get$value(node));
    }
  },
  get$length: function(_) {
    return this._count;
  },
  containsKey$1: function(key) {
    return this._validKey$1(key) === true && J.$eq(this._splay$1(key), 0);
  },
  get$keys: function() {
    var t1 = new P._SplayTreeKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "SplayTreeMap", 0)]);
    return t1;
  },
  get$values: function(_) {
    var t1 = new P._SplayTreeValueIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "SplayTreeMap", 0), H.getRuntimeTypeArgument(this, "SplayTreeMap", 1)]);
    return t1;
  },
  toString$0: function(_) {
    return P.Maps_mapToString(this);
  },
  $isSplayTreeMap: true,
  $as_SplayTree: function($K, $V) {
    return [$K];
  },
  $asMap: null,
  $isMap: true,
  static: {
SplayTreeMap$: function(compare, isValidKey, $K, $V) {
  var t1, t2, t3;
  t1 = P.Comparable_compare$closure;
  t2 = new P.SplayTreeMap_closure($K);
  t3 = new P._SplayTreeNode(null, null, null);
  H.setRuntimeTypeInfo(t3, [$K]);
  t3 = new P.SplayTreeMap(t1, t2, null, t3, 0, 0, 0);
  H.setRuntimeTypeInfo(t3, [$K, $V]);
  return t3;
}}

},

SplayTreeMap_closure: {"": "Closure;K_0",
  call$1: function(v) {
    var t1 = H.checkSubtypeOfRuntimeType(v, this.K_0);
    return t1;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

SplayTreeMap_addAll_closure: {"": "Closure;this_0",
  call$2: function(key, value) {
    var t1 = this.this_0;
    t1.$indexSet(t1, key, value);
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

_SplayTreeIterator: {"": "Object;",
  get$current: function() {
    var t1 = this._currentNode;
    if (t1 == null)
      return;
    return this._getValue$1(t1);
  },
  _findLeftMostDescendent$1: function(node) {
    var t1;
    for (t1 = this._workList; node != null;) {
      t1.push(node);
      node = node.left;
    }
  },
  _rebuildWorkList$1: function(currentNode) {
    var t1;
    C.JSArray_methods.set$length(this._workList, 0);
    t1 = this._tree;
    if (currentNode == null)
      this._findLeftMostDescendent$1(t1._root);
    else {
      t1._splay$1(currentNode.key);
      this._findLeftMostDescendent$1(t1._root.right);
    }
  },
  moveNext$0: function() {
    var t1, t2;
    t1 = this._tree;
    if (this._modificationCount !== t1._modificationCount)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    t2 = this._workList;
    if (t2.length === 0) {
      this._currentNode = null;
      return false;
    }
    if (t1._splayCount !== this._splayCount)
      this._rebuildWorkList$1(this._currentNode);
    if (0 >= t2.length)
      throw H.ioore(t2, 0);
    this._currentNode = t2.pop();
    this._findLeftMostDescendent$1(this._currentNode.right);
    return true;
  },
  _SplayTreeIterator$1: function(tree) {
    this._findLeftMostDescendent$1(tree._root);
  }
},

_SplayTreeKeyIterable: {"": "IterableBase;_tree",
  get$length: function(_) {
    return this._tree._count;
  },
  get$isEmpty: function(_) {
    return this._tree._count === 0;
  },
  get$iterator: function(_) {
    var t1, t2;
    t1 = this._tree;
    t2 = new P._SplayTreeKeyIterator(t1, [], t1._modificationCount, t1._splayCount, null);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(this, "_SplayTreeKeyIterable", 0)]);
    t2._SplayTreeIterator$1(t1);
    return t2;
  },
  $asIterableBase: null,
  $asIterable: null,
  $isEfficientLength: true
},

_SplayTreeValueIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._count;
  },
  get$isEmpty: function(_) {
    return this._map._count === 0;
  },
  get$iterator: function(_) {
    var t1, t2;
    t1 = this._map;
    t2 = new P._SplayTreeValueIterator(t1, [], t1._modificationCount, t1._splayCount, null);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(this, "_SplayTreeValueIterable", 0), H.getRuntimeTypeArgument(this, "_SplayTreeValueIterable", 1)]);
    t2._SplayTreeIterator$1(t1);
    return t2;
  },
  $asIterableBase: function($K, $V) {
    return [$V];
  },
  $asIterable: function($K, $V) {
    return [$V];
  },
  $isEfficientLength: true
},

_SplayTreeKeyIterator: {"": "_SplayTreeIterator;_tree,_workList,_modificationCount,_splayCount,_currentNode",
  _getValue$1: function(node) {
    return node.key;
  },
  $as_SplayTreeIterator: null
},

_SplayTreeValueIterator: {"": "_SplayTreeIterator;_tree,_workList,_modificationCount,_splayCount,_currentNode",
  _getValue$1: function(node) {
    return node.value;
  },
  $as_SplayTreeIterator: function($K, $V) {
    return [$V];
  }
},

_SplayTreeNodeIterator: {"": "_SplayTreeIterator;_tree,_workList,_modificationCount,_splayCount,_currentNode",
  _getValue$1: function(node) {
    return node;
  }
}}],
["dart.convert", "dart:convert", , P, {
Codec: {"": "Object;"},

Converter: {"": "Object;"},

Encoding: {"": "Codec;"},

JsonCodec: {"": "Codec;"},

Utf8Codec: {"": "Encoding;_allowMalformed",
  get$name: function(_) {
    return "utf-8";
  },
  get$encoder: function() {
    return new P.Utf8Encoder();
  }
},

Utf8Encoder: {"": "Converter;",
  convert$1: function(string) {
    var t1, t2, encoder;
    t1 = string.length;
    t2 = P.List_List(t1 * 3, J.JSInt);
    H.setRuntimeTypeInfo(t2, [J.JSInt]);
    encoder = new P._Utf8Encoder(0, 0, t2);
    if (encoder._fillBuffer$3(string, 0, t1) !== t1)
      encoder._writeSurrogate$2(C.JSString_methods.codeUnitAt$1(string, t1 - 1), 0);
    return C.JSArray_methods.sublist$2(encoder._buffer, 0, encoder._bufferIndex);
  }
},

_Utf8Encoder: {"": "Object;_carry,_bufferIndex,_buffer",
  _writeSurrogate$2: function(leadingSurrogate, nextCodeUnit) {
    var t1, t2, rune, t3, t4;
    t1 = this._buffer;
    t2 = this._bufferIndex;
    if ((nextCodeUnit & 64512) === 56320) {
      rune = (65536 + ((leadingSurrogate & 1023) << 10 >>> 0) | nextCodeUnit & 1023) >>> 0;
      this._bufferIndex = t2 + 1;
      t3 = C.JSInt_methods.$shr(rune, 18);
      t4 = t1.length;
      if (t2 < 0 || t2 >= t4)
        throw H.ioore(t1, t2);
      t1[t2] = (240 | t3) >>> 0;
      t3 = this._bufferIndex;
      this._bufferIndex = t3 + 1;
      t2 = C.JSInt_methods.$shr(rune, 12);
      if (t3 < 0 || t3 >= t4)
        throw H.ioore(t1, t3);
      t1[t3] = (128 | t2 & 63) >>> 0;
      t2 = this._bufferIndex;
      this._bufferIndex = t2 + 1;
      t3 = C.JSInt_methods.$shr(rune, 6);
      if (t2 < 0 || t2 >= t4)
        throw H.ioore(t1, t2);
      t1[t2] = (128 | t3 & 63) >>> 0;
      t3 = this._bufferIndex;
      this._bufferIndex = t3 + 1;
      if (t3 < 0 || t3 >= t4)
        throw H.ioore(t1, t3);
      t1[t3] = (128 | rune & 63) >>> 0;
      return true;
    } else {
      this._bufferIndex = t2 + 1;
      t3 = C.JSInt_methods.$shr(leadingSurrogate, 12);
      t4 = t1.length;
      if (t2 < 0 || t2 >= t4)
        throw H.ioore(t1, t2);
      t1[t2] = (224 | t3) >>> 0;
      t3 = this._bufferIndex;
      this._bufferIndex = t3 + 1;
      t2 = C.JSInt_methods.$shr(leadingSurrogate, 6);
      if (t3 < 0 || t3 >= t4)
        throw H.ioore(t1, t3);
      t1[t3] = (128 | t2 & 63) >>> 0;
      t2 = this._bufferIndex;
      this._bufferIndex = t2 + 1;
      if (t2 < 0 || t2 >= t4)
        throw H.ioore(t1, t2);
      t1[t2] = (128 | leadingSurrogate & 63) >>> 0;
      return false;
    }
  },
  _fillBuffer$3: function(str, start, end) {
    var t1, t2, t3, stringIndex, codeUnit, t4, stringIndex0, t5;
    if (start !== end && (C.JSString_methods.codeUnitAt$1(str, end - 1) & 64512) === 55296)
      --end;
    for (t1 = this._buffer, t2 = t1.length, t3 = str.length, stringIndex = start; stringIndex < end; ++stringIndex) {
      if (stringIndex < 0)
        H.throwExpression(P.RangeError$value(stringIndex));
      if (stringIndex >= t3)
        H.throwExpression(P.RangeError$value(stringIndex));
      codeUnit = str.charCodeAt(stringIndex);
      if (codeUnit <= 127) {
        t4 = this._bufferIndex;
        if (t4 >= t2)
          break;
        this._bufferIndex = t4 + 1;
        if (t4 < 0)
          throw H.ioore(t1, t4);
        t1[t4] = codeUnit;
      } else if ((codeUnit & 64512) === 55296) {
        if (this._bufferIndex + 3 >= t2)
          break;
        stringIndex0 = stringIndex + 1;
        if (stringIndex0 < 0)
          H.throwExpression(P.RangeError$value(stringIndex0));
        if (stringIndex0 >= t3)
          H.throwExpression(P.RangeError$value(stringIndex0));
        if (this._writeSurrogate$2(codeUnit, str.charCodeAt(stringIndex0)))
          stringIndex = stringIndex0;
      } else if (codeUnit <= 2047) {
        t4 = this._bufferIndex;
        t5 = t4 + 1;
        if (t5 >= t2)
          break;
        this._bufferIndex = t5;
        t5 = C.JSInt_methods.$shr(codeUnit, 6);
        if (t4 < 0 || t4 >= t2)
          throw H.ioore(t1, t4);
        t1[t4] = (192 | t5) >>> 0;
        t5 = this._bufferIndex;
        this._bufferIndex = t5 + 1;
        if (t5 < 0 || t5 >= t2)
          throw H.ioore(t1, t5);
        t1[t5] = (128 | codeUnit & 63) >>> 0;
      } else {
        t4 = this._bufferIndex;
        if (t4 + 2 >= t2)
          break;
        this._bufferIndex = t4 + 1;
        t5 = C.JSInt_methods.$shr(codeUnit, 12);
        if (t4 < 0 || t4 >= t2)
          throw H.ioore(t1, t4);
        t1[t4] = (224 | t5) >>> 0;
        t5 = this._bufferIndex;
        this._bufferIndex = t5 + 1;
        t4 = C.JSInt_methods.$shr(codeUnit, 6);
        if (t5 < 0 || t5 >= t2)
          throw H.ioore(t1, t5);
        t1[t5] = (128 | t4 & 63) >>> 0;
        t4 = this._bufferIndex;
        this._bufferIndex = t4 + 1;
        if (t4 < 0 || t4 >= t2)
          throw H.ioore(t1, t4);
        t1[t4] = (128 | codeUnit & 63) >>> 0;
      }
    }
    return stringIndex;
  },
  static: {
"": "_Utf8Encoder__DEFAULT_BYTE_BUFFER_SIZE",
}

}}],
["dart.core", "dart:core", , P, {
Function__toMangledNames: function(namedArguments) {
  return;
},

Comparable_compare: function(a, b) {
  return J.compareTo$1$ns(a, b);
},

Error_safeToString: function(object) {
  var buffer, t1, i, codeUnit, t2, charCodes;
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return J.toString$0(object);
  if (typeof object === "string") {
    buffer = new P.StringBuffer("");
    buffer._contents = "\"";
    for (t1 = object.length, i = 0; i < t1; ++i) {
      codeUnit = C.JSString_methods.codeUnitAt$1(object, i);
      if (codeUnit <= 31)
        if (codeUnit === 10)
          buffer._contents = buffer._contents + "\\n";
        else if (codeUnit === 13)
          buffer._contents = buffer._contents + "\\r";
        else if (codeUnit === 9)
          buffer._contents = buffer._contents + "\\t";
        else {
          buffer._contents = buffer._contents + "\\x";
          if (codeUnit < 16)
            buffer._contents = buffer._contents + "0";
          else {
            buffer._contents = buffer._contents + "1";
            codeUnit -= 16;
          }
          t2 = codeUnit < 10 ? 48 + codeUnit : 87 + codeUnit;
          charCodes = P.List_List$filled(1, t2, J.JSInt);
          charCodes.$builtinTypeInfo = [J.JSInt];
          t2 = H.Primitives_stringFromCharCodes(charCodes);
          buffer._contents = buffer._contents + t2;
        }
      else if (codeUnit === 92)
        buffer._contents = buffer._contents + "\\\\";
      else if (codeUnit === 34)
        buffer._contents = buffer._contents + "\\\"";
      else {
        charCodes = P.List_List$filled(1, codeUnit, J.JSInt);
        charCodes.$builtinTypeInfo = [J.JSInt];
        t2 = H.Primitives_stringFromCharCodes(charCodes);
        buffer._contents = buffer._contents + t2;
      }
    }
    buffer._contents = buffer._contents + "\"";
    return buffer._contents;
  }
  return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
},

Exception_Exception: function(message) {
  return new P._ExceptionImplementation(message);
},

identical: function(a, b) {
  return a == null ? b == null : a === b;
},

identityHashCode: function(object) {
  return H.objectHashCode(object);
},

List_List: function($length, $E) {
  if ($length == null)
    return new Array(0);
  if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
    throw H.wrapException(P.ArgumentError$("Length must be a positive integer: " + H.S($length) + "."));
  return H.Primitives_newFixedList($length);
},

List_List$filled: function($length, fill, $E) {
  var result, t1, i;
  if ($length < 0)
    throw H.wrapException(P.ArgumentError$("Length must be a positive integer: " + $length + "."));
  result = H.Primitives_newFixedList($length);
  if ($length !== 0 && true)
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
},

List_List$from: function(other, growable, $E) {
  var list, t1, $length, fixedList, t2, i, t3;
  list = P.List_List(null, $E);
  H.setRuntimeTypeInfo(list, [$E]);
  for (t1 = J.get$iterator$ax(other); t1.moveNext$0();)
    list.push(t1.get$current());
  if (growable)
    return list;
  $length = list.length;
  fixedList = P.List_List($length, $E);
  H.setRuntimeTypeInfo(fixedList, [$E]);
  for (t1 = list.length, t2 = fixedList.length, i = 0; i < $length; ++i) {
    if (i >= t1)
      throw H.ioore(list, i);
    t3 = list[i];
    if (i >= t2)
      throw H.ioore(fixedList, i);
    fixedList[i] = t3;
  }
  return fixedList;
},

print: function(object) {
  var line = J.toString$0(object);
  H.printToConsole(line);
},

Function__toMangledNames_closure: {"": "Closure;result_0",
  call$2: function(symbol, value) {
    var t1 = this.result_0;
    t1.$indexSet(t1, symbol.get$_name(), value);
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

NoSuchMethodError_toString_closure: {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if (t1.i_1 > 0)
      t1.sb_0.write$1(", ");
    t1.sb_0.write$1(key.get$_name());
    t1.sb_0.write$1(": ");
    t1.sb_0.write$1(P.Error_safeToString(value));
    t1.i_1 = t1.i_1 + 1;
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

Comparable: {"": "Object;"},

DateTime: {"": "Object;millisecondsSinceEpoch<,isUtc",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isDateTime)
      return false;
    return this.millisecondsSinceEpoch === other.millisecondsSinceEpoch && this.isUtc === other.isUtc;
  },
  compareTo$1: function(_, other) {
    return C.JSNumber_methods.compareTo$1(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function(_) {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function(_) {
    var t1, y, m, d, h, min, sec, ms;
    t1 = new P.DateTime_toString_twoDigits();
    y = new P.DateTime_toString_fourDigits().call$1(H.Primitives_getYear(this));
    m = t1.call$1(H.Primitives_getMonth(this));
    d = t1.call$1(H.Primitives_getDay(this));
    h = t1.call$1(H.Primitives_getHours(this));
    min = t1.call$1(H.Primitives_getMinutes(this));
    sec = t1.call$1(H.Primitives_getSeconds(this));
    ms = new P.DateTime_toString_threeDigits().call$1(H.Primitives_getMilliseconds(this));
    if (this.isUtc)
      return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms) + "Z";
    else
      return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms);
  },
  add$1: function(_, duration) {
    return P.DateTime$fromMillisecondsSinceEpoch(C.JSNumber_methods.$add(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if (Math.abs(millisecondsSinceEpoch) > 8640000000000000)
      throw H.wrapException(new P.ArgumentError(millisecondsSinceEpoch));
  },
  DateTime$_now$0: function() {
    H.Primitives_lazyAsJsDate(this);
  },
  $isDateTime: true,
  static: {
"": "DateTime_MONDAY,DateTime_TUESDAY,DateTime_WEDNESDAY,DateTime_THURSDAY,DateTime_FRIDAY,DateTime_SATURDAY,DateTime_SUNDAY,DateTime_DAYS_PER_WEEK,DateTime_JANUARY,DateTime_FEBRUARY,DateTime_MARCH,DateTime_APRIL,DateTime_MAY,DateTime_JUNE,DateTime_JULY,DateTime_AUGUST,DateTime_SEPTEMBER,DateTime_OCTOBER,DateTime_NOVEMBER,DateTime_DECEMBER,DateTime_MONTHS_PER_YEAR,DateTime__MAX_MILLISECONDS_SINCE_EPOCH",
DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch, isUtc) {
  var t1 = new P.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
},

DateTime$_now: function() {
  var t1 = new P.DateTime(Date.now(), false);
  t1.DateTime$_now$0();
  return t1;
}}

},

DateTime_toString_fourDigits: {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = J.getInterceptor$n(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) ? "-" : "";
    if (absN >= 1000)
      return H.S(n);
    if (absN >= 100)
      return sign + "0" + H.S(absN);
    if (absN >= 10)
      return sign + "00" + H.S(absN);
    return sign + "000" + H.S(absN);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

DateTime_toString_threeDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = J.getInterceptor$n(n);
    if (t1.$ge(n, 100))
      return H.S(n);
    if (t1.$ge(n, 10))
      return "0" + H.S(n);
    return "00" + H.S(n);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

DateTime_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if (J.$ge$n(n, 10))
      return H.S(n);
    return "0" + H.S(n);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Duration: {"": "Object;_duration<",
  $add: function(_, other) {
    return P.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
  },
  $sub: function(_, other) {
    return P.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
  },
  $mul: function(_, factor) {
    return P.Duration$(0, 0, C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(this._duration * factor)), 0, 0, 0);
  },
  $lt: function(_, other) {
    return C.JSNumber_methods.$lt(this._duration, other.get$_duration());
  },
  $gt: function(_, other) {
    return this._duration > other.get$_duration();
  },
  $ge: function(_, other) {
    return C.JSNumber_methods.$ge(this._duration, other.get$_duration());
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isDuration)
      return false;
    return this._duration === other._duration;
  },
  get$hashCode: function(_) {
    return this._duration & 0x1FFFFFFF;
  },
  compareTo$1: function(_, other) {
    return C.JSNumber_methods.compareTo$1(this._duration, other.get$_duration());
  },
  toString$0: function(_) {
    var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
    t1 = new P.Duration_toString_twoDigits();
    t2 = this._duration;
    if (t2 < 0)
      return "-" + H.S(P.Duration$(0, 0, -t2, 0, 0, 0));
    twoDigitMinutes = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods.$tdiv(t2, 60000000), 60));
    twoDigitSeconds = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods.$tdiv(t2, 1000000), 60));
    sixDigitUs = new P.Duration_toString_sixDigits().call$1(C.JSNumber_methods.remainder$1(t2, 1000000));
    return H.S(C.JSNumber_methods.$tdiv(t2, 3600000000)) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
  },
  $isDuration: true,
  static: {
"": "Duration_MICROSECONDS_PER_MILLISECOND,Duration_MILLISECONDS_PER_SECOND,Duration_SECONDS_PER_MINUTE,Duration_MINUTES_PER_HOUR,Duration_HOURS_PER_DAY,Duration_MICROSECONDS_PER_SECOND,Duration_MICROSECONDS_PER_MINUTE,Duration_MICROSECONDS_PER_HOUR,Duration_MICROSECONDS_PER_DAY,Duration_MILLISECONDS_PER_MINUTE,Duration_MILLISECONDS_PER_HOUR,Duration_MILLISECONDS_PER_DAY,Duration_SECONDS_PER_HOUR,Duration_SECONDS_PER_DAY,Duration_MINUTES_PER_DAY,Duration_ZERO",
Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
  return new P.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
}}

},

Duration_toString_sixDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = J.getInterceptor$n(n);
    if (t1.$ge(n, 100000))
      return H.S(n);
    if (t1.$ge(n, 10000))
      return "0" + H.S(n);
    if (t1.$ge(n, 1000))
      return "00" + H.S(n);
    if (t1.$ge(n, 100))
      return "000" + H.S(n);
    if (t1.$gt(n, 10))
      return "0000" + H.S(n);
    return "00000" + H.S(n);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Duration_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if (J.$ge$n(n, 10))
      return H.S(n);
    return "0" + H.S(n);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Error: {"": "Object;",
  get$stackTrace: function() {
    return new H._StackTrace(this.$thrownJsError, null);
  },
  $isError: true
},

NullThrownError: {"": "Error;",
  toString$0: function(_) {
    return "Throw of null.";
  }
},

ArgumentError: {"": "Error;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + H.S(t1);
    return "Illegal argument(s)";
  },
  static: {
ArgumentError$: function(message) {
  return new P.ArgumentError(message);
}}

},

RangeError: {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + H.S(this.message);
  },
  static: {
RangeError$: function(message) {
  return new P.RangeError(message);
},

RangeError$value: function(value) {
  return new P.RangeError("value " + H.S(value));
},

RangeError$range: function(value, start, end) {
  return new P.RangeError("value " + H.S(value) + " not in range " + start + ".." + H.S(end));
}}

},

NoSuchMethodError: {"": "Error;_core$_receiver,_memberName,_core$_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function(_) {
    var t1, t2, t3, t4, str;
    t1 = {};
    t1.sb_0 = P.StringBuffer$("");
    t1.i_1 = 0;
    for (t2 = this._core$_arguments; t3 = t1.i_1, t3 < t2.length; t1.i_1 = t1.i_1 + 1) {
      if (t3 > 0) {
        t3 = t1.sb_0;
        t3._contents = t3._contents + ", ";
      }
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 < 0 || t4 >= t2.length)
        throw H.ioore(t2, t4);
      str = P.Error_safeToString(t2[t4]);
      str = typeof str === "string" ? str : H.S(str);
      t3._contents = t3._contents + str;
    }
    t2 = this._namedArguments;
    t2.forEach$1(t2, new P.NoSuchMethodError_toString_closure(t1));
    return "NoSuchMethodError : method not found: '" + H.S(this._memberName) + "'\nReceiver: " + H.S(P.Error_safeToString(this._core$_receiver)) + "\nArguments: [" + H.S(t1.sb_0) + "]";
  },
  static: {
NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames) {
  return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames);
}}

},

UnsupportedError: {"": "Error;message",
  toString$0: function(_) {
    return "Unsupported operation: " + this.message;
  },
  static: {
UnsupportedError$: function(message) {
  return new P.UnsupportedError(message);
}}

},

UnimplementedError: {"": "Error;message",
  toString$0: function(_) {
    var t1 = this.message;
    return t1 != null ? "UnimplementedError: " + t1 : "UnimplementedError";
  },
  $isError: true,
  static: {
UnimplementedError$: function(message) {
  return new P.UnimplementedError(message);
}}

},

StateError: {"": "Error;message",
  toString$0: function(_) {
    return "Bad state: " + this.message;
  },
  static: {
StateError$: function(message) {
  return new P.StateError(message);
}}

},

ConcurrentModificationError: {"": "Error;modifiedObject",
  toString$0: function(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
  },
  static: {
ConcurrentModificationError$: function(modifiedObject) {
  return new P.ConcurrentModificationError(modifiedObject);
}}

},

StackOverflowError: {"": "Object;",
  toString$0: function(_) {
    return "Stack Overflow";
  },
  get$stackTrace: function() {
    return;
  },
  $isError: true
},

CyclicInitializationError: {"": "Error;variableName",
  toString$0: function(_) {
    return "Reading static variable '" + this.variableName + "' during its initialization";
  },
  static: {
CyclicInitializationError$: function(variableName) {
  return new P.CyclicInitializationError(variableName);
}}

},

_ExceptionImplementation: {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + H.S(t1);
  }
},

FormatException: {"": "Object;message",
  toString$0: function(_) {
    return "FormatException: " + H.S(this.message);
  },
  static: {
FormatException$: function(message) {
  return new P.FormatException(message);
}}

},

Expando: {"": "Object;name>",
  toString$0: function(_) {
    return "Expando:" + this.name;
  },
  $index: function(_, object) {
    var values = H.Primitives_getProperty(object, "expando$values");
    return values == null ? null : H.Primitives_getProperty(values, this._getKey$0());
  },
  $indexSet: function(_, object, value) {
    var values = H.Primitives_getProperty(object, "expando$values");
    if (values == null) {
      values = new P.Object();
      H.Primitives_setProperty(object, "expando$values", values);
    }
    H.Primitives_setProperty(values, this._getKey$0(), value);
  },
  _getKey$0: function() {
    var key, t1;
    key = H.Primitives_getProperty(this, "expando$key");
    if (key == null) {
      t1 = $.Expando__keyCount;
      $.Expando__keyCount = t1 + 1;
      key = "expando$key$" + t1;
      H.Primitives_setProperty(this, "expando$key", key);
    }
    return key;
  },
  static: {
"": "Expando__KEY_PROPERTY_NAME,Expando__EXPANDO_PROPERTY_NAME,Expando__keyCount",
}

},

Function: {"": "Object;", $isFunction: true},

Iterator: {"": "Object;"},

Map: {"": "Object;", $isMap: true},

Null: {"": "Object;",
  toString$0: function(_) {
    return "null";
  }
},

Object: {"": ";",
  $eq: function(_, other) {
    return this === other;
  },
  get$hashCode: function(_) {
    return H.Primitives_objectHashCode(this);
  },
  toString$0: function(_) {
    return H.Primitives_objectToString(this);
  },
  noSuchMethod$1: function(_, invocation) {
    throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
  },
  $isObject: true
},

StackTrace: {"": "Object;"},

StringBuffer: {"": "Object;_contents<",
  get$length: function(_) {
    return this._contents.length;
  },
  get$isEmpty: function(_) {
    return this._contents.length === 0;
  },
  get$isNotEmpty: function(_) {
    return this._contents.length !== 0;
  },
  write$1: function(obj) {
    var str = typeof obj === "string" ? obj : H.S(obj);
    this._contents = this._contents + str;
  },
  writeAll$2: function(objects, separator) {
    var iterator, str;
    iterator = J.get$iterator$ax(objects);
    if (!iterator.moveNext$0())
      return;
    if (separator.length === 0)
      do {
        str = iterator.get$current();
        str = typeof str === "string" ? str : H.S(str);
        this._contents = this._contents + str;
      } while (iterator.moveNext$0());
    else {
      this.write$1(iterator.get$current());
      for (; iterator.moveNext$0();) {
        this._contents = this._contents + separator;
        str = iterator.get$current();
        str = typeof str === "string" ? str : H.S(str);
        this._contents = this._contents + str;
      }
    }
  },
  toString$0: function(_) {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    this._contents = $content;
  },
  static: {
StringBuffer$: function($content) {
  var t1 = new P.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
}}

},

Symbol: {"": "Object;", $isSymbol: true},

Uri: {"": "Object;_core$_host,_port,_path,scheme,userInfo,query,fragment,_pathSegments,_queryParameters",
  get$host: function(_) {
    var t1, t2;
    t1 = this._core$_host;
    if (t1 != null && J.startsWith$1$s(t1, "[")) {
      t2 = J.getInterceptor$asx(t1);
      return t2.substring$2(t1, 1, J.$sub$n(t2.get$length(t1), 1));
    }
    return t1;
  },
  get$port: function(_) {
    var t1, t2;
    if (J.$eq(this._port, 0)) {
      t1 = this.scheme;
      t2 = J.getInterceptor(t1);
      if (t2.$eq(t1, "http"))
        return 80;
      if (t2.$eq(t1, "https"))
        return 443;
    }
    return this._port;
  },
  _makePath$2: function(path, pathSegments) {
    var t1, result;
    t1 = path == null;
    if (t1 && true)
      return "";
    t1 = !t1;
    if (t1)
      ;
    result = t1 ? P.Uri__normalize(path) : J.join$1$ax(C.JSNull_methods.map$1(pathSegments, new P.Uri__makePath_closure()), "/");
    if (!J.$eq(this.get$host(this), "") || J.$eq(this.scheme, "file")) {
      t1 = J.getInterceptor$asx(result);
      t1 = t1.get$isNotEmpty(result) && !t1.startsWith$1(result, "/");
    } else
      t1 = false;
    if (t1)
      return "/" + H.S(result);
    return result;
  },
  _writeAuthority$1: function(ss) {
    var t1 = this.userInfo;
    if ("" !== t1) {
      ss.write$1(t1);
      ss.write$1("@");
    }
    t1 = this._core$_host;
    ss.write$1(t1 == null ? "null" : t1);
    if (!J.$eq(this._port, 0)) {
      ss.write$1(":");
      ss.write$1(J.toString$0(this._port));
    }
  },
  toString$0: function(_) {
    var sb, t1;
    sb = P.StringBuffer$("");
    t1 = this.scheme;
    if ("" !== t1) {
      sb.write$1(t1);
      sb.write$1(":");
    }
    if (!J.$eq(this.get$host(this), "") || J.$eq(t1, "file")) {
      sb.write$1("//");
      this._writeAuthority$1(sb);
    }
    sb.write$1(this._path);
    t1 = this.query;
    if ("" !== t1) {
      sb.write$1("?");
      sb.write$1(t1);
    }
    t1 = this.fragment;
    if ("" !== t1) {
      sb.write$1("#");
      sb.write$1(t1);
    }
    return sb._contents;
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor$x(other);
    if (typeof other !== "object" || other === null || !t1.$isUri)
      return false;
    return J.$eq(this.scheme, other.scheme) && J.$eq(this.userInfo, other.userInfo) && J.$eq(this.get$host(this), t1.get$host(other)) && J.$eq(this.get$port(this), t1.get$port(other)) && J.$eq(this._path, other._path) && J.$eq(this.query, other.query) && J.$eq(this.fragment, other.fragment);
  },
  get$hashCode: function(_) {
    var t1 = new P.Uri_hashCode_combine();
    return t1.call$2(this.scheme, t1.call$2(this.userInfo, t1.call$2(this.get$host(this), t1.call$2(this.get$port(this), t1.call$2(this._path, t1.call$2(this.query, t1.call$2(this.fragment, 1)))))));
  },
  Uri$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo: function(fragment, host, path, pathSegments, port, query, queryParameters, scheme, userInfo) {
    var t1 = J.getInterceptor(scheme);
    if (t1.$eq(scheme, "http") && J.$eq(port, 80))
      this._port = 0;
    else if (t1.$eq(scheme, "https") && J.$eq(port, 443))
      this._port = 0;
    else
      this._port = port;
    this._path = this._makePath$2(path, pathSegments);
  },
  $isUri: true,
  static: {
"": "Uri__splitRe,Uri__COMPONENT_SCHEME,Uri__COMPONENT_USER_INFO,Uri__COMPONENT_HOST,Uri__COMPONENT_HOST_IPV6,Uri__COMPONENT_PORT,Uri__COMPONENT_PATH,Uri__COMPONENT_QUERY_DATA,Uri__COMPONENT_FRAGMENT,Uri__DOUBLE_QUOTE,Uri__PERCENT,Uri__ASTERISK,Uri__PLUS,Uri__SLASH,Uri__ZERO,Uri__NINE,Uri__COLON,Uri__LESS,Uri__GREATER,Uri__QUESTION,Uri__AT_SIGN,Uri__UPPER_CASE_A,Uri__UPPER_CASE_F,Uri__UPPER_CASE_Z,Uri__LEFT_BRACKET,Uri__BACKSLASH,Uri__RIGHT_BRACKET,Uri__LOWER_CASE_A,Uri__LOWER_CASE_F,Uri__LOWER_CASE_Z,Uri__BAR,Uri__unreservedTable,Uri__unreserved2396Table,Uri__encodeFullTable,Uri__schemeTable,Uri__schemeLowerTable,Uri__subDelimitersTable,Uri__pathCharTable,Uri__queryCharTable",
Uri$_fromMatch: function(m) {
  var t1, t2, t3, t4, t5, t6, t7, t8;
  t1 = m._match;
  if (1 >= t1.length)
    throw H.ioore(t1, 1);
  t2 = t1[1];
  t2 = P.Uri__makeScheme(t2 != null ? t2 : "");
  t3 = t1.length;
  if (2 >= t3)
    throw H.ioore(t1, 2);
  t4 = t1[2];
  t4 = t4 != null ? t4 : "";
  if (3 >= t3)
    throw H.ioore(t1, 3);
  t5 = t1[3];
  if (4 >= t3)
    throw H.ioore(t1, 4);
  t5 = P.Uri__eitherOf(t5, t1[4]);
  if (5 >= t3)
    throw H.ioore(t1, 5);
  t3 = P.Uri__parseIntOrZero(t1[5]);
  t6 = t1.length;
  if (6 >= t6)
    throw H.ioore(t1, 6);
  t7 = t1[6];
  t7 = t7 != null ? t7 : "";
  if (7 >= t6)
    throw H.ioore(t1, 7);
  t8 = t1[7];
  t8 = t8 != null ? t8 : "";
  if (8 >= t6)
    throw H.ioore(t1, 8);
  t1 = t1[8];
  t1 = t1 != null ? t1 : "";
  t6 = P.Uri__makeScheme(t2);
  t6 = new P.Uri(P.Uri__makeHost(t5), null, null, t6, t4, P.Uri__makeQuery(t8, null), P.Uri__makeFragment(t1), null, null);
  t6.Uri$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo(t1, t5, t7, null, t3, t8, null, t2, t4);
  return t6;
},

Uri__makeHost: function(host) {
  var t1, i, t2;
  if (host == null || J.get$isEmpty$asx(host) === true)
    return host;
  t1 = J.getInterceptor$s(host);
  if (t1.codeUnitAt$1(host, 0) === 91) {
    if (t1.codeUnitAt$1(host, J.$sub$n(t1.get$length(host), 1)) !== 93)
      throw H.wrapException(P.FormatException$("Missing end `]` to match `[` in host"));
    P.Uri_parseIPv6Address(t1.substring$2(host, 1, J.$sub$n(t1.get$length(host), 1)));
    return host;
  }
  i = 0;
  while (true) {
    t2 = t1.get$length(host);
    if (typeof t2 !== "number")
      throw H.iae(t2);
    if (!(i < t2))
      break;
    if (t1.codeUnitAt$1(host, i) === 58) {
      P.Uri_parseIPv6Address(host);
      return "[" + H.S(host) + "]";
    }
    ++i;
  }
  return host;
},

Uri__makeScheme: function(scheme) {
  var t1, t2, t3, $length, allLowercase, i, codeUnit, t4;
  t1 = new P.Uri__makeScheme_isSchemeLowerCharacter();
  t2 = new P.Uri__makeScheme_isSchemeCharacter();
  if (scheme == null)
    return "";
  t3 = J.getInterceptor$asx(scheme);
  $length = t3.get$length(scheme);
  if (typeof $length !== "number")
    throw H.iae($length);
  allLowercase = true;
  i = 0;
  for (; i < $length; ++i) {
    codeUnit = t3.codeUnitAt$1(scheme, i);
    if (i === 0) {
      if (!(codeUnit >= 97 && codeUnit <= 122))
        t4 = codeUnit >= 65 && codeUnit <= 90;
      else
        t4 = true;
      t4 = !t4;
    } else
      t4 = false;
    if (t4)
      throw H.wrapException(new P.ArgumentError("Illegal scheme: " + H.S(scheme)));
    if (t1.call$1(codeUnit) !== true) {
      if (t2.call$1(codeUnit) === true)
        ;
      else
        throw H.wrapException(new P.ArgumentError("Illegal scheme: " + H.S(scheme)));
      allLowercase = false;
    }
  }
  return allLowercase ? scheme : t3.toLowerCase$0(scheme);
},

Uri__makeQuery: function(query, queryParameters) {
  var t1, t2, result;
  t1 = {};
  t2 = query == null;
  if (t2 && true)
    return "";
  t2 = !t2;
  if (t2)
    ;
  if (t2)
    return P.Uri__normalize(query);
  result = P.StringBuffer$("");
  t1.first_0 = true;
  C.JSNull_methods.forEach$1(queryParameters, new P.Uri__makeQuery_closure(t1, result));
  return result._contents;
},

Uri__makeFragment: function(fragment) {
  if (fragment == null)
    return "";
  return P.Uri__normalize(fragment);
},

Uri__normalize: function(component) {
  var t1, t2, t3, t4, t5, t6, $length, t7, t8, codeUnit1, codeUnit2, decodedCodeUnit, t9, charCodes;
  t1 = {};
  t2 = new P.Uri__normalize_isNormalizedHexDigit();
  t3 = new P.Uri__normalize_isUnreserved();
  t4 = new P.Uri__normalize_normalizeHexDigit(component, t2, new P.Uri__normalize_isLowerCaseHexDigit());
  t5 = new P.Uri__normalize_decodeHexDigitPair(component);
  t1.result_0 = null;
  t6 = J.getInterceptor$asx(component);
  $length = t6.get$length(component);
  t1.index_1 = 0;
  t1.prevIndex_2 = 0;
  t7 = new P.Uri__normalize_fillResult(t1, component);
  if (typeof $length !== "number")
    throw H.iae($length);
  for (; t8 = t1.index_1, t8 < $length;)
    if (t6.codeUnitAt$1(component, t8) === 37) {
      t8 = t1.index_1;
      if ($length < t8 + 2)
        throw H.wrapException(new P.ArgumentError("Invalid percent-encoding in URI component: " + H.S(component)));
      codeUnit1 = t6.codeUnitAt$1(component, t8 + 1);
      codeUnit2 = t6.codeUnitAt$1(component, t1.index_1 + 2);
      decodedCodeUnit = t5.call$1(t1.index_1 + 1);
      if (t2.call$1(codeUnit1) === true && t2.call$1(codeUnit2) === true && t3.call$1(decodedCodeUnit) !== true)
        t1.index_1 = t1.index_1 + 3;
      else {
        t7.call$0();
        t8 = t3.call$1(decodedCodeUnit);
        t9 = t1.result_0;
        if (t8 === true) {
          t9.toString;
          charCodes = P.List_List$filled(1, decodedCodeUnit, J.JSInt);
          charCodes.$builtinTypeInfo = [J.JSInt];
          t8 = H.Primitives_stringFromCharCodes(charCodes);
          t9._contents = t9._contents + t8;
        } else {
          t9.toString;
          t9._contents = t9._contents + "%";
          t8 = t1.result_0;
          t9 = t4.call$1(t1.index_1 + 1);
          t8.toString;
          charCodes = P.List_List$filled(1, t9, J.JSInt);
          charCodes.$builtinTypeInfo = [J.JSInt];
          t9 = H.Primitives_stringFromCharCodes(charCodes);
          t8._contents = t8._contents + t9;
          t8 = t1.result_0;
          t9 = t4.call$1(t1.index_1 + 2);
          t8.toString;
          charCodes = P.List_List$filled(1, t9, J.JSInt);
          charCodes.$builtinTypeInfo = [J.JSInt];
          t9 = H.Primitives_stringFromCharCodes(charCodes);
          t8._contents = t8._contents + t9;
        }
        t1.index_1 = t1.index_1 + 3;
        t1.prevIndex_2 = t1.index_1;
      }
    } else
      t1.index_1 = t1.index_1 + 1;
  if (t1.result_0 != null && t1.prevIndex_2 !== t8)
    t7.call$0();
  t1 = t1.result_0;
  if (t1 == null)
    return component;
  return J.toString$0(t1);
},

Uri__parseIntOrZero: function(val) {
  if (val != null && !J.$eq(val, ""))
    return H.Primitives_parseInt(val, null, null);
  else
    return 0;
},

Uri__eitherOf: function(val1, val2) {
  if (val1 != null)
    return val1;
  if (val2 != null)
    return val2;
  return "";
},

Uri_parseIPv4Address: function(host) {
  var t1, bytes;
  t1 = new P.Uri_parseIPv4Address_error();
  bytes = host.split(".");
  if (bytes.length !== 4)
    t1.call$1("IPv4 address should contain exactly 4 parts");
  t1 = new H.MappedListIterable(bytes, new P.Uri_parseIPv4Address_closure(t1));
  H.setRuntimeTypeInfo(t1, [null, null]);
  return t1.toList$0(t1);
},

Uri_parseIPv6Address: function(host) {
  var error, parseHex, parts, partStart, last, wildcardSeen, i, t1, atEnd, isLastWildcard, exception, t2, $arguments;
  error = new P.Uri_parseIPv6Address_error();
  parseHex = new P.Uri_parseIPv6Address_parseHex(host, error);
  if (J.$lt$n(J.get$length$asx(host), 2))
    error.call$1("address is too short");
  parts = [];
  partStart = 0;
  wildcardSeen = false;
  i = 0;
  while (true) {
    t1 = J.get$length$asx(host);
    if (typeof t1 !== "number")
      throw H.iae(t1);
    if (!(i < t1))
      break;
    if (J.codeUnitAt$1$s(host, i) === 58) {
      if (i === 0) {
        ++i;
        if (J.codeUnitAt$1$s(host, i) !== 58)
          error.call$1("invalid start colon.");
        partStart = i;
      }
      if (i === partStart) {
        if (wildcardSeen)
          error.call$1("only one wildcard `::` is allowed");
        J.add$1$ax(parts, -1);
        wildcardSeen = true;
      } else
        J.add$1$ax(parts, parseHex.call$2(partStart, i));
      partStart = i + 1;
    }
    ++i;
  }
  if (J.get$length$asx(parts) === 0)
    error.call$1("too few parts");
  atEnd = J.$eq(partStart, J.get$length$asx(host));
  isLastWildcard = J.$eq(J.get$last$ax(parts), -1);
  if (atEnd && !isLastWildcard)
    error.call$1("expected a part after last `:`");
  if (!atEnd)
    try {
      J.add$1$ax(parts, parseHex.call$2(partStart, J.get$length$asx(host)));
    } catch (exception) {
      H.unwrapException(exception);
      try {
        last = P.Uri_parseIPv4Address(J.substring$1$s(host, partStart));
        t1 = J.$shl$n(J.$index$asx(last, 0), 8);
        t2 = J.$index$asx(last, 1);
        if (typeof t2 !== "number")
          throw H.iae(t2);
        J.add$1$ax(parts, (t1 | t2) >>> 0);
        t2 = J.$shl$n(J.$index$asx(last, 2), 8);
        t1 = J.$index$asx(last, 3);
        if (typeof t1 !== "number")
          throw H.iae(t1);
        J.add$1$ax(parts, (t2 | t1) >>> 0);
      } catch (exception) {
        H.unwrapException(exception);
        error.call$1("invalid end of IPv6 address.");
      }

    }

  if (wildcardSeen) {
    t1 = J.get$length$asx(parts);
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > 7)
      error.call$1("an address with a wildcard must have less than 7 parts");
  } else if (J.get$length$asx(parts) !== 8)
    error.call$1("an address without a wildcard must contain exactly 8 parts");
  t1 = new H.ExpandIterable(parts, new P.Uri_parseIPv6Address_closure(parts));
  t1.$builtinTypeInfo = [null, null];
  $arguments = H.substitute(t1.$asIterableBase, H.getRuntimeTypeInfo(t1));
  t2 = $arguments == null ? null : $arguments[0];
  return P.List_List$from(t1, true, t2);
},

Uri__uriEncode: function(canonicalTable, text, spaceToPlus) {
  var t1, result, t2, i, t3, ch, str, nextCh, charCodes;
  t1 = new P.Uri__uriEncode_byteToHex();
  result = P.StringBuffer$("");
  t2 = J.getInterceptor$asx(text);
  i = 0;
  while (true) {
    t3 = t2.get$length(text);
    if (typeof t3 !== "number")
      throw H.iae(t3);
    if (!(i < t3))
      break;
    ch = t2.codeUnitAt$1(text, i);
    if (ch < 128) {
      t3 = C.JSInt_methods.$shr(ch, 4);
      if (t3 < 0 || t3 >= 8)
        throw H.ioore(canonicalTable, t3);
      t3 = (canonicalTable[t3] & C.JSInt_methods.$shl(1, ch & 15)) >>> 0 !== 0;
    } else
      t3 = false;
    if (t3) {
      str = t2.$index(text, i);
      str = typeof str === "string" ? str : H.S(str);
      result._contents = result._contents + str;
    } else if (spaceToPlus && J.$eq(t2.$index(text, i), " "))
      result._contents = result._contents + "+";
    else {
      if (ch >= 55296 && ch < 56320) {
        ++i;
        nextCh = t2.get$length(text) === i ? 0 : t2.codeUnitAt$1(text, i);
        if (nextCh >= 56320 && nextCh < 57344)
          ch = 65536 + (ch - 55296 << 10 >>> 0) + (nextCh - 56320);
        else
          throw H.wrapException(new P.ArgumentError("Malformed URI"));
      }
      charCodes = P.List_List$filled(1, ch, J.JSInt);
      charCodes.$builtinTypeInfo = [J.JSInt];
      t3 = H.Primitives_stringFromCharCodes(charCodes);
      t3 = C.JSArray_methods.get$iterator(C.Utf8Codec_false.get$encoder().convert$1(t3));
      for (; t3.moveNext$0();) {
        str = t1.call$1(t3._dev$_current);
        str = typeof str === "string" ? str : H.S(str);
        result._contents = result._contents + str;
      }
    }
    ++i;
  }
  return result._contents;
}}

},

Uri__makeScheme_isSchemeLowerCharacter: {"": "Closure;",
  call$1: function(ch) {
    var t1, t2;
    t1 = J.getInterceptor$n(ch);
    if (t1.$lt(ch, 128)) {
      t2 = t1.$shr(ch, 4);
      if (t2 < 0 || t2 >= 8)
        throw H.ioore(C.List_6Pr, t2);
      t1 = (C.List_6Pr[t2] & C.JSInt_methods.$shl(1, t1.$and(ch, 15))) >>> 0 !== 0;
    } else
      t1 = false;
    return t1;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri__makeScheme_isSchemeCharacter: {"": "Closure;",
  call$1: function(ch) {
    var t1, t2;
    t1 = J.getInterceptor$n(ch);
    if (t1.$lt(ch, 128)) {
      t2 = t1.$shr(ch, 4);
      if (t2 < 0 || t2 >= 8)
        throw H.ioore(C.List_JYB, t2);
      t1 = (C.List_JYB[t2] & C.JSInt_methods.$shl(1, t1.$and(ch, 15))) >>> 0 !== 0;
    } else
      t1 = false;
    return t1;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri__makePath_closure: {"": "Closure;",
  call$1: function(s) {
    return P.Uri__uriEncode(C.List_qg4, s, false);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri__makeQuery_closure: {"": "Closure;box_0,result_1",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if (!t1.first_0)
      this.result_1.write$1("&");
    t1.first_0 = false;
    t1 = this.result_1;
    t1.write$1(P.Uri__uriEncode(C.List_nxB, key, true));
    if (value != null && J.get$isEmpty$asx(value) !== true) {
      t1.write$1("=");
      t1.write$1(P.Uri__uriEncode(C.List_nxB, value, true));
    }
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

Uri__normalize_isNormalizedHexDigit: {"": "Closure;",
  call$1: function(digit) {
    var t1;
    if (typeof digit !== "number")
      throw H.iae(digit);
    if (!(48 <= digit && digit <= 57))
      t1 = 65 <= digit && digit <= 70;
    else
      t1 = true;
    return t1;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri__normalize_isLowerCaseHexDigit: {"": "Closure;",
  call$1: function(digit) {
    if (typeof digit !== "number")
      throw H.iae(digit);
    return 97 <= digit && digit <= 102;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri__normalize_isUnreserved: {"": "Closure;",
  call$1: function(ch) {
    var t1, t2;
    t1 = J.getInterceptor$n(ch);
    if (t1.$lt(ch, 128)) {
      t2 = t1.$shr(ch, 4);
      if (t2 < 0 || t2 >= 8)
        throw H.ioore(C.List_nxB, t2);
      t1 = (C.List_nxB[t2] & C.JSInt_methods.$shl(1, t1.$and(ch, 15))) >>> 0 !== 0;
    } else
      t1 = false;
    return t1;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri__normalize_normalizeHexDigit: {"": "Closure;component_1,isNormalizedHexDigit_2,isLowerCaseHexDigit_3",
  call$1: function(index) {
    var t1, codeUnit;
    t1 = this.component_1;
    codeUnit = J.codeUnitAt$1$s(t1, index);
    if (this.isLowerCaseHexDigit_3.call$1(codeUnit) === true)
      return codeUnit - 32;
    else if (this.isNormalizedHexDigit_2.call$1(codeUnit) !== true)
      throw H.wrapException(new P.ArgumentError("Invalid URI component: " + H.S(t1)));
    else
      return codeUnit;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri__normalize_decodeHexDigitPair: {"": "Closure;component_4",
  call$1: function(index) {
    var t1, t2, t3, $byte, i, codeUnit;
    for (t1 = this.component_4, t2 = J.getInterceptor$ns(index), t3 = J.getInterceptor$s(t1), $byte = 0, i = 0; i < 2; ++i) {
      codeUnit = t3.codeUnitAt$1(t1, t2.$add(index, i));
      if (48 <= codeUnit && codeUnit <= 57)
        $byte = $byte * 16 + codeUnit - 48;
      else {
        codeUnit = (codeUnit | 32) >>> 0;
        if (97 <= codeUnit && codeUnit <= 102)
          $byte = $byte * 16 + codeUnit - 97 + 10;
        else
          throw H.wrapException(new P.ArgumentError("Invalid percent-encoding in URI component: " + H.S(t1)));
      }
    }
    return $byte;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri__normalize_fillResult: {"": "Closure;box_0,component_5",
  call$0: function() {
    var t1, t2, t3, t4, t5;
    t1 = this.box_0;
    t2 = t1.result_0;
    t3 = t1.prevIndex_2;
    t4 = this.component_5;
    t5 = t1.index_1;
    if (t2 == null)
      t1.result_0 = P.StringBuffer$(J.substring$2$s(t4, t3, t5));
    else
      t2.write$1(J.substring$2$s(t4, t3, t5));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Uri_hashCode_combine: {"": "Closure;",
  call$2: function(part, current) {
    return J.$and$n(J.$add$ns(J.$mul$n(current, 31), J.get$hashCode$(part)), 1073741823);
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

Uri_parseIPv4Address_error: {"": "Closure;",
  call$1: function(msg) {
    throw H.wrapException(P.FormatException$("Illegal IPv4 address, " + H.S(msg)));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri_parseIPv4Address_closure: {"": "Closure;error_0",
  call$1: function(byteString) {
    var $byte, t1;
    $byte = H.Primitives_parseInt(byteString, null, null);
    t1 = J.getInterceptor$n($byte);
    if (t1.$lt($byte, 0) || t1.$gt($byte, 255))
      this.error_0.call$1("each part must be in the range of `0..255`");
    return $byte;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri_parseIPv6Address_error: {"": "Closure;",
  call$1: function(msg) {
    throw H.wrapException(P.FormatException$("Illegal IPv6 address, " + H.S(msg)));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri_parseIPv6Address_parseHex: {"": "Closure;host_0,error_1",
  call$2: function(start, end) {
    var value, t1;
    if (J.$gt$n(J.$sub$n(end, start), 4))
      this.error_1.call$1("an IPv6 part can only contain a maximum of 4 hex digits");
    value = H.Primitives_parseInt(J.substring$2$s(this.host_0, start, end), 16, null);
    t1 = J.getInterceptor$n(value);
    if (t1.$lt(value, 0) || t1.$gt(value, 65535))
      this.error_1.call$1("each part must be in the range of `0x0..0xFFFF`");
    return value;
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

Uri_parseIPv6Address_closure: {"": "Closure;parts_2",
  call$1: function(value) {
    var t1 = J.getInterceptor(value);
    if (t1.$eq(value, -1))
      return P.List_List$filled((9 - this.parts_2.length) * 2, 0, null);
    else
      return [t1.$shr(value, 8) & 255, t1.$and(value, 255)];
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Uri__uriEncode_byteToHex: {"": "Closure;",
  call$1: function(v) {
    var t1, t2;
    t1 = J.getInterceptor$n(v);
    t2 = t1.$shr(v, 4);
    if (t2 < 0 || t2 >= 16)
      throw H.ioore("0123456789ABCDEF", t2);
    t2 = "%" + "0123456789ABCDEF"[t2];
    t1 = t1.$and(v, 15);
    if (t1 < 0 || t1 >= 16)
      throw H.ioore("0123456789ABCDEF", t1);
    return t2 + "0123456789ABCDEF"[t1];
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["dart.dom.html", "dart:html", , W, {
AnchorElement_AnchorElement: function(href) {
  var e = document.createElement("a", null);
  return e;
},

Element_Element$html: function(html, treeSanitizer, validator) {
  var fragment, t1;
  fragment = J.createFragment$3$treeSanitizer$validator$x(document.body, html, treeSanitizer, validator);
  fragment.toString;
  t1 = new W._ChildNodeListLazy(fragment);
  t1 = t1.where$1(t1, new W.Element_Element$html_closure());
  return t1.get$single(t1);
},

_ElementFactoryProvider_createElement_tag: function(tag, typeExtension) {
  return document.createElement(tag);
},

ImageElement_ImageElement: function(height, src, width) {
  var e = document.createElement("img", null);
  return e;
},

OptionElement_OptionElement$_: function(data, value, defaultSelected, selected) {
  return new Option(data, value, defaultSelected, selected);
},

Window__isDartLocation: function(thing) {
  var t1, t2, exception;
  try {
    t1 = thing;
    t2 = J.getInterceptor(t1);
    return typeof t1 === "object" && t1 !== null && !!t2.$isLocation;
  } catch (exception) {
    H.unwrapException(exception);
    return false;
  }

},

_JenkinsSmiHash_combine: function(hash, value) {
  hash = 536870911 & hash + value;
  hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
  return (hash ^ C.JSInt_methods.$shr(hash, 6)) >>> 0;
},

_JenkinsSmiHash_finish: function(hash) {
  hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash = (hash ^ C.JSInt_methods.$shr(hash, 11)) >>> 0;
  return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
},

_convertNativeToDart_Window: function(win) {
  if (win == null)
    return;
  return W._DOMWindowCrossFrame__createSafe(win);
},

_convertNativeToDart_EventTarget: function(e) {
  var $window, t1;
  if (e == null)
    return;
  if ("setInterval" in e) {
    $window = W._DOMWindowCrossFrame__createSafe(e);
    t1 = J.getInterceptor($window);
    if (typeof $window === "object" && $window !== null && !!t1.$isEventTarget)
      return $window;
    return;
  } else
    return e;
},

_convertNativeToDart_XHR_Response: function(o) {
  var t1 = J.getInterceptor(o);
  if (typeof o === "object" && o !== null && !!t1.$isDocument)
    return o;
  return P.convertNativeToDart_AcceptStructuredClone(o, true);
},

_wrapZone: function(callback) {
  var t1 = $.Zone__current;
  if (t1 === C.C__RootZone)
    return callback;
  return t1.bindUnaryCallback$2$runGuarded(callback, true);
},

Console: {"": "Object;",
  count$1: function(arg) {
    return typeof console != "undefined" ? console.count(arg) : null;
  },
  get$count: function() {
    return new B.BoundClosure$1(this, W.Console.prototype.count$1, null, "count$1");
  },
  error$1: function(_, arg) {
    return typeof console != "undefined" ? console.error(arg) : null;
  },
  get$error: function(_receiver) {
    return new M.BoundClosure$i1(this, W.Console.prototype.error$1, _receiver, "error$1");
  },
  info$1: function(arg) {
    return typeof console != "undefined" ? console.info(arg) : null;
  },
  static: {
"": "Console__safeConsole",
}

},

Interceptor_CssStyleDeclarationBase: {"": "Interceptor+CssStyleDeclarationBase;"},

CssStyleDeclarationBase: {"": "Object;",
  set$display: function(receiver, value) {
    this.setProperty$3(receiver, "display", value, "");
  },
  get$position: function(receiver) {
    return this.getPropertyValue$1(receiver, "position");
  },
  position$1: function($receiver, arg0) {
    return this.get$position($receiver).call$1(arg0);
  }
},

Interceptor_ListMixin: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin: {"": "Interceptor_ListMixin+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

_ChildrenElementList: {"": "ListBase;_element,_childElements",
  get$isEmpty: function(_) {
    return this._element.firstElementChild == null;
  },
  get$length: function(_) {
    return this._childElements.length;
  },
  $index: function(_, index) {
    var t1 = this._childElements;
    if (index >>> 0 !== index || index >= t1.length)
      throw H.ioore(t1, index);
    return t1[index];
  },
  $indexSet: function(_, index, value) {
    var t1 = this._childElements;
    if (index >>> 0 !== index || index >= t1.length)
      throw H.ioore(t1, index);
    this._element.replaceChild(value, t1[index]);
  },
  set$length: function(_, newLength) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize element lists"));
  },
  add$1: function(_, value) {
    this._element.appendChild(value);
    return value;
  },
  get$iterator: function(_) {
    var t1 = this.toList$0(this);
    return new H.ListIterator(t1, t1.length, 0, null);
  },
  addAll$1: function(_, iterable) {
    var t1, t2;
    t1 = J.getInterceptor(iterable);
    for (t1 = J.get$iterator$ax(typeof iterable === "object" && iterable !== null && !!t1.$is_ChildNodeListLazy ? P.List_List$from(iterable, true, null) : iterable), t2 = this._element; t1.moveNext$0();)
      t2.appendChild(t1.get$current());
  },
  sort$1: function(_, compare) {
    throw H.wrapException(P.UnsupportedError$("Cannot sort element lists"));
  },
  setRange$4: function(_, start, end, iterable, skipCount) {
    throw H.wrapException(P.UnimplementedError$(null));
  },
  remove$1: function(_, object) {
    var t1, t2;
    t1 = J.getInterceptor$x(object);
    if (typeof object === "object" && object !== null && !!t1.$isElement) {
      t2 = this._element;
      if (t1.get$parentNode(object) === t2) {
        t2.removeChild(object);
        return true;
      }
    }
    return false;
  },
  clear$0: function(_) {
    this._element.textContent = "";
  },
  get$first: function(_) {
    var result = this._element.firstElementChild;
    if (result == null)
      throw H.wrapException(P.StateError$("No elements"));
    return result;
  },
  get$last: function(_) {
    var result = this._element.lastElementChild;
    if (result == null)
      throw H.wrapException(new P.StateError("No elements"));
    return result;
  },
  $asList: function() {
    return [W.Element];
  },
  $asIterable: function() {
    return [W.Element];
  }
},

_FrozenElementList: {"": "ListBase;_nodeList,_elementList",
  get$length: function(_) {
    return this._nodeList.length;
  },
  $index: function(_, index) {
    var t1 = this._nodeList;
    if (index >>> 0 !== index || index >= t1.length)
      throw H.ioore(t1, index);
    return t1[index];
  },
  $indexSet: function(_, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
  },
  set$length: function(_, newLength) {
    throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
  },
  sort$1: function(_, compare) {
    throw H.wrapException(P.UnsupportedError$("Cannot sort list"));
  },
  get$first: function(_) {
    return C.NodeList_methods.get$first(this._nodeList);
  },
  get$last: function(_) {
    return C.NodeList_methods.get$last(this._nodeList);
  },
  get$classes: function(_) {
    return W._MultiElementCssClassSet$(this._elementList);
  },
  _html$_FrozenElementList$_wrap$1: function(_nodeList, $T) {
    var t1 = C.NodeList_methods.where$1(this._nodeList, new W._FrozenElementList$_wrap_closure());
    this._elementList = P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0));
  },
  $asListBase: null,
  $asList: null,
  $asIterable: null,
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  static: {
_FrozenElementList$_wrap: function(_nodeList, $T) {
  var t1 = new W._FrozenElementList(_nodeList, null);
  H.setRuntimeTypeInfo(t1, [$T]);
  t1._html$_FrozenElementList$_wrap$1(_nodeList, $T);
  return t1;
}}

},

_FrozenElementList$_wrap_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = J.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isElement;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Element_Element$html_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = J.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isElement;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Interceptor_ListMixin0: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin0: {"": "Interceptor_ListMixin0+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin1: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin1: {"": "Interceptor_ListMixin1+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin2: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin2: {"": "Interceptor_ListMixin2+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

_ChildNodeListLazy: {"": "ListBase;_this",
  get$first: function(_) {
    var result = this._this.firstChild;
    if (result == null)
      throw H.wrapException(P.StateError$("No elements"));
    return result;
  },
  get$last: function(_) {
    var result = this._this.lastChild;
    if (result == null)
      throw H.wrapException(P.StateError$("No elements"));
    return result;
  },
  get$single: function(_) {
    var t1, l;
    t1 = this._this;
    l = t1.childNodes.length;
    if (l === 0)
      throw H.wrapException(new P.StateError("No elements"));
    if (l > 1)
      throw H.wrapException(new P.StateError("More than one element"));
    return t1.firstChild;
  },
  add$1: function(_, value) {
    this._this.appendChild(value);
  },
  addAll$1: function(_, iterable) {
    var t1, t2, len, i;
    t1 = J.getInterceptor$ax(iterable);
    if (typeof iterable === "object" && iterable !== null && !!t1.$is_ChildNodeListLazy) {
      t1 = iterable._this;
      t2 = this._this;
      if (t1 !== t2)
        for (len = t1.childNodes.length, i = 0; i < len; ++i)
          t2.appendChild(t1.firstChild);
      return;
    }
    for (t1 = t1.get$iterator(iterable), t2 = this._this; t1.moveNext$0();)
      t2.appendChild(t1.get$current());
  },
  remove$1: function(_, object) {
    var t1, t2;
    t1 = J.getInterceptor$x(object);
    if (typeof object !== "object" || object === null || !t1.$isNode)
      return false;
    t2 = this._this;
    if (t2 !== t1.get$parentNode(object))
      return false;
    t2.removeChild(object);
    return true;
  },
  clear$0: function(_) {
    this._this.textContent = "";
  },
  $indexSet: function(_, index, value) {
    var t1, t2;
    t1 = this._this;
    t2 = t1.childNodes;
    if (index >>> 0 !== index || index >= t2.length)
      throw H.ioore(t2, index);
    t1.replaceChild(value, t2[index]);
  },
  get$iterator: function(_) {
    return C.NodeList_methods.get$iterator(this._this.childNodes);
  },
  sort$1: function(_, compare) {
    throw H.wrapException(P.UnsupportedError$("Cannot sort Node list"));
  },
  setRange$4: function(_, start, end, iterable, skipCount) {
    throw H.wrapException(P.UnsupportedError$("Cannot setRange on Node list"));
  },
  get$length: function(_) {
    return this._this.childNodes.length;
  },
  set$length: function(_, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
  },
  $index: function(_, index) {
    var t1 = this._this.childNodes;
    if (index >>> 0 !== index || index >= t1.length)
      throw H.ioore(t1, index);
    return t1[index];
  },
  $is_ChildNodeListLazy: true,
  $asList: function() {
    return [W.Node];
  },
  $asIterable: function() {
    return [W.Node];
  }
},

Interceptor_ListMixin3: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin3: {"": "Interceptor_ListMixin3+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin4: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin4: {"": "Interceptor_ListMixin4+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

EventTarget_ListMixin: {"": "EventTarget+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

EventTarget_ListMixin_ImmutableListMixin: {"": "EventTarget_ListMixin+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin5: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin5: {"": "Interceptor_ListMixin5+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin6: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin6: {"": "Interceptor_ListMixin6+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

EventTarget_ListMixin0: {"": "EventTarget+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

EventTarget_ListMixin_ImmutableListMixin0: {"": "EventTarget_ListMixin0+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin7: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin7: {"": "Interceptor_ListMixin7+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin8: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin8: {"": "Interceptor_ListMixin8+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin9: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin9: {"": "Interceptor_ListMixin9+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

_CSSValue_ListMixin: {"": "_CSSValue+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

_CSSValue_ListMixin_ImmutableListMixin: {"": "_CSSValue_ListMixin+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin10: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin10: {"": "Interceptor_ListMixin10+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin11: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin11: {"": "Interceptor_ListMixin11+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin12: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin12: {"": "Interceptor_ListMixin12+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin13: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin13: {"": "Interceptor_ListMixin13+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin14: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin14: {"": "Interceptor_ListMixin14+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

_AttributeMap: {"": "Object;",
  forEach$1: function(_, f) {
    var t1, key;
    for (t1 = this.get$keys(), t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      key = t1._dev$_current;
      f.call$2(key, this.$index(this, key));
    }
  },
  get$keys: function() {
    var attributes, keys, len, i;
    attributes = this._element.attributes;
    keys = P.List_List(null, J.JSString);
    H.setRuntimeTypeInfo(keys, [J.JSString]);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw H.ioore(attributes, i);
      if (this._matches$1(attributes[i])) {
        if (i >= attributes.length)
          throw H.ioore(attributes, i);
        keys.push(J.get$name$x(attributes[i]));
      }
    }
    return keys;
  },
  get$values: function(_) {
    var attributes, values, len, i;
    attributes = this._element.attributes;
    values = P.List_List(null, J.JSString);
    H.setRuntimeTypeInfo(values, [J.JSString]);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw H.ioore(attributes, i);
      if (this._matches$1(attributes[i])) {
        if (i >= attributes.length)
          throw H.ioore(attributes, i);
        values.push(J.get$value$x(attributes[i]));
      }
    }
    return values;
  },
  get$isEmpty: function(_) {
    return this.get$length(this) === 0;
  },
  get$isNotEmpty: function(_) {
    return this.get$length(this) !== 0;
  },
  $isMap: true,
  $asMap: function() {
    return [J.JSString, J.JSString];
  }
},

_ElementAttributeMap: {"": "_AttributeMap;_element",
  containsKey$1: function(key) {
    return this._element.hasAttribute(key);
  },
  $index: function(_, key) {
    return this._element.getAttribute(key);
  },
  $indexSet: function(_, key, value) {
    this._element.setAttribute(key, value);
  },
  remove$1: function(_, key) {
    var t1, value;
    t1 = this._element;
    value = t1.getAttribute(key);
    t1.removeAttribute(key);
    return value;
  },
  get$length: function(_) {
    return this.get$keys().length;
  },
  _matches$1: function(node) {
    return J.get$_namespaceUri$x(node) == null;
  }
},

WindowBase: {"": "Object;", $isEventTarget: true},

_MultiElementCssClassSet: {"": "CssClassSetImpl;_elementIterable,_elementCssClassSetIterable",
  readClasses$0: function() {
    var s, t1;
    s = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString);
    t1 = this._elementCssClassSetIterable;
    t1.forEach$1(t1, new W._MultiElementCssClassSet_readClasses_closure(s));
    return s;
  },
  writeClasses$1: function(s) {
    var classes, t1;
    classes = C.JSArray_methods.join$1(P.List_List$from(s, true, null), " ");
    for (t1 = this._elementIterable, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();)
      J.set$className$x(t1._dev$_current, classes);
  },
  modify$1: function(f) {
    var t1 = this._elementCssClassSetIterable;
    t1.forEach$1(t1, new W._MultiElementCssClassSet_modify_closure(f));
  },
  toggle$2: function(value, shouldAdd) {
    return this._modifyWithReturnValue$1(new W._MultiElementCssClassSet_toggle_closure(value, shouldAdd));
  },
  toggle$1: function(value) {
    return this.toggle$2(value, null);
  },
  remove$1: function(_, value) {
    return this._modifyWithReturnValue$1(new W._MultiElementCssClassSet_remove_closure(value));
  },
  _modifyWithReturnValue$1: function(f) {
    var t1 = this._elementCssClassSetIterable;
    return t1.fold$2(t1, false, new W._MultiElementCssClassSet__modifyWithReturnValue_closure(f));
  },
  _MultiElementCssClassSet$1: function(_elementIterable) {
    var t1 = new H.MappedListIterable(P.List_List$from(this._elementIterable, true, null), new W._MultiElementCssClassSet_closure());
    H.setRuntimeTypeInfo(t1, [null, null]);
    this._elementCssClassSetIterable = t1;
  },
  static: {
_MultiElementCssClassSet$: function(_elementIterable) {
  var t1 = new W._MultiElementCssClassSet(_elementIterable, null);
  t1._MultiElementCssClassSet$1(_elementIterable);
  return t1;
}}

},

_MultiElementCssClassSet_closure: {"": "Closure;",
  call$1: function(e) {
    return new W._ElementCssClassSet(e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_MultiElementCssClassSet_readClasses_closure: {"": "Closure;s_0",
  call$1: function(e) {
    var t1 = this.s_0;
    return t1.addAll$1(t1, e.readClasses$0());
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_MultiElementCssClassSet_modify_closure: {"": "Closure;f_0",
  call$1: function(e) {
    return e.modify$1(this.f_0);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_MultiElementCssClassSet_toggle_closure: {"": "Closure;value_0,shouldAdd_1",
  call$1: function(e) {
    return e.toggle$2(this.value_0, this.shouldAdd_1);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_MultiElementCssClassSet_remove_closure: {"": "Closure;value_0",
  call$1: function(e) {
    return J.remove$1$ax(e, this.value_0);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_MultiElementCssClassSet__modifyWithReturnValue_closure: {"": "Closure;f_0",
  call$2: function(prevValue, element) {
    return this.f_0.call$1(element) === true || prevValue === true;
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

_ElementCssClassSet: {"": "CssClassSetImpl;_element",
  readClasses$0: function() {
    var s, t1, trimmed;
    s = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString);
    for (t1 = J.get$className$x(this._element).split(" "), t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      trimmed = J.trim$0$s(t1._dev$_current);
      if (trimmed.length !== 0)
        s.add$1(s, trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    P.List_List$from(s, true, null);
    J.set$className$x(this._element, s.join$1(s, " "));
  }
},

_EventStream: {"": "Stream;_target,_eventType,_useCapture",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var t1 = new W._EventStreamSubscription(0, this._target, this._eventType, W._wrapZone(onData), this._useCapture);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_EventStream", 0)]);
    t1._tryResume$0();
    return t1;
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
  },
  $asStream: null
},

_ElementEventStreamImpl: {"": "_EventStream;_target,_eventType,_useCapture", $as_EventStream: null},

_EventStreamSubscription: {"": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this._target == null)
      return;
    this._unlisten$0();
    this._target = null;
    this._onData = null;
  },
  pause$1: function(_, resumeSignal) {
    if (this._target == null)
      return;
    this._pauseCount = this._pauseCount + 1;
    this._unlisten$0();
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    if (this._target == null || this._pauseCount <= 0)
      return;
    this._pauseCount = this._pauseCount - 1;
    this._tryResume$0();
  },
  _tryResume$0: function() {
    var t1 = this._onData;
    if (t1 != null && this._pauseCount <= 0)
      J.addEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
  },
  _unlisten$0: function() {
    var t1 = this._onData;
    if (t1 != null)
      J.removeEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
  },
  $asStreamSubscription: null
},

EventStreamProvider: {"": "Object;_eventType"},

_Html5NodeValidator: {"": "Object;uriPolicy<",
  allowsElement$1: function(element) {
    var t1 = $.get$_Html5NodeValidator__allowedElements();
    return t1.contains$1(t1, J.get$tagName$x(element));
  },
  allowsAttribute$3: function(element, attributeName, value) {
    var tagName, t1, validator;
    tagName = J.get$tagName$x(element);
    t1 = $.get$_Html5NodeValidator__attributeValidators();
    validator = t1.$index(t1, tagName + "::" + attributeName);
    if (validator == null) {
      t1 = $.get$_Html5NodeValidator__attributeValidators();
      validator = t1.$index(t1, "*::" + attributeName);
    }
    if (validator == null)
      return false;
    return validator.call$4(element, attributeName, value, this);
  },
  _Html5NodeValidator$1$uriPolicy: function(uriPolicy) {
    var t1, attr, t2;
    t1 = $.get$_Html5NodeValidator__attributeValidators();
    if (t1.get$isEmpty(t1)) {
      for (t1 = new H.ListIterator(C.List_1GN, 261, 0, null); t1.moveNext$0();) {
        attr = t1._dev$_current;
        t2 = $.get$_Html5NodeValidator__attributeValidators();
        t2.$indexSet(t2, attr, W._Html5NodeValidator__standardAttributeValidator$closure);
      }
      for (t1 = new H.ListIterator(C.List_yrN, 12, 0, null); t1.moveNext$0();) {
        attr = t1._dev$_current;
        t2 = $.get$_Html5NodeValidator__attributeValidators();
        t2.$indexSet(t2, attr, W._Html5NodeValidator__uriAttributeValidator$closure);
      }
    }
  },
  static: {
"": "_Html5NodeValidator__allowedElements,_Html5NodeValidator__standardAttributes,_Html5NodeValidator__uriAttributes,_Html5NodeValidator__attributeValidators",
_Html5NodeValidator$: function(uriPolicy) {
  var t1 = new W._SameOriginUriPolicy(W.AnchorElement_AnchorElement(null), C.Window_methods.get$location(window));
  t1 = new W._Html5NodeValidator(t1);
  t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
  return t1;
},

_Html5NodeValidator__standardAttributeValidator: function(element, attributeName, value, context) {
  return true;
},

_Html5NodeValidator__uriAttributeValidator: function(element, attributeName, value, context) {
  return context.get$uriPolicy().allowsUri$1(value);
}}

},

ImmutableListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return W.FixedSizeListIterator$(receiver);
  },
  add$1: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(receiver, iterable) {
    throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
  },
  sort$1: function(receiver, compare) {
    throw H.wrapException(P.UnsupportedError$("Cannot sort immutable List."));
  },
  remove$1: function(receiver, object) {
    throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(receiver, start, end, iterable, skipCount) {
    throw H.wrapException(P.UnsupportedError$("Cannot setRange on immutable List."));
  },
  $isList: true,
  $asList: null,
  $isEfficientLength: true,
  $isIterable: true,
  $asIterable: null
},

NodeValidatorBuilder: {"": "Object;_validators",
  add$1: function(_, validator) {
    this._validators.push(validator);
  },
  allowsElement$1: function(element) {
    return H.IterableMixinWorkaround_any(this._validators, new W.NodeValidatorBuilder_allowsElement_closure(element));
  },
  allowsAttribute$3: function(element, attributeName, value) {
    return H.IterableMixinWorkaround_any(this._validators, new W.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
  }
},

NodeValidatorBuilder_allowsElement_closure: {"": "Closure;element_0",
  call$1: function(v) {
    return v.allowsElement$1(this.element_0);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

NodeValidatorBuilder_allowsAttribute_closure: {"": "Closure;element_0,attributeName_1,value_2",
  call$1: function(v) {
    return v.allowsAttribute$3(this.element_0, this.attributeName_1, this.value_2);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_SimpleNodeValidator: {"": "Object;uriPolicy<",
  allowsElement$1: function(element) {
    var t1 = this.allowedElements;
    return t1.contains$1(t1, J.get$tagName$x(element));
  },
  allowsAttribute$3: function(element, attributeName, value) {
    var tagName, t1;
    tagName = J.get$tagName$x(element);
    t1 = this.allowedUriAttributes;
    if (t1.contains$1(t1, tagName + "::" + attributeName))
      return this.uriPolicy.allowsUri$1(value);
    else if (t1.contains$1(t1, "*::" + attributeName))
      return this.uriPolicy.allowsUri$1(value);
    else {
      t1 = this.allowedAttributes;
      if (t1.contains$1(t1, tagName + "::" + attributeName))
        return true;
      else if (t1.contains$1(t1, "*::" + attributeName))
        return true;
      else if (t1.contains$1(t1, tagName + "::*"))
        return true;
      else if (t1.contains$1(t1, "*::*"))
        return true;
    }
    return false;
  }
},

_TemplatingNodeValidator: {"": "_SimpleNodeValidator;_templateAttrs,allowedElements,allowedAttributes,allowedUriAttributes,uriPolicy",
  allowsAttribute$3: function(element, attributeName, value) {
    var t1;
    if (W._SimpleNodeValidator.prototype.allowsAttribute$3.call(this, element, attributeName, value))
      return true;
    if (attributeName === "template" && value === "")
      return true;
    if (J.get$attributes$x(element)._element.getAttribute("template") === "") {
      t1 = this._templateAttrs;
      return t1.contains$1(t1, attributeName);
    }
    return false;
  },
  static: {
"": "_TemplatingNodeValidator__TEMPLATE_ATTRS",
_TemplatingNodeValidator$: function() {
  var t1, t2, t3, t4;
  t1 = new H.MappedListIterable(C.List_wSV, new W._TemplatingNodeValidator_closure());
  H.setRuntimeTypeInfo(t1, [null, null]);
  t2 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
  t2.addAll$1(t2, ["TEMPLATE"]);
  t3 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
  t3.addAll$1(t3, t1);
  t1 = t3;
  t3 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
  t4 = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString);
  t4.addAll$1(t4, C.List_wSV);
  return new W._TemplatingNodeValidator(t4, t2, t1, t3, null);
}}

},

_TemplatingNodeValidator_closure: {"": "Closure;",
  call$1: function(attr) {
    return "TEMPLATE::" + H.S(attr);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_SvgNodeValidator: {"": "Object;",
  allowsElement$1: function(element) {
    var t1 = J.getInterceptor(element);
    if (typeof element === "object" && element !== null && !!t1.$isScriptElement)
      return false;
    if (typeof element === "object" && element !== null && !!t1.$isSvgElement)
      return true;
    return false;
  },
  allowsAttribute$3: function(element, attributeName, value) {
    if (attributeName === "is" || C.JSString_methods.startsWith$1(attributeName, "on"))
      return false;
    return this.allowsElement$1(element);
  }
},

FixedSizeListIterator: {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      throw t1.$add();
    nextPosition = t1 + 1;
    t1 = this._length;
    if (typeof t1 !== "number")
      throw H.iae(t1);
    if (nextPosition < t1) {
      this._current = J.$index$asx(this._array, nextPosition);
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  get$current: function() {
    return this._current;
  },
  static: {
FixedSizeListIterator$: function(array) {
  return new W.FixedSizeListIterator(array, J.get$length$asx(array), -1, null);
}}

},

_DOMWindowCrossFrame: {"": "Object;_window",
  get$parent: function(_) {
    return W._DOMWindowCrossFrame__createSafe(this._window.parent);
  },
  $isEventTarget: true,
  static: {
_DOMWindowCrossFrame__createSafe: function(w) {
  if (w === window)
    return w;
  else
    return new W._DOMWindowCrossFrame(w);
}}

},

_LocationWrapper: {"": "Object;_ptr",
  get$host: function(_) {
    return this._ptr.host;
  },
  get$hostname: function(_) {
    return this._ptr.hostname;
  },
  get$pathname: function(_) {
    return this._ptr.pathname;
  },
  get$port: function(_) {
    return this._ptr.port;
  },
  get$protocol: function(_) {
    return this._ptr.protocol;
  },
  toString$0: function(_) {
    return this._ptr.toString();
  },
  $isLocation: true
},

NodeValidator: {"": "Object;"},

_SameOriginUriPolicy: {"": "Object;_hiddenAnchor,_loc",
  allowsUri$1: function(uri) {
    var t1, t2, t3, t4, t5, t6;
    t1 = this._hiddenAnchor;
    t2 = J.getInterceptor$x(t1);
    t2.set$href(t1, uri);
    t3 = t2.get$hostname(t1);
    t4 = this._loc;
    t5 = J.getInterceptor$x(t4);
    t6 = t5.get$hostname(t4);
    if (t3 == null ? t6 == null : t3 === t6) {
      t3 = t2.get$port(t1);
      t6 = t5.get$port(t4);
      if (t3 == null ? t6 == null : t3 === t6) {
        t3 = t2.get$protocol(t1);
        t4 = t5.get$protocol(t4);
        t4 = t3 == null ? t4 == null : t3 === t4;
        t3 = t4;
      } else
        t3 = false;
    } else
      t3 = false;
    if (!t3)
      t1 = t2.get$hostname(t1) === "" && t2.get$port(t1) === "" && t2.get$protocol(t1) === ":";
    else
      t1 = true;
    return t1;
  }
},

_ValidatingTreeSanitizer: {"": "Object;validator",
  sanitizeTree$1: function(node) {
    new W._ValidatingTreeSanitizer_sanitizeTree_walk(this).call$1(node);
  },
  sanitizeNode$1: function(node) {
    var t1, attrs, t2, t3, isAttr, keys, i, $name, t4;
    t1 = J.getInterceptor$x(node);
    switch (t1.get$nodeType(node)) {
      case 1:
        attrs = t1.get$attributes(node);
        if (!this.validator.allowsElement$1(node)) {
          window;
          t2 = $.get$Console__safeConsole();
          t3 = "Removing disallowed element <" + t1.get$tagName(node) + ">";
          t2.toString;
          if (typeof console != "undefined")
            console.warn(t3);
          t1.remove$0(node);
          break;
        }
        t2 = attrs._element;
        isAttr = t2.getAttribute("is");
        if (isAttr != null)
          if (!this.validator.allowsAttribute$3(node, "is", isAttr)) {
            window;
            t2 = $.get$Console__safeConsole();
            t3 = "Removing disallowed type extension <" + t1.get$tagName(node) + " is=\"" + isAttr + "\">";
            t2.toString;
            if (typeof console != "undefined")
              console.warn(t3);
            t1.remove$0(node);
            break;
          }
        t3 = attrs.get$keys();
        keys = P.List_List$from(t3, true, H.getRuntimeTypeArgument(t3, "JSArray", 0));
        for (i = attrs.get$keys().length - 1; i >= 0; --i) {
          if (i >= keys.length)
            throw H.ioore(keys, i);
          $name = keys[i];
          if (!this.validator.allowsAttribute$3(node, J.toLowerCase$0$s($name), t2.getAttribute($name))) {
            window;
            t3 = $.get$Console__safeConsole();
            t4 = "Removing disallowed attribute <" + t1.get$tagName(node) + " " + H.S($name) + "=\"" + t2.getAttribute($name) + "\">";
            t3.toString;
            if (typeof console != "undefined")
              console.warn(t4);
            t2.getAttribute($name);
            t2.removeAttribute($name);
          }
        }
        if (typeof node === "object" && node !== null && !!t1.$isTemplateElement)
          this.sanitizeTree$1(node.content);
        break;
      case 8:
      case 11:
      case 3:
      case 4:
        break;
      default:
        t1.remove$0(node);
    }
  }
},

_ValidatingTreeSanitizer_sanitizeTree_walk: {"": "Closure;this_0",
  call$1: function(node) {
    var child, nextChild;
    this.this_0.sanitizeNode$1(node);
    child = J.get$lastChild$x(node);
    for (; child != null; child = nextChild) {
      nextChild = J.get$previousNode$x(child);
      this.call$1(child);
    }
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

HtmlElement: {"": "Element;", "%": "HTMLAppletElement|HTMLBRElement|HTMLBaseFontElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDirectoryElement|HTMLDivElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLLabelElement|HTMLLegendElement|HTMLMarqueeElement|HTMLMenuElement|HTMLModElement|HTMLOptGroupElement|HTMLParagraphElement|HTMLPreElement|HTMLQuoteElement|HTMLShadowElement|HTMLSpanElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableHeaderCellElement|HTMLTitleElement|HTMLUListElement|HTMLUnknownElement;HTMLElement"},

AnchorElement: {"": "HtmlElement;host=,hostname=,href},pathname=,port=,protocol=,target=,type=",
  toString$0: function(receiver) {
    return receiver.toString();
  },
  "%": "HTMLAnchorElement"
},

AreaElement: {"": "HtmlElement;host=,hostname=,href},pathname=,port=,protocol=,target=", "%": "HTMLAreaElement"},

BaseElement: {"": "HtmlElement;href},target=", "%": "HTMLBaseElement"},

Blob: {"": "Interceptor;type=", $isBlob: true, "%": ";Blob"},

BodyElement: {"": "HtmlElement;", $isBodyElement: true, "%": "HTMLBodyElement"},

ButtonElement: {"": "HtmlElement;name%,type=,value%", "%": "HTMLButtonElement"},

CharacterData: {"": "Node;data%,length=", "%": "Comment;CharacterData"},

CompositionEvent: {"": "UIEvent;data=", "%": "CompositionEvent"},

CssKeyframesRule: {"": "CssRule;name%", "%": "CSSKeyframesRule|MozCSSKeyframesRule|WebKitCSSKeyframesRule"},

CssRule: {"": "Interceptor;type=", "%": "CSSCharsetRule|CSSFontFaceRule|CSSHostRule|CSSImportRule|CSSKeyframeRule|CSSMediaRule|CSSPageRule|CSSStyleRule|CSSSupportsRule|CSSUnknownRule|CSSViewportRule|MozCSSKeyframeRule|WebKitCSSFilterRule|WebKitCSSKeyframeRule|WebKitCSSRegionRule;CSSRule"},

CssStyleDeclaration: {"": "Interceptor_CssStyleDeclarationBase;length=",
  getPropertyValue$1: function(receiver, propertyName) {
    var propValue = receiver.getPropertyValue(propertyName);
    return propValue != null ? propValue : "";
  },
  setProperty$3: function(receiver, propertyName, value, priority) {
    var exception;
    try {
      if (priority == null)
        priority = "";
      receiver.setProperty(propertyName, value, priority);
      if (!!receiver.setAttribute)
        receiver.setAttribute(propertyName, value);
    } catch (exception) {
      H.unwrapException(exception);
    }

  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.CssStyleDeclaration.prototype.item$1, _receiver, "item$1");
  },
  "%": "CSS2Properties|CSSStyleDeclaration|MSStyleCSSProperties"
},

DetailsElement: {"": "HtmlElement;",
  open$0: function($receiver) {
    return this.open.call$0();
  },
  "%": "HTMLDetailsElement"
},

DialogElement: {"": "HtmlElement;",
  open$0: function($receiver) {
    return this.open.call$0();
  },
  show$0: function(receiver) {
    return receiver.show();
  },
  "%": "HTMLDialogElement"
},

Document: {"": "Node;",
  querySelector$1: function(receiver, selectors) {
    return receiver.querySelector(selectors);
  },
  get$onChange: function(receiver) {
    var t1 = new W._EventStream(receiver, C.EventStreamProvider_change._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onClick: function(receiver) {
    var t1 = new W._EventStream(receiver, C.EventStreamProvider_click._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onInput: function(receiver) {
    var t1 = new W._EventStream(receiver, C.EventStreamProvider_input._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onMouseOut: function(receiver) {
    var t1 = new W._EventStream(receiver, C.EventStreamProvider_mouseout._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onMouseOver: function(receiver) {
    var t1 = new W._EventStream(receiver, C.EventStreamProvider_mouseover._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  querySelectorAll$1: function(receiver, selectors) {
    return W._FrozenElementList$_wrap(receiver.querySelectorAll(selectors), null);
  },
  $isDocument: true,
  "%": "Document|HTMLDocument|SVGDocument"
},

DocumentFragment: {"": "Node;",
  get$children: function(receiver) {
    var t1;
    if (receiver._children == null) {
      t1 = new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
      H.setRuntimeTypeInfo(t1, [null]);
      receiver._children = t1;
    }
    return receiver._children;
  },
  querySelectorAll$1: function(receiver, selectors) {
    return W._FrozenElementList$_wrap(receiver.querySelectorAll(selectors), null);
  },
  get$innerHtml: function(receiver) {
    var e, t1;
    e = W._ElementFactoryProvider_createElement_tag("div", null);
    t1 = J.getInterceptor$x(e);
    t1.append$1(e, this.clone$1(receiver, true));
    return t1.get$innerHtml(e);
  },
  set$innerHtml: function(receiver, value) {
    this.setInnerHtml$1(receiver, value);
  },
  setInnerHtml$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    new W._ChildNodeListLazy(receiver)._this.textContent = "";
    receiver.appendChild(J.createFragment$3$treeSanitizer$validator$x(document.body, html, treeSanitizer, validator));
  },
  setInnerHtml$1: function($receiver, html) {
    return this.setInnerHtml$3$treeSanitizer$validator($receiver, html, null, null);
  },
  querySelector$1: function(receiver, selectors) {
    return receiver.querySelector(selectors);
  },
  "%": ";DocumentFragment"
},

DomError: {"": "Interceptor;name=", "%": "DOMError|FileError"},

DomException: {"": "Interceptor;",
  get$name: function(receiver) {
    var errorName = receiver.name;
    if (P.Device_isWebKit() === true && errorName === "SECURITY_ERR")
      return "SecurityError";
    if (P.Device_isWebKit() === true && errorName === "SYNTAX_ERR")
      return "SyntaxError";
    return errorName;
  },
  toString$0: function(receiver) {
    return receiver.toString();
  },
  "%": "DOMException"
},

DomStringList: {"": "Interceptor_ListMixin_ImmutableListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.DomStringList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [J.JSString];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "DOMStringList"
},

Element: {"": "Node;_innerHtml:innerHTML},className%,id%,style=,tagName=",
  get$attributes: function(receiver) {
    return new W._ElementAttributeMap(receiver);
  },
  get$children: function(receiver) {
    return new W._ChildrenElementList(receiver, receiver.children);
  },
  querySelectorAll$1: function(receiver, selectors) {
    return W._FrozenElementList$_wrap(receiver.querySelectorAll(selectors), null);
  },
  query$1: function(receiver, relativeSelectors) {
    return receiver.querySelector(relativeSelectors);
  },
  queryAll$1: function(receiver, relativeSelectors) {
    return W._FrozenElementList$_wrap(receiver.querySelectorAll(relativeSelectors), null);
  },
  get$classes: function(receiver) {
    return new W._ElementCssClassSet(receiver);
  },
  get$xtag: function(receiver) {
    var t1 = receiver._xtag;
    return t1 != null ? t1 : receiver;
  },
  set$xtag: function(receiver, value) {
    receiver._xtag = value;
  },
  toString$0: function(receiver) {
    return receiver.localName;
  },
  insertAdjacentElement$2: function(receiver, where, element) {
    if (!!receiver.insertAdjacentElement)
      receiver.insertAdjacentElement(where, element);
    else
      this._insertAdjacentNode$2(receiver, where, element);
    return element;
  },
  _insertAdjacentNode$2: function(receiver, where, node) {
    var t1, first;
    switch (where.toLowerCase()) {
      case "beforebegin":
        J.insertBefore$2$x(receiver.parentNode, node, receiver);
        break;
      case "afterbegin":
        if (new W._ChildNodeListLazy(receiver)._this.childNodes.length > 0) {
          t1 = new W._ChildNodeListLazy(receiver)._this.childNodes;
          if (0 >= t1.length)
            throw H.ioore(t1, 0);
          first = t1[0];
        } else
          first = null;
        receiver.insertBefore(node, first);
        break;
      case "beforeend":
        receiver.appendChild(node);
        break;
      case "afterend":
        J.insertBefore$2$x(receiver.parentNode, node, receiver.nextSibling);
        break;
      default:
        throw H.wrapException(new P.ArgumentError("Invalid position " + where));
    }
  },
  matches$1: function(receiver, selectors) {
    if (!!receiver.matches)
      return receiver.matches(selectors);
    else if (!!receiver.webkitMatchesSelector)
      return receiver.webkitMatchesSelector(selectors);
    else if (!!receiver.mozMatchesSelector)
      return receiver.mozMatchesSelector(selectors);
    else if (!!receiver.msMatchesSelector)
      return receiver.msMatchesSelector(selectors);
    else if (!!receiver.oMatchesSelector)
      return receiver.oMatchesSelector(selectors);
    else
      throw H.wrapException(P.UnsupportedError$("Not supported on this platform"));
  },
  createShadowRoot$0: function(receiver) {
    return (receiver.createShadowRoot || receiver.webkitCreateShadowRoot).call(receiver);
  },
  createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    var t1, t2, base, contextElement, fragment;
    if (treeSanitizer == null) {
      if ($.Element__defaultValidator == null) {
        t1 = new W.NodeValidatorBuilder([]);
        t2 = t1._validators;
        t2.push(W._Html5NodeValidator$(null));
        t2.push(W._TemplatingNodeValidator$());
        $.Element__defaultValidator = t1;
      }
      validator = $.Element__defaultValidator;
      t1 = $.Element__defaultSanitizer;
      if (t1 == null)
        $.Element__defaultSanitizer = new W._ValidatingTreeSanitizer(validator);
      else
        t1.validator = validator;
      treeSanitizer = $.Element__defaultSanitizer;
    }
    if ($.Element__parseDocument == null) {
      $.Element__parseDocument = document.implementation.createHTMLDocument("");
      $.Element__parseRange = $.Element__parseDocument.createRange();
      base = $.Element__parseDocument.createElement("base", null);
      J.set$href$x(base, document.baseURI);
      $.Element__parseDocument.head.appendChild(base);
    }
    t1 = $.Element__parseDocument;
    if (!!this.$isBodyElement)
      contextElement = t1.body;
    else {
      contextElement = t1.createElement(receiver.tagName, null);
      $.Element__parseDocument.body.appendChild(contextElement);
    }
    if ("createContextualFragment" in window.Range.prototype) {
      $.Element__parseRange.selectNodeContents(contextElement);
      fragment = $.Element__parseRange.createContextualFragment(html);
    } else {
      t1 = J.getInterceptor$x(contextElement);
      t1.set$_innerHtml(contextElement, html);
      fragment = $.Element__parseDocument.createDocumentFragment();
      for (; t1.get$firstChild(contextElement) != null;)
        fragment.appendChild(t1.get$firstChild(contextElement));
    }
    t1 = $.Element__parseDocument.body;
    if (contextElement == null ? t1 != null : contextElement !== t1)
      J.remove$0$ax(contextElement);
    treeSanitizer.sanitizeTree$1(fragment);
    document.adoptNode(fragment);
    return fragment;
  },
  createFragment$2$treeSanitizer: function($receiver, html, treeSanitizer) {
    return this.createFragment$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
  },
  set$innerHtml: function(receiver, html) {
    this.setInnerHtml$1(receiver, html);
  },
  setInnerHtml$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    receiver.textContent = null;
    receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator));
  },
  setInnerHtml$1: function($receiver, html) {
    return this.setInnerHtml$3$treeSanitizer$validator($receiver, html, null, null);
  },
  get$innerHtml: function(receiver) {
    return receiver.innerHTML;
  },
  focus$0: function(receiver) {
    return receiver.focus();
  },
  querySelector$1: function(receiver, selectors) {
    return receiver.querySelector(selectors);
  },
  get$onChange: function(receiver) {
    var t1 = new W._ElementEventStreamImpl(receiver, C.EventStreamProvider_change._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onClick: function(receiver) {
    var t1 = new W._ElementEventStreamImpl(receiver, C.EventStreamProvider_click._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onInput: function(receiver) {
    var t1 = new W._ElementEventStreamImpl(receiver, C.EventStreamProvider_input._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onMouseOut: function(receiver) {
    var t1 = new W._ElementEventStreamImpl(receiver, C.EventStreamProvider_mouseout._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onMouseOver: function(receiver) {
    var t1 = new W._ElementEventStreamImpl(receiver, C.EventStreamProvider_mouseover._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  $isElement: true,
  "%": ";Element"
},

EmbedElement: {"": "HtmlElement;name%,src%,type=", "%": "HTMLEmbedElement"},

ErrorEvent: {"": "Event;error=", "%": "ErrorEvent"},

Event: {"": "Interceptor;type=",
  get$target: function(receiver) {
    return W._convertNativeToDart_EventTarget(receiver.target);
  },
  $isEvent: true,
  "%": "AudioProcessingEvent|AutocompleteErrorEvent|BeforeLoadEvent|BeforeUnloadEvent|CSSFontFaceLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|HashChangeEvent|IDBVersionChangeEvent|MediaKeyEvent|MediaKeyMessageEvent|MediaKeyNeededEvent|MediaStreamEvent|MediaStreamTrackEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SecurityPolicyViolationEvent|SpeechInputEvent|SpeechRecognitionEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitAnimationEvent|WebKitTransitionEvent;Event"
},

EventTarget: {"": "Interceptor;",
  addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
  },
  removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
  },
  $isEventTarget: true,
  "%": "MediaController;EventTarget;EventTarget_ListMixin|EventTarget_ListMixin_ImmutableListMixin|EventTarget_ListMixin0|EventTarget_ListMixin_ImmutableListMixin0"
},

FieldSetElement: {"": "HtmlElement;name%,type=", "%": "HTMLFieldSetElement"},

File: {"": "Blob;name=", "%": "File"},

FileList: {"": "Interceptor_ListMixin_ImmutableListMixin0;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.FileList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.File];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "FileList"
},

FormElement: {"": "HtmlElement;length=,name%,target=", "%": "HTMLFormElement"},

Gamepad: {"": "Interceptor;id=", "%": "Gamepad"},

History: {"": "Interceptor;length=",
  pushState$3: function(receiver, data, title, url) {
    return receiver.pushState(data, title, url);
  },
  "%": "History"
},

HtmlCollection: {"": "Interceptor_ListMixin_ImmutableListMixin1;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.HtmlCollection.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.Node];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"
},

HttpRequest: {"": "XmlHttpRequestEventTarget;",
  get$response: function(receiver) {
    return W._convertNativeToDart_XHR_Response(receiver.response);
  },
  open$5$async$password$user: function(receiver, method, url, async, password, user) {
    return receiver.open(method, url, async, user, password);
  },
  open$2: function($receiver, method, url) {
    return $receiver.open(method, url);
  },
  send$1: function(receiver, data) {
    return receiver.send(data);
  },
  "%": "XMLHttpRequest"
},

IFrameElement: {"": "HtmlElement;name%,src%", "%": "HTMLIFrameElement"},

ImageData: {"": "Interceptor;data=", $isImageData: true, "%": "ImageData"},

ImageElement: {"": "HtmlElement;src%", "%": "HTMLImageElement"},

InputElement: {"": "HtmlElement;checked%,name%,src%,type=,value%", $isElement: true, $isNode: true, $isEventTarget: true, "%": "HTMLInputElement"},

KeygenElement: {"": "HtmlElement;name%,type=", "%": "HTMLKeygenElement"},

LIElement: {"": "HtmlElement;value%", "%": "HTMLLIElement"},

LinkElement: {"": "HtmlElement;href},type=", "%": "HTMLLinkElement"},

Location: {"": "Interceptor;host=,hostname=,pathname=,port=,protocol=",
  toString$0: function(receiver) {
    return receiver.toString();
  },
  $isLocation: true,
  "%": "Location"
},

MapElement: {"": "HtmlElement;name%", "%": "HTMLMapElement"},

MediaElement: {"": "HtmlElement;error=,src%", "%": "HTMLAudioElement|HTMLMediaElement|HTMLVideoElement"},

MediaStream: {"": "EventTarget;id=", "%": "MediaStream"},

MessageEvent: {"": "Event;",
  get$data: function(receiver) {
    return P.convertNativeToDart_AcceptStructuredClone(receiver.data, true);
  },
  "%": "MessageEvent"
},

MetaElement: {"": "HtmlElement;name%", "%": "HTMLMetaElement"},

MeterElement: {"": "HtmlElement;value%", "%": "HTMLMeterElement"},

MidiConnectionEvent: {"": "Event;port=", "%": "MIDIConnectionEvent"},

MidiMessageEvent: {"": "Event;data=", "%": "MIDIMessageEvent"},

MidiOutput: {"": "MidiPort;",
  send$2: function(receiver, data, timestamp) {
    return receiver.send(data, timestamp);
  },
  send$1: function($receiver, data) {
    return $receiver.send(data);
  },
  "%": "MIDIOutput"
},

MidiPort: {"": "EventTarget;id=,name=,type=", "%": "MIDIInput;MIDIPort"},

MimeType: {"": "Interceptor;type=", "%": "MimeType"},

MimeTypeArray: {"": "Interceptor_ListMixin_ImmutableListMixin2;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.MimeTypeArray.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.MimeType];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "MimeTypeArray"
},

MouseEvent: {"": "UIEvent;", $isMouseEvent: true, "%": "DragEvent|MSPointerEvent|MouseEvent|MouseScrollEvent|MouseWheelEvent|PointerEvent|WheelEvent"},

NavigatorUserMediaError: {"": "Interceptor;name=", "%": "NavigatorUserMediaError"},

Node: {"": "EventTarget;firstChild=,lastChild=,_namespaceUri:namespaceURI=,nextNode:nextSibling=,nodeType=,parent:parentElement=,parentNode=,previousNode:previousSibling=,text:textContent}",
  get$nodes: function(receiver) {
    return new W._ChildNodeListLazy(receiver);
  },
  remove$0: function(receiver) {
    var t1 = receiver.parentNode;
    if (t1 != null)
      J._removeChild$1$x(t1, receiver);
  },
  replaceWith$1: function(receiver, otherNode) {
    var $parent, exception;
    try {
      $parent = receiver.parentNode;
      J._replaceChild$2$x($parent, otherNode, receiver);
    } catch (exception) {
      H.unwrapException(exception);
    }

    return receiver;
  },
  insertAllBefore$2: function(receiver, newNodes, refChild) {
    var t1, len, i;
    t1 = J.getInterceptor$ax(newNodes);
    if (!!t1.$is_ChildNodeListLazy) {
      t1 = newNodes._this;
      if (t1 === receiver)
        throw H.wrapException(P.ArgumentError$(newNodes));
      for (len = t1.childNodes.length, i = 0; i < len; ++i)
        receiver.insertBefore(t1.firstChild, refChild);
    } else
      for (t1 = t1.get$iterator(newNodes); t1.moveNext$0();)
        receiver.insertBefore(t1.get$current(), refChild);
  },
  toString$0: function(receiver) {
    var t1 = receiver.nodeValue;
    return t1 == null ? J.Interceptor.prototype.toString$0.call(this, receiver) : t1;
  },
  append$1: function(receiver, newChild) {
    return receiver.appendChild(newChild);
  },
  clone$1: function(receiver, deep) {
    return receiver.cloneNode(deep);
  },
  insertBefore$2: function(receiver, newChild, refChild) {
    return receiver.insertBefore(newChild, refChild);
  },
  _removeChild$1: function(receiver, oldChild) {
    return receiver.removeChild(oldChild);
  },
  _replaceChild$2: function(receiver, newChild, oldChild) {
    return receiver.replaceChild(newChild, oldChild);
  },
  $isNode: true,
  "%": "DocumentType|Entity|Notation;Node"
},

NodeList: {"": "Interceptor_ListMixin_ImmutableListMixin3;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.Node];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "NodeList|RadioNodeList"
},

OListElement: {"": "HtmlElement;reversed=,type=", "%": "HTMLOListElement"},

ObjectElement: {"": "HtmlElement;data%,name%,type=", "%": "HTMLObjectElement"},

OptionElement: {"": "HtmlElement;selected%,value%", "%": "HTMLOptionElement"},

OutputElement: {"": "HtmlElement;name%,type=,value%", "%": "HTMLOutputElement"},

ParamElement: {"": "HtmlElement;name%,value%", "%": "HTMLParamElement"},

Plugin: {"": "Interceptor;length=,name=",
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.Plugin.prototype.item$1, _receiver, "item$1");
  },
  "%": "Plugin"
},

PluginArray: {"": "Interceptor_ListMixin_ImmutableListMixin4;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.PluginArray.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.Plugin];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "PluginArray"
},

ProcessingInstruction: {"": "CharacterData;target=", "%": "ProcessingInstruction"},

ProgressElement: {"": "HtmlElement;value%",
  position$1: function($receiver, arg0) {
    return this.position.call$1(arg0);
  },
  "%": "HTMLProgressElement"
},

ProgressEvent: {"": "Event;", $isProgressEvent: true, "%": "ProgressEvent|ResourceProgressEvent|XMLHttpRequestProgressEvent"},

Range: {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  },
  "%": "Range"
},

ScriptElement0: {"": "HtmlElement;src%,type=", "%": "HTMLScriptElement"},

SelectElement: {"": "HtmlElement;length=,name%,type=,value%",
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.SelectElement.prototype.item$1, _receiver, "item$1");
  },
  "%": "HTMLSelectElement"
},

ShadowRoot: {"": "DocumentFragment;innerHtml:innerHTML%",
  clone$1: function(receiver, deep) {
    return receiver.cloneNode(deep);
  },
  "%": "ShadowRoot"
},

SourceBuffer: {"": "EventTarget;", "%": "SourceBuffer"},

SourceBufferList: {"": "EventTarget_ListMixin_ImmutableListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.SourceBufferList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.SourceBuffer];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "SourceBufferList"
},

SourceElement: {"": "HtmlElement;src%,type=", "%": "HTMLSourceElement"},

SpeechGrammar: {"": "Interceptor;", "%": "SpeechGrammar"},

SpeechGrammarList: {"": "Interceptor_ListMixin_ImmutableListMixin5;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.SpeechGrammarList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.SpeechGrammar];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "SpeechGrammarList"
},

SpeechInputResult: {"": "Interceptor;", "%": "SpeechInputResult"},

SpeechRecognitionAlternative: {"": "Interceptor;", "%": "SpeechRecognitionAlternative"},

SpeechRecognitionError: {"": "Event;error=", "%": "SpeechRecognitionError"},

SpeechRecognitionResult: {"": "Interceptor;length=",
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.SpeechRecognitionResult.prototype.item$1, _receiver, "item$1");
  },
  "%": "SpeechRecognitionResult"
},

SpeechSynthesisEvent: {"": "Event;name=", "%": "SpeechSynthesisEvent"},

StorageEvent: {"": "Event;key=,newValue=", "%": "StorageEvent"},

StyleElement: {"": "HtmlElement;type=", "%": "HTMLStyleElement"},

StyleSheet: {"": "Interceptor;type=", "%": "CSSStyleSheet|StyleSheet"},

TableElement: {"": "HtmlElement;",
  createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    var table, fragment, t1;
    if ("createContextualFragment" in window.Range.prototype)
      return W.Element.prototype.createFragment$3$treeSanitizer$validator.call(this, receiver, html, treeSanitizer, validator);
    table = W.Element_Element$html("<table>" + H.S(html) + "</table>", treeSanitizer, validator);
    fragment = document.createDocumentFragment();
    fragment.toString;
    t1 = new W._ChildNodeListLazy(fragment);
    t1.addAll$1(t1, J.get$nodes$x(table));
    return fragment;
  },
  "%": "HTMLTableElement"
},

TableRowElement: {"": "HtmlElement;",
  createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    var fragment, t1, row;
    if ("createContextualFragment" in window.Range.prototype)
      return W.Element.prototype.createFragment$3$treeSanitizer$validator.call(this, receiver, html, treeSanitizer, validator);
    fragment = document.createDocumentFragment();
    t1 = J.createFragment$3$treeSanitizer$validator$x(document.createElement("table", null), html, treeSanitizer, validator);
    t1.toString;
    t1 = new W._ChildNodeListLazy(t1);
    t1 = J.get$nodes$x(t1.get$single(t1));
    row = t1.get$single(t1);
    fragment.toString;
    t1 = new W._ChildNodeListLazy(fragment);
    t1.addAll$1(t1, J.get$nodes$x(row));
    return fragment;
  },
  "%": "HTMLTableRowElement"
},

TableSectionElement: {"": "HtmlElement;",
  createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    var fragment, t1, section;
    if ("createContextualFragment" in window.Range.prototype)
      return W.Element.prototype.createFragment$3$treeSanitizer$validator.call(this, receiver, html, treeSanitizer, validator);
    fragment = document.createDocumentFragment();
    t1 = J.createFragment$3$treeSanitizer$validator$x(document.createElement("table", null), html, treeSanitizer, validator);
    t1.toString;
    t1 = new W._ChildNodeListLazy(t1);
    section = t1.get$single(t1);
    fragment.toString;
    t1 = new W._ChildNodeListLazy(fragment);
    t1.addAll$1(t1, J.get$nodes$x(section));
    return fragment;
  },
  "%": "HTMLTableSectionElement"
},

TemplateElement: {"": "HtmlElement;",
  setInnerHtml$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    var fragment;
    receiver.textContent = null;
    fragment = this.createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator);
    receiver.content.appendChild(fragment);
  },
  setInnerHtml$1: function($receiver, html) {
    return this.setInnerHtml$3$treeSanitizer$validator($receiver, html, null, null);
  },
  $isTemplateElement: true,
  "%": "HTMLTemplateElement"
},

Text: {"": "CharacterData;", $isText: true, "%": "CDATASection|Text"},

TextAreaElement: {"": "HtmlElement;name%,type=,value%", "%": "HTMLTextAreaElement"},

TextEvent: {"": "UIEvent;data=", "%": "TextEvent"},

TextTrack: {"": "EventTarget;", "%": "TextTrack"},

TextTrackCue: {"": "EventTarget;id=,text}",
  position$1: function($receiver, arg0) {
    return this.position.call$1(arg0);
  },
  "%": "TextTrackCue"
},

TextTrackCueList: {"": "Interceptor_ListMixin_ImmutableListMixin6;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.TextTrackCueList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.TextTrackCue];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "TextTrackCueList"
},

TextTrackList: {"": "EventTarget_ListMixin_ImmutableListMixin0;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.TextTrackList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.TextTrack];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "TextTrackList"
},

Touch: {"": "Interceptor;",
  get$target: function(receiver) {
    return W._convertNativeToDart_EventTarget(receiver.target);
  },
  "%": "Touch"
},

TouchList: {"": "Interceptor_ListMixin_ImmutableListMixin7;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W.TouchList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.Touch];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "TouchList"
},

TrackElement: {"": "HtmlElement;src%", "%": "HTMLTrackElement"},

UIEvent: {"": "Event;", "%": "FocusEvent|KeyboardEvent|SVGZoomEvent|TouchEvent;UIEvent"},

Window: {"": "EventTarget;name%",
  get$location: function(receiver) {
    var result = receiver.location;
    if (W.Window__isDartLocation(result) === true)
      return result;
    if (null == receiver._location_wrapper)
      receiver._location_wrapper = new W._LocationWrapper(result);
    return receiver._location_wrapper;
  },
  get$parent: function(receiver) {
    return W._convertNativeToDart_Window(receiver.parent);
  },
  toString$0: function(receiver) {
    return receiver.toString();
  },
  $isEventTarget: true,
  "%": "DOMWindow|Window"
},

XmlHttpRequestEventTarget: {"": "EventTarget;", "%": ";XMLHttpRequestEventTarget"},

_Attr: {"": "Node;name=,value%", "%": "Attr"},

_CSSValue: {"": "Interceptor;", "%": "CSSPrimitiveValue;CSSValue;_CSSValue_ListMixin|_CSSValue_ListMixin_ImmutableListMixin"},

_ClientRect: {"": "Interceptor;height=,left=,top=,width=",
  toString$0: function(receiver) {
    return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
  },
  $eq: function(receiver, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    t1 = J.getInterceptor$x(other);
    if (typeof other !== "object" || other === null || !t1.$isRectangle)
      return false;
    t2 = receiver.left;
    t3 = t1.get$left(other);
    if (t2 == null ? t3 == null : t2 === t3) {
      t2 = receiver.top;
      t3 = t1.get$top(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = receiver.width;
        t3 = t1.get$width(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.height;
          t1 = t1.get$height(other);
          t1 = t2 == null ? t1 == null : t2 === t1;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  get$hashCode: function(receiver) {
    var t1, t2, t3, t4;
    t1 = J.get$hashCode$(receiver.left);
    t2 = J.get$hashCode$(receiver.top);
    t3 = J.get$hashCode$(receiver.width);
    t4 = J.get$hashCode$(receiver.height);
    return W._JenkinsSmiHash_finish(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, t1), t2), t3), t4));
  },
  $isRectangle: true,
  $asRectangle: function() {
    return [null];
  },
  "%": "ClientRect|DOMRect"
},

_ClientRectList: {"": "Interceptor_ListMixin_ImmutableListMixin8;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W._ClientRectList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [P.Rectangle];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "ClientRectList"
},

_CssRuleList: {"": "Interceptor_ListMixin_ImmutableListMixin9;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W._CssRuleList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.CssRule];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "CSSRuleList"
},

_CssValueList: {"": "_CSSValue_ListMixin_ImmutableListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W._CssValueList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W._CSSValue];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "CSSValueList|WebKitCSSFilterValue|WebKitCSSMixFunctionValue|WebKitCSSTransformValue"
},

_GamepadList: {"": "Interceptor_ListMixin_ImmutableListMixin10;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W._GamepadList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.Gamepad];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "GamepadList"
},

_NamedNodeMap: {"": "Interceptor_ListMixin_ImmutableListMixin11;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W._NamedNodeMap.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.Node];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "MozNamedAttrMap|NamedNodeMap"
},

_SpeechInputResultList: {"": "Interceptor_ListMixin_ImmutableListMixin12;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W._SpeechInputResultList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.SpeechInputResult];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "SpeechInputResultList"
},

_SpeechRecognitionResultList: {"": "Interceptor_ListMixin_ImmutableListMixin13;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W._SpeechRecognitionResultList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.SpeechRecognitionResult];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "SpeechRecognitionResultList"
},

_StyleSheetList: {"": "Interceptor_ListMixin_ImmutableListMixin14;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, W._StyleSheetList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [W.StyleSheet];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "StyleSheetList"
}}],
["dart.dom.indexed_db", "dart:indexed_db", , P, {
KeyRange: {"": "Interceptor;", $isKeyRange: true, "%": "IDBKeyRange"}}],
["dart.dom.svg", "dart:svg", , P, {
Interceptor_ListMixin15: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin15: {"": "Interceptor_ListMixin15+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin16: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin16: {"": "Interceptor_ListMixin16+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin17: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin17: {"": "Interceptor_ListMixin17+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin18: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin18: {"": "Interceptor_ListMixin18+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

_AttributeClassSet: {"": "CssClassSetImpl;_svg$_element",
  readClasses$0: function() {
    var classname, s, t1, trimmed;
    classname = new W._ElementAttributeMap(this._svg$_element)._element.getAttribute("class");
    s = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString);
    if (classname == null)
      return s;
    for (t1 = classname.split(" "), t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      trimmed = J.trim$0$s(t1._dev$_current);
      if (trimmed.length !== 0)
        s.add$1(s, trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    new W._ElementAttributeMap(this._svg$_element)._element.setAttribute("class", s.join$1(s, " "));
  }
},

Interceptor_ListMixin19: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin19: {"": "Interceptor_ListMixin19+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

Interceptor_ListMixin20: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin20: {"": "Interceptor_ListMixin20+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

AElement: {"": "GraphicsElement;target=", "%": "SVGAElement"},

ElementInstance: {"": "EventTarget;lastChild=", "%": "SVGElementInstance"},

FEColorMatrixElement: {"": "SvgElement;type=,values=", "%": "SVGFEColorMatrixElement"},

FETurbulenceElement: {"": "SvgElement;type=", "%": "SVGFETurbulenceElement"},

GraphicsElement: {"": "SvgElement;", "%": "SVGAltGlyphElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGEllipseElement|SVGForeignObjectElement|SVGGElement|SVGImageElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGSVGElement|SVGSwitchElement|SVGTSpanElement|SVGTextContentElement|SVGTextElement|SVGTextPathElement|SVGTextPositioningElement|SVGUseElement;SVGGraphicsElement"},

Length: {"": "Interceptor;value=", "%": "SVGLength"},

LengthList: {"": "Interceptor_ListMixin_ImmutableListMixin15;",
  $index: function(receiver, index) {
    var t1 = receiver.numberOfItems;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    var t1 = receiver.numberOfItems;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.numberOfItems;
    if (typeof len !== "number")
      throw len.$gt();
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  clear$0: function(receiver) {
    return receiver.clear();
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [P.Length];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  "%": "SVGLengthList"
},

Number: {"": "Interceptor;value=", "%": "SVGNumber"},

NumberList: {"": "Interceptor_ListMixin_ImmutableListMixin16;",
  $index: function(receiver, index) {
    var t1 = receiver.numberOfItems;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    var t1 = receiver.numberOfItems;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.numberOfItems;
    if (typeof len !== "number")
      throw len.$gt();
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  clear$0: function(receiver) {
    return receiver.clear();
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [P.Number];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  "%": "SVGNumberList"
},

PathSeg: {"": "Interceptor;", "%": "SVGPathSeg|SVGPathSegArcAbs|SVGPathSegArcRel|SVGPathSegClosePath|SVGPathSegCurvetoCubicAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegLinetoAbs|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoVerticalRel|SVGPathSegMovetoAbs|SVGPathSegMovetoRel"},

PathSegList: {"": "Interceptor_ListMixin_ImmutableListMixin17;",
  $index: function(receiver, index) {
    var t1 = receiver.numberOfItems;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    var t1 = receiver.numberOfItems;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.numberOfItems;
    if (typeof len !== "number")
      throw len.$gt();
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  clear$0: function(receiver) {
    return receiver.clear();
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [P.PathSeg];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  "%": "SVGPathSegList"
},

ScriptElement: {"": "SvgElement;type=", $isScriptElement: true, "%": "SVGScriptElement"},

StringList: {"": "Interceptor_ListMixin_ImmutableListMixin18;",
  $index: function(receiver, index) {
    var t1 = receiver.numberOfItems;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    var t1 = receiver.numberOfItems;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.numberOfItems;
    if (typeof len !== "number")
      throw len.$gt();
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  clear$0: function(receiver) {
    return receiver.clear();
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [J.JSString];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  "%": "SVGStringList"
},

StyleElement0: {"": "SvgElement;type=", "%": "SVGStyleElement"},

SvgElement: {"": "Element;",
  get$classes: function(receiver) {
    if (receiver._cssClassSet == null)
      receiver._cssClassSet = new P._AttributeClassSet(receiver);
    return receiver._cssClassSet;
  },
  get$children: function(receiver) {
    var t1 = new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
    H.setRuntimeTypeInfo(t1, [W.Element]);
    return t1;
  },
  get$innerHtml: function(receiver) {
    var container, cloned, t1;
    container = W._ElementFactoryProvider_createElement_tag("div", null);
    cloned = receiver.cloneNode(true);
    t1 = J.getInterceptor$x(container);
    J.addAll$1$ax(t1.get$children(container), J.get$children$x(cloned));
    return t1.get$innerHtml(container);
  },
  set$innerHtml: function(receiver, value) {
    receiver.textContent = null;
    receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, value, null, null));
  },
  createFragment$3$treeSanitizer$validator: function(receiver, svg, treeSanitizer, validator) {
    var t1, html, fragment, svgFragment, root;
    validator = new W.NodeValidatorBuilder([]);
    t1 = validator._validators;
    t1.push(W._Html5NodeValidator$(null));
    t1.push(W._TemplatingNodeValidator$());
    t1.push(new W._SvgNodeValidator());
    treeSanitizer = new W._ValidatingTreeSanitizer(validator);
    html = "<svg version=\"1.1\">" + H.S(svg) + "</svg>";
    fragment = J.createFragment$2$treeSanitizer$x(document.body, html, treeSanitizer);
    svgFragment = document.createDocumentFragment();
    fragment.toString;
    t1 = new W._ChildNodeListLazy(fragment);
    root = t1.get$single(t1);
    for (t1 = J.getInterceptor$x(root); t1.get$firstChild(root) != null;)
      svgFragment.appendChild(t1.get$firstChild(root));
    return svgFragment;
  },
  insertAdjacentElement$2: function(receiver, where, element) {
    throw H.wrapException(P.UnsupportedError$("Cannot invoke insertAdjacentElement on SVG."));
  },
  $isSvgElement: true,
  "%": "SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGComponentTransferFunctionElement|SVGCursorElement|SVGDescElement|SVGFEBlendElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGHKernElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPatternElement|SVGRadialGradientElement|SVGSetElement|SVGStopElement|SVGSymbolElement|SVGTitleElement|SVGVKernElement|SVGViewElement;SVGElement"
},

Transform: {"": "Interceptor;type=", "%": "SVGTransform"},

TransformList: {"": "Interceptor_ListMixin_ImmutableListMixin19;",
  $index: function(receiver, index) {
    var t1 = receiver.numberOfItems;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    var t1 = receiver.numberOfItems;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.numberOfItems;
    if (typeof len !== "number")
      throw len.$gt();
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  clear$0: function(receiver) {
    return receiver.clear();
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [P.Transform];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  "%": "SVGTransformList"
},

_ElementInstanceList: {"": "Interceptor_ListMixin_ImmutableListMixin20;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.wrapException(P.RangeError$range(index, 0, receiver.length));
    return receiver.item(index);
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  item$1: function(receiver, index) {
    return receiver.item(index);
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, P._ElementInstanceList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [P.ElementInstance];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  "%": "SVGElementInstanceList"
}}],
["dart.dom.web_sql", "dart:web_sql", , P, {
Interceptor_ListMixin21: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

Interceptor_ListMixin_ImmutableListMixin21: {"": "Interceptor_ListMixin21+ImmutableListMixin;", $asList: null, $asIterable: null, $isList: true, $isEfficientLength: true, $isIterable: true},

SqlResultSetRowList: {"": "Interceptor_ListMixin_ImmutableListMixin21;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.wrapException(P.RangeError$range(index, 0, receiver.length));
    return P.convertNativeToDart_Dictionary(receiver.item(index));
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw H.wrapException(P.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var len = receiver.length;
    if (len > 0)
      return receiver[len - 1];
    throw H.wrapException(P.StateError$("No elements"));
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  item$1: function(receiver, index) {
    return P.convertNativeToDart_Dictionary(receiver.item(index));
  },
  get$item: function(_receiver) {
    return new M.BoundClosure$i1(this, P.SqlResultSetRowList.prototype.item$1, _receiver, "item$1");
  },
  $asList: function() {
    return [null];
  },
  $asIterable: function() {
    return [P.Map];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  "%": "SQLResultSetRowList"
}}],
["dart.isolate", "dart:isolate", , P, {
ReceivePort: {"": "Object;", $isReceivePort: true}}],
["dart.js", "dart:js", , P, {
_convertDartFunction: function(f, captureThis) {
  return function(_call, f, captureThis) {return function() {return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));}}(P._callDartFunction$closure.call$4, f, captureThis);
},

_callDartFunction: function(callback, captureThis, $self, $arguments) {
  var arguments0, t1;
  if (captureThis === true) {
    arguments0 = [$self];
    C.JSArray_methods.addAll$1(arguments0, $arguments);
    $arguments = arguments0;
  }
  t1 = J.map$1$ax($arguments, P._convertToDart$closure);
  return P._convertToJS(H.Primitives_applyFunction(callback, t1.toList$0(t1), P.Function__toMangledNames(null)));
},

_defineProperty: function(o, $name, value) {
  var exception;
  if (Object.isExtensible(o))
    try {
      Object.defineProperty(o, $name, { value: value});
      return true;
    } catch (exception) {
      H.unwrapException(exception);
    }

  return false;
},

_convertToJS: function(o) {
  var t1;
  if (o == null)
    return;
  else {
    if (typeof o !== "string")
      if (typeof o !== "number")
        if (typeof o !== "boolean") {
          t1 = J.getInterceptor(o);
          t1 = typeof o === "object" && o !== null && !!t1.$isBlob || typeof o === "object" && o !== null && !!t1.$isKeyRange || typeof o === "object" && o !== null && !!t1.$isImageData || typeof o === "object" && o !== null && !!t1.$isNode || typeof o === "object" && o !== null && !!t1.$isTypedData;
        } else
          t1 = true;
      else
        t1 = true;
    else
      t1 = true;
    if (t1)
      return o;
    else {
      t1 = J.getInterceptor(o);
      if (typeof o === "object" && o !== null && !!t1.$isDateTime)
        return H.Primitives_lazyAsJsDate(o);
      else if (typeof o === "object" && o !== null && !!t1.$isJsObject)
        return o._jsObject;
      else if (typeof o === "object" && o !== null && !!t1.$isFunction)
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      else
        return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0());
    }
  }
},

_getJsProxy: function(o, propertyName, createProxy) {
  var jsProxy = o[propertyName];
  if (jsProxy == null) {
    jsProxy = createProxy.call$1(o);
    P._defineProperty(o, propertyName, jsProxy);
  }
  return jsProxy;
},

_convertToDart: function(o) {
  var t1;
  if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
    return o;
  else {
    t1 = J.getInterceptor(o);
    if (typeof o === "object" && o !== null && !!t1.$isBlob || typeof o === "object" && o !== null && !!t1.$isKeyRange || typeof o === "object" && o !== null && !!t1.$isImageData || typeof o === "object" && o !== null && !!t1.$isNode || typeof o === "object" && o !== null && !!t1.$isTypedData)
      return o;
    else if (o instanceof Date)
      return P.DateTime$fromMillisecondsSinceEpoch(o.getMilliseconds(), false);
    else if (typeof o == "function")
      return P._getDartProxy(o, "_$dart_dartClosure", new P._convertToDart_closure());
    else if (o.constructor === DartObject)
      return o.o;
    else
      return P._getDartProxy(o, "_$dart_dartObject", new P._convertToDart_closure0());
  }
},

_getDartProxy: function(o, propertyName, createProxy) {
  var dartProxy = o[propertyName];
  if (dartProxy == null) {
    dartProxy = createProxy.call$1(o);
    P._defineProperty(o, propertyName, dartProxy);
  }
  return dartProxy;
},

JsObject: {"": "Object;_jsObject",
  $index: function(_, property) {
    if (typeof property !== "string" && typeof property !== "number")
      throw H.wrapException(new P.ArgumentError("property is not a String or num"));
    return P._convertToDart(this._jsObject[property]);
  },
  $indexSet: function(_, property, value) {
    if (typeof property !== "string" && typeof property !== "number")
      throw H.wrapException(new P.ArgumentError("property is not a String or num"));
    this._jsObject[property] = P._convertToJS(value);
  },
  get$hashCode: function(_) {
    return 0;
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$isJsObject && this._jsObject === other._jsObject;
  },
  toString$0: function(_) {
    var t1, exception;
    try {
      t1 = String(this._jsObject);
      return t1;
    } catch (exception) {
      H.unwrapException(exception);
      return P.Object.prototype.toString$0.call(this, this);
    }

  },
  JsObject$_fromJs$1: function(_jsObject) {
    P._getDartProxy(this._jsObject, "_$dart_dartObject", new P.JsObject$_fromJs_closure(this));
  },
  $isJsObject: true,
  static: {
JsObject$_fromJs: function(_jsObject) {
  var t1 = new P.JsObject(_jsObject);
  t1.JsObject$_fromJs$1(_jsObject);
  return t1;
},

JsObject_JsObject$fromBrowserObject: function(object) {
  return P.JsObject$_fromJs(P._convertToJS(object));
}}

},

JsObject$_fromJs_closure: {"": "Closure;this_0",
  call$1: function(o) {
    return this.this_0;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

JsFunction: {"": "JsObject;_jsObject", static: {
JsFunction_JsFunction$withThis: function(f) {
  var jsFunc, t1;
  jsFunc = P._convertDartFunction(f, true);
  t1 = new P.JsFunction(jsFunc);
  t1.JsObject$_fromJs$1(jsFunc);
  return t1;
}}
},

_convertToJS_closure: {"": "Closure;",
  call$1: function(o) {
    var jsFunction = P._convertDartFunction(o, false);
    P._defineProperty(jsFunction, "_$dart_dartClosure", o);
    return jsFunction;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_convertToJS_closure0: {"": "Closure;",
  call$1: function(o) {
    return new DartObject(o);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_convertToDart_closure: {"": "Closure;",
  call$1: function(o) {
    var t1 = new P.JsFunction(o);
    t1.JsObject$_fromJs$1(o);
    return t1;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_convertToDart_closure0: {"": "Closure;",
  call$1: function(o) {
    return P.JsObject$_fromJs(o);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["dart.math", "dart:math", , P, {
_JenkinsSmiHash_combine0: function(hash, value) {
  hash = 536870911 & C.JSInt_methods.$add(hash, value);
  hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
  return (hash ^ C.JSInt_methods.$shr(hash, 6)) >>> 0;
},

_JenkinsSmiHash_finish0: function(hash) {
  hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash = (hash ^ C.JSInt_methods.$shr(hash, 11)) >>> 0;
  return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
},

_RectangleBase: {"": "Object;",
  toString$0: function(_) {
    return "Rectangle (" + H.S(this.get$left(this)) + ", " + H.S(this.get$top(this)) + ") " + H.S(this.get$width(this)) + " x " + H.S(this.get$height(this));
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor$x(other);
    if (typeof other !== "object" || other === null || !t1.$isRectangle)
      return false;
    this.get$left(this);
    t1.get$left(other);
    return false;
  },
  get$hashCode: function(_) {
    var t1, t2, t3, t4;
    t1 = J.get$hashCode$(this.get$left(this));
    t2 = J.get$hashCode$(this.get$top(this));
    t3 = J.get$hashCode$(this.get$width(this));
    t4 = J.get$hashCode$(this.get$height(this));
    return P._JenkinsSmiHash_finish0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2), t3), t4));
  }
},

Rectangle: {"": "_RectangleBase;left>,top>,width>,height>", $isRectangle: true, $asRectangle: null}}],
["dart.typed_data", "dart:typed_data", , P, {
TypedData_ListMixin: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

TypedData_ListMixin_FixedLengthListMixin: {"": "TypedData_ListMixin+FixedLengthListMixin;", $asList: null, $asIterable: null},

TypedData_ListMixin0: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

TypedData_ListMixin_FixedLengthListMixin0: {"": "TypedData_ListMixin0+FixedLengthListMixin;", $asList: null, $asIterable: null},

TypedData_ListMixin1: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

TypedData_ListMixin_FixedLengthListMixin1: {"": "TypedData_ListMixin1+FixedLengthListMixin;", $asList: null, $asIterable: null},

TypedData_ListMixin2: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

TypedData_ListMixin_FixedLengthListMixin2: {"": "TypedData_ListMixin2+FixedLengthListMixin;", $asList: null, $asIterable: null},

TypedData_ListMixin3: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

TypedData_ListMixin_FixedLengthListMixin3: {"": "TypedData_ListMixin3+FixedLengthListMixin;", $asList: null, $asIterable: null},

TypedData_ListMixin4: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

TypedData_ListMixin_FixedLengthListMixin4: {"": "TypedData_ListMixin4+FixedLengthListMixin;", $asList: null, $asIterable: null},

TypedData_ListMixin5: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

TypedData_ListMixin_FixedLengthListMixin5: {"": "TypedData_ListMixin5+FixedLengthListMixin;", $asList: null, $asIterable: null},

TypedData_ListMixin6: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

TypedData_ListMixin_FixedLengthListMixin6: {"": "TypedData_ListMixin6+FixedLengthListMixin;", $asList: null, $asIterable: null},

TypedData_ListMixin7: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true, $isIterable: true, $asIterable: null},

TypedData_ListMixin_FixedLengthListMixin7: {"": "TypedData_ListMixin7+FixedLengthListMixin;", $asList: null, $asIterable: null},

Int64List: {"": "TypedData;", $isList: true,
  $asList: function() {
    return [J.JSInt];
  },
  $isEfficientLength: true,
  $isIterable: true,
  $asIterable: function() {
    return [J.JSInt];
  },
  $isJavaScriptIndexingBehavior: true,
  static: {
"": "Int64List_BYTES_PER_ELEMENT",
}

},

Uint64List: {"": "TypedData;", $isList: true,
  $asList: function() {
    return [J.JSInt];
  },
  $isEfficientLength: true,
  $isIterable: true,
  $asIterable: function() {
    return [J.JSInt];
  },
  $isJavaScriptIndexingBehavior: true,
  static: {
"": "Uint64List_BYTES_PER_ELEMENT",
}

},

TypedData: {"": "Interceptor;",
  _invalidIndex$2: function(receiver, index, $length) {
    var t1 = J.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$ge(index, $length))
      throw H.wrapException(P.RangeError$range(index, 0, $length));
    else
      throw H.wrapException(P.ArgumentError$("Invalid list index " + H.S(index)));
  },
  $isTypedData: true,
  "%": "DataView;ArrayBufferView;TypedData_ListMixin|TypedData_ListMixin_FixedLengthListMixin|TypedData_ListMixin0|TypedData_ListMixin_FixedLengthListMixin0|TypedData_ListMixin1|TypedData_ListMixin_FixedLengthListMixin1|TypedData_ListMixin2|TypedData_ListMixin_FixedLengthListMixin2|TypedData_ListMixin3|TypedData_ListMixin_FixedLengthListMixin3|TypedData_ListMixin4|TypedData_ListMixin_FixedLengthListMixin4|TypedData_ListMixin5|TypedData_ListMixin_FixedLengthListMixin5|TypedData_ListMixin6|TypedData_ListMixin_FixedLengthListMixin6|TypedData_ListMixin7|TypedData_ListMixin_FixedLengthListMixin7|Int64List|Uint64List"
},

Float32List: {"": "TypedData_ListMixin_FixedLengthListMixin;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSDouble];
  },
  $asIterable: function() {
    return [J.JSDouble];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Float32Array"
},

Float64List: {"": "TypedData_ListMixin_FixedLengthListMixin0;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSDouble];
  },
  $asIterable: function() {
    return [J.JSDouble];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Float64Array"
},

Int16List: {"": "TypedData_ListMixin_FixedLengthListMixin1;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $asIterable: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Int16Array"
},

Int32List: {"": "TypedData_ListMixin_FixedLengthListMixin2;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $asIterable: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Int32Array"
},

Int8List: {"": "TypedData_ListMixin_FixedLengthListMixin3;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $asIterable: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Int8Array"
},

Uint16List: {"": "TypedData_ListMixin_FixedLengthListMixin4;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $asIterable: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Uint16Array"
},

Uint32List: {"": "TypedData_ListMixin_FixedLengthListMixin5;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $asIterable: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Uint32Array"
},

Uint8ClampedList: {"": "TypedData_ListMixin_FixedLengthListMixin6;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $asIterable: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "CanvasPixelArray|Uint8ClampedArray"
},

Uint8List: {"": "TypedData_ListMixin_FixedLengthListMixin7;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $asIterable: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isIterable: true,
  $isJavaScriptIndexingBehavior: true,
  "%": ";Uint8Array"
}}],
["folderComponent", "_from_packages/ams/views/main/menu-folder.dart", , D, {
MenuFolder: {"": "WebComponent_Observable0;_folderComponent$_css,__e15,__e17,_folderComponent$__t,ini<,_folderComponent$__$data,hostClasses,hostAttributes,$$_observers,$$_changes,hashCode,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, t2, __binding14;
    __root = this.createShadowRoot$1(this, "folder-item");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["folder-item", "[is=\"folder-item\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._folderComponent$_css = this._mapper;
    this._folderComponent$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$MenuFolder___shadowTemplate(), true));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e15 = t2[1];
    __binding14 = this._folderComponent$__t.contentBind$2(new D.MenuFolder_created_autogenerated_closure(this), false);
    t2 = J.get$nodes$x(this.__e15);
    t2.addAll$1(t2, [J.clone$1$x($.get$MenuFolder___html1(), true), __binding14]);
    this._folderComponent$__t.listen$2(J.get$onClick$x(this.__e15), new D.MenuFolder_created_autogenerated_closure0(this));
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t1.length)
      throw H.ioore(t1, 3);
    t1 = J.get$nodes$x(t1[3])._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    this.__e17 = t1[1];
    t1 = this._folderComponent$__t;
    t2 = this.__e17;
    t1.children.push(new V.ConditionalTemplate(false, new D.MenuFolder_created_autogenerated_closure1(this), new D.MenuFolder_created_autogenerated_closure2(this), null, t2, [], []));
    this._folderComponent$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._folderComponent$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._folderComponent$__t;
    t1.remove$0(t1);
    this.__e17 = null;
    this.__e15 = null;
    this._folderComponent$__t = null;
  },
  get$data: function(_) {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "data");
    return this._folderComponent$__$data;
  },
  set$data: function(_, value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "data", this._folderComponent$__$data, value);
    this._folderComponent$__$data = value;
  },
  init$0: function() {
    var t1 = this._host;
    if (t1 == null)
      H.throwExpression(new P.StateError("host element has not been set."));
    t1 = J.get$classes$x(t1);
    t1.add$1(t1, this.hostClasses);
    t1 = this.hostAttributes;
    t1.forEach$1(t1, new D.MenuFolder_init_closure(this));
  },
  open$0: function(_) {
    var t1;
    J.set$id$x(J.querySelector$1$x(this.get$host(this), "ul"), "elToOpen");
    J.set$id$x(J.querySelector$1$x(this.get$host(this), "i"), "icontochange");
    t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1(P.JsFunction_JsFunction$withThis(new D.MenuFolder_open_closure()));
    J.set$id$x(J.querySelector$1$x(this.get$host(this), "i"), "");
    J.set$id$x(J.querySelector$1$x(this.get$host(this), "ul"), "");
  },
  toggle$0: function() {
    J.set$id$x(J.querySelector$1$x(this.get$host(this), "ul"), "elToOpen");
    J.set$id$x(J.querySelector$1$x(this.get$host(this), "i"), "icontochange");
    var t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1(P.JsFunction_JsFunction$withThis(new D.MenuFolder_toggle_closure()));
    J.set$id$x(J.querySelector$1$x(this.get$host(this), "i"), "");
    J.set$id$x(J.querySelector$1$x(this.get$host(this), "ul"), "");
  },
  addAccount$0: function() {
    var t1, t2, t3;
    t1 = $.get$Controller__singleton();
    t2 = J.toString$0(J.get$id$x(J.get$data$x(J.get$first$ax(J.get$reversed$ax($.get$Controller__singleton().data.get$folder())))));
    t3 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t3;
    t3 = new D.AddAccountComponent(null, null, null, null, null, null, null, null, null, null, null, null, null, true, t2, null, null, null, "8", true, true, true, false, false, null, null, t3, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    P.print(t3.get$selectedFolder());
    t3.set$selectedFolder(J.toString$0(J.get$id$x(this.get$data(this))));
    t1.pageComp.loadePage$1(t3);
  },
  static: {
"": "MenuFolder___html1,MenuFolder___html2,MenuFolder___shadowTemplate",
}

},

WebComponent_Observable0: {"": "WebComponent+Observable;$$_observers@,$$_changes@,hashCode>", $isObservable: true},

MenuFolder_created_autogenerated_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    return J.get$name$x(t1.get$data(t1));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

MenuFolder_created_autogenerated_closure0: {"": "Closure;this_1",
  call$1: function($$event) {
    this.this_1.toggle$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

MenuFolder_created_autogenerated_closure2: {"": "Closure;this_2",
  call$0: function() {
    var t1 = this.this_2;
    return J.$eq(t1.get$data(t1).get$count(), 0);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

MenuFolder_created_autogenerated_closure1: {"": "Closure;this_3",
  call$1: function(__t) {
    var __e16 = J.clone$1$x($.get$MenuFolder___html2(), true);
    __t.listen$2(J.get$onClick$x(__e16), new D.MenuFolder_created_autogenerated__closure(this.this_3));
    J.addAll$1$ax(__t, [document.createTextNode("\n          "), __e16, document.createTextNode("\n          ")]);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

MenuFolder_created_autogenerated__closure: {"": "Closure;this_4",
  call$1: function($$event) {
    this.this_4.addAccount$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

MenuFolder_init_closure: {"": "Closure;this_0",
  call$2: function(k, v) {
    var t1 = this.this_0._host;
    if (t1 == null)
      H.throwExpression(new P.StateError("host element has not been set."));
    J.get$attributes$x(t1)._element.setAttribute(k, v);
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

MenuFolder_open_closure: {"": "Closure;",
  call$1: function(jquery) {
    var t1 = $.get$context();
    J.show$1$x(t1.$index(t1, "jQuery").call$1("#elToOpen"), "fast");
    t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1("#icontochange").removeClass$1("icon-folder");
    t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1("#icontochange").addClass$1("icon-folder-2");
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

MenuFolder_toggle_closure: {"": "Closure;",
  call$1: function(jquery) {
    var t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1("#elToOpen").toggle$1("fast");
    t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1("#icontochange").toggleClass$1("icon-folder icon-folder-2");
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["folderOverview", "_from_packages/ams/views/page/folder-overview.dart", , F, {
FolderOverview: {"": "WebPage;_folderOverview$_css,_folderOverview$__t,ini<,Controller0$WebPage$ini,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root = this.createShadowRoot$1(this, "folder-overview");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["folder-overview", "[is=\"folder-overview\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._folderOverview$_css = this._mapper;
    this._folderOverview$__t = new V.Template(__root, [], []);
    J.get$nodes$x(__root)._this.appendChild(J.clone$1$x($.get$FolderOverview___shadowTemplate(), true));
    this._folderOverview$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._folderOverview$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._folderOverview$__t;
    t1.remove$0(t1);
    this._folderOverview$__t = null;
  },
  getPageUrl$0: function() {
    return $.FolderOverview_pageUrl;
  },
  init$0: function() {
    J.forEach$1$ax(J.get$reversed$ax($.get$Controller__singleton().data.get$folder()), new F.FolderOverview_init_closure());
  },
  static: {
"": "FolderOverview___shadowTemplate,FolderOverview_pageUrl",
}

},

FolderOverview_init_closure: {"": "Closure;",
  call$1: function(e) {
    var host, ul, t1, folderElement;
    host = document.createElement("li", null);
    J.set$id$x(host, C.JSString_methods.$add("folder", J.toString$0(J.get$id$x(J.get$data$x(e)))));
    ul = document.querySelector(".page-region ul");
    t1 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t1;
    folderElement = new E.FolderOverviewElement(null, null, null, null, null, true, e, false, false, null, null, t1, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    folderElement.set$host(folderElement, host);
    E.addComponent(ul, folderElement, null, null);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["folderOverviewElement", "_from_packages/ams/views/page/elements/folder-overview-element.dart", , E, {
FolderOverviewElement: {"": "WebComponent_Observable1;_folderOverviewElement$_css,__e51,__e52,__e54,_folderOverviewElement$__t,ini<,_folderOverviewElement$__$folder,isremove,isSelected?,$$_observers,$$_changes,hashCode,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, t2, __binding50, __binding53;
    __root = this.createShadowRoot$1(this, "folder-overview-element");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["folder-overview-element", "[is=\"folder-overview-element\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._folderOverviewElement$_css = this._mapper;
    this._folderOverviewElement$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$FolderOverviewElement___shadowTemplate(), true));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (0 >= t2.length)
      throw H.ioore(t2, 0);
    this.__e51 = t2[0];
    __binding50 = this._folderOverviewElement$__t.contentBind$2(new E.FolderOverviewElement_created_autogenerated_closure(this), false);
    J.get$nodes$x(this.__e51)._this.appendChild(__binding50);
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e52 = t2[1];
    this._folderOverviewElement$__t.listen$2(J.get$onClick$x(this.__e52), new E.FolderOverviewElement_created_autogenerated_closure0(this));
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t1.length)
      throw H.ioore(t1, 3);
    t1 = J.get$nodes$x(t1[3])._this.childNodes;
    if (3 >= t1.length)
      throw H.ioore(t1, 3);
    this.__e54 = t1[3];
    __binding53 = this._folderOverviewElement$__t.contentBind$2(new E.FolderOverviewElement_created_autogenerated_closure1(this), false);
    t1 = J.get$nodes$x(this.__e54);
    t1.addAll$1(t1, [__binding53, document.createTextNode(" Accounts")]);
    this._folderOverviewElement$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._folderOverviewElement$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._folderOverviewElement$__t;
    t1.remove$0(t1);
    this.__e54 = null;
    this.__e52 = null;
    this.__e51 = null;
    this._folderOverviewElement$__t = null;
  },
  get$folder: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "folder");
    return this._folderOverviewElement$__$folder;
  },
  set$folder: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "folder", this._folderOverviewElement$__$folder, value);
    this._folderOverviewElement$__$folder = value;
  },
  init$0: function() {
    var t1, t2;
    t1 = this._host;
    if (t1 == null)
      H.throwExpression(new P.StateError("host element has not been set."));
    t1 = J.get$onClick$x(t1);
    t2 = this.get$open(this);
    t2 = new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(t2), t1._useCapture);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
    t2._tryResume$0();
  },
  open$1: function(_, e) {
    var t1, t2, t3;
    if (!this.isSelected && !this.isremove) {
      J.open$0$x(this.get$folder());
      if (J.$eq(J.get$data$x(this.get$folder()).get$count(), 0)) {
        t1 = $.get$Controller__singleton();
        t2 = J.toString$0(J.get$id$x(J.get$data$x(J.get$first$ax(J.get$reversed$ax($.get$Controller__singleton().data.get$folder())))));
        t3 = $.Observable_$_nextHashCode + 1;
        $.Observable_$_nextHashCode = t3;
        t3 = new D.AddAccountComponent(null, null, null, null, null, null, null, null, null, null, null, null, null, true, t2, null, null, null, "8", true, true, true, false, false, null, null, t3, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        P.print(t3.get$selectedFolder());
        t3.set$selectedFolder(J.toString$0(J.get$id$x(J.get$data$x(this.get$folder()))));
        t1.pageComp.loadePage$1(t3);
      } else {
        t1 = $.get$Controller__singleton();
        t2 = G.AccountOverview$(J.get$id$x(J.get$data$x(this.get$folder())));
        t1.pageComp.loadePage$1(t2);
      }
    }
    this.isSelected = false;
    this.isremove = false;
  },
  get$open: function(_receiver) {
    return new M.BoundClosure$i1(this, E.FolderOverviewElement.prototype.open$1, _receiver, "open$1");
  },
  delete$0: function() {
    var dialog, t1;
    this.isremove = true;
    dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Warning..!", "content", "Are you sure to delete the folder and its accounts?", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["No", H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "Yes", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new E.FolderOverviewElement_delete_closure(this))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").Dialog$1(dialog);
  },
  static: {
"": "FolderOverviewElement___shadowTemplate",
}

},

WebComponent_Observable1: {"": "WebComponent+Observable;$$_observers@,$$_changes@,hashCode>", $isObservable: true},

FolderOverviewElement_created_autogenerated_closure: {"": "Closure;this_0",
  call$0: function() {
    return J.get$name$x(J.get$data$x(this.this_0.get$folder()));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

FolderOverviewElement_created_autogenerated_closure0: {"": "Closure;this_1",
  call$1: function($$event) {
    this.this_1.delete$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

FolderOverviewElement_created_autogenerated_closure1: {"": "Closure;this_2",
  call$0: function() {
    return J.get$data$x(this.this_2.get$folder()).get$count();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

FolderOverviewElement_delete_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2, t3, t4;
    $.get$Controller__singleton().removeFolder$1(this.this_0.get$folder());
    t1 = $.get$Controller__singleton();
    t2 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t3 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t4 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t1.pageComp.loadePage$1(new F.FolderOverview(null, null, true, null, null, null, t2, new F.ScopedCssMapper(t3), null, null, t4));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
}}],
["header", "_from_packages/ams/views/main/header.dart", , Q, {
HeaderComponent: {"": "WebComponent_Observable2;_header$_css,__e13,__e10,__e12,__e7,__e9,_header$__t,ini<,_header$__$webAppHeadline,_header$__$controller,_header$__$givenName,$$_observers,$$_changes,hashCode,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, t2, __binding6, __binding8, t3;
    __root = this.createShadowRoot$1(this, "app-header");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["app-header", "[is=\"app-header\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._header$_css = this._mapper;
    this._header$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$HeaderComponent___shadowTemplate(), true));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e7 = t2[1];
    __binding6 = this._header$__t.contentBind$2(new Q.HeaderComponent_created_autogenerated_closure(this), false);
    J.get$nodes$x(this.__e7)._this.appendChild(__binding6);
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    this.__e9 = t2[3];
    __binding8 = this._header$__t.contentBind$2(new Q.HeaderComponent_created_autogenerated_closure0(this), false);
    J.get$nodes$x(this.__e9)._this.appendChild(__binding8);
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e10 = t2[1];
    t2 = this._header$__t;
    t3 = this.__e10;
    t2.children.push(new V.ConditionalTemplate(false, new Q.HeaderComponent_created_autogenerated_closure1(), new Q.HeaderComponent_created_autogenerated_closure2(this), null, t3, [], []));
    t3 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t3.length)
      throw H.ioore(t3, 1);
    t3 = J.get$nodes$x(t3[1])._this.childNodes;
    if (1 >= t3.length)
      throw H.ioore(t3, 1);
    t3 = J.get$nodes$x(t3[1])._this.childNodes;
    if (1 >= t3.length)
      throw H.ioore(t3, 1);
    t3 = J.get$nodes$x(t3[1])._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    t3 = J.get$nodes$x(t3[3])._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    this.__e12 = t3[3];
    t3 = this._header$__t;
    t2 = this.__e12;
    t3.children.push(new V.ConditionalTemplate(false, new Q.HeaderComponent_created_autogenerated_closure3(this), new Q.HeaderComponent_created_autogenerated_closure4(this), null, t2, [], []));
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    t1 = J.get$nodes$x(t1[1])._this.childNodes;
    if (5 >= t1.length)
      throw H.ioore(t1, 5);
    this.__e13 = t1[5];
    this._header$__t.listen$2(J.get$onClick$x(this.__e13), new Q.HeaderComponent_created_autogenerated_closure5(this));
    this._header$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._header$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._header$__t;
    t1.remove$0(t1);
    this.__e13 = null;
    this.__e12 = null;
    this.__e10 = null;
    this.__e9 = null;
    this.__e7 = null;
    this._header$__t = null;
  },
  get$controller: function(_) {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "controller");
    return this._header$__$controller;
  },
  open$0: function(_) {
    $.get$Controller__singleton().pageComp.toString;
    window.history.back();
  },
  static: {
"": "HeaderComponent___html1,HeaderComponent___html2,HeaderComponent___shadowTemplate",
}

},

WebComponent_Observable2: {"": "WebComponent+Observable;$$_observers@,$$_changes@,hashCode>", $isObservable: true},

HeaderComponent_created_autogenerated_closure: {"": "Closure;this_1",
  call$0: function() {
    var t1 = this.this_1;
    return t1.get$controller(t1).data.get$user().get$givenName();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

HeaderComponent_created_autogenerated_closure0: {"": "Closure;this_2",
  call$0: function() {
    var t1 = this.this_2;
    return t1.get$controller(t1).data.get$user().get$familyName();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

HeaderComponent_created_autogenerated_closure2: {"": "Closure;this_3",
  call$0: function() {
    var t1 = this.this_3;
    return t1.get$controller(t1).data.get$user().get$pictureLink().length === 0;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

HeaderComponent_created_autogenerated_closure1: {"": "Closure;",
  call$1: function(__t) {
    J.addAll$1$ax(__t, [document.createTextNode("\n          "), J.clone$1$x($.get$HeaderComponent___html1(), true), document.createTextNode("\n            ")]);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

HeaderComponent_created_autogenerated_closure4: {"": "Closure;this_4",
  call$0: function() {
    var t1 = this.this_4;
    return t1.get$controller(t1).data.get$user().get$pictureLink().length !== 0;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

HeaderComponent_created_autogenerated_closure3: {"": "Closure;this_5",
  call$1: function(__t) {
    var t1 = {};
    t1.__e11_0 = null;
    t1.__e11_0 = J.clone$1$x($.get$HeaderComponent___html2(), true);
    __t.oneWayBind$4(new Q.HeaderComponent_created_autogenerated__closure(this.this_5), new Q.HeaderComponent_created_autogenerated__closure0(t1), false, true);
    J.addAll$1$ax(__t, [document.createTextNode("\n          "), t1.__e11_0, document.createTextNode("\n          ")]);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

HeaderComponent_created_autogenerated__closure: {"": "Closure;this_6",
  call$0: function() {
    var t1 = this.this_6;
    return t1.get$controller(t1).data.get$user().get$pictureLink();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

HeaderComponent_created_autogenerated__closure0: {"": "Closure;box_0",
  call$1: function(e) {
    var t1 = this.box_0;
    if (!J.$eq(J.get$src$x(t1.__e11_0), e))
      J.set$src$x(t1.__e11_0, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

HeaderComponent_created_autogenerated_closure5: {"": "Closure;this_7",
  call$1: function($$event) {
    $.get$Controller__singleton().pageComp.toString;
    window.history.back();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["html_common", "dart:html_common", , P, {
convertNativeToDart_Dictionary: function(object) {
  var dict, keys, t1, key;
  if (object == null)
    return;
  dict = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
  keys = Object.getOwnPropertyNames(object);
  for (t1 = new H.ListIterator(keys, keys.length, 0, null); t1.moveNext$0();) {
    key = t1._dev$_current;
    dict.$indexSet(dict, key, object[key]);
  }
  return dict;
},

convertNativeToDart_DateTime: function(date) {
  return P.DateTime$fromMillisecondsSinceEpoch(date.getTime(), true);
},

convertNativeToDart_AcceptStructuredClone: function(object, mustCopy) {
  var copies = [];
  return new P.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new P.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new P.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new P.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
},

Device_isOpera: function() {
  if ($.Device__isOpera == null)
    $.Device__isOpera = J.contains$2$asx(window.navigator.userAgent, "Opera", 0);
  return $.Device__isOpera;
},

Device_isWebKit: function() {
  if ($.Device__isWebKit == null)
    $.Device__isWebKit = P.Device_isOpera() !== true && J.contains$2$asx(window.navigator.userAgent, "WebKit", 0);
  return $.Device__isWebKit;
},

convertNativeToDart_AcceptStructuredClone_findSlot: {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_0;
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    t1.push(value);
    this.copies_1.push(null);
    return $length;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

convertNativeToDart_AcceptStructuredClone_readSlot: {"": "Closure;copies_2",
  call$1: function(i) {
    var t1 = this.copies_2;
    if (i >>> 0 !== i || i >= t1.length)
      throw H.ioore(t1, i);
    return t1[i];
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

convertNativeToDart_AcceptStructuredClone_writeSlot: {"": "Closure;copies_3",
  call$2: function(i, x) {
    var t1 = this.copies_3;
    if (i >>> 0 !== i || i >= t1.length)
      throw H.ioore(t1, i);
    t1[i] = x;
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

convertNativeToDart_AcceptStructuredClone_walk: {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, key, $length, t2, i;
    if (e == null)
      return e;
    if (typeof e === "boolean")
      return e;
    if (typeof e === "number")
      return e;
    if (typeof e === "string")
      return e;
    if (e instanceof Date)
      return P.convertNativeToDart_DateTime(e);
    if (e instanceof RegExp)
      throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = Object.keys(e), t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
        key = t1._dev$_current;
        copy.$indexSet(copy, key, this.call$1(e[key]));
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      t1 = J.getInterceptor$asx(e);
      $length = t1.get$length(e);
      copy = this.mustCopy_4 ? new Array($length) : e;
      this.writeSlot_7.call$2(slot, copy);
      if (typeof $length !== "number")
        throw H.iae($length);
      t2 = J.getInterceptor$ax(copy);
      i = 0;
      for (; i < $length; ++i)
        t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
      return copy;
    }
    return e;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

CssClassSetImpl: {"": "Object;",
  toString$0: function(_) {
    var t1 = this.readClasses$0();
    return t1.join$1(t1, " ");
  },
  toggle$2: function(value, shouldAdd) {
    var s, result;
    s = this.readClasses$0();
    if (!s.contains$1(s, value) === true) {
      s.add$1(s, value);
      result = true;
    } else {
      s.remove$1(s, value);
      result = false;
    }
    this.writeClasses$1(s);
    return result;
  },
  toggle$1: function(value) {
    return this.toggle$2(value, null);
  },
  get$iterator: function(_) {
    var t1 = this.readClasses$0();
    t1 = new P.LinkedHashSetIterator(t1, t1._modifications, null, null);
    t1._cell = t1._set._first;
    return t1;
  },
  forEach$1: function(_, f) {
    var t1 = this.readClasses$0();
    t1.forEach$1(t1, f);
  },
  map$1: function(_, f) {
    var t1 = this.readClasses$0();
    return H.MappedIterable_MappedIterable(t1, f, H.getRuntimeTypeArgument(t1, "IterableBase", 0), null);
  },
  get$isEmpty: function(_) {
    return this.readClasses$0()._collection$_length === 0;
  },
  get$isNotEmpty: function(_) {
    return this.readClasses$0()._collection$_length !== 0;
  },
  get$length: function(_) {
    return this.readClasses$0()._collection$_length;
  },
  lookup$1: function(value) {
    var t1 = this.readClasses$0();
    return t1.contains$1(t1, value) ? value : null;
  },
  add$1: function(_, value) {
    return this.modify$1(new P.CssClassSetImpl_add_closure(value));
  },
  remove$1: function(_, value) {
    var s, result;
    if (typeof value !== "string")
      return false;
    s = this.readClasses$0();
    result = s.remove$1(s, value);
    this.writeClasses$1(s);
    return result;
  },
  addAll$1: function(_, iterable) {
    this.modify$1(new P.CssClassSetImpl_addAll_closure(iterable));
  },
  get$last: function(_) {
    var t1 = this.readClasses$0()._last;
    if (t1 == null)
      H.throwExpression(new P.StateError("No elements"));
    return t1.get$_collection$_element();
  },
  toList$1$growable: function(_, growable) {
    var t1 = this.readClasses$0();
    return t1.toList$1$growable(t1, growable);
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  firstWhere$2$orElse: function(_, test, orElse) {
    var t1 = this.readClasses$0();
    return t1.firstWhere$2$orElse(t1, test, orElse);
  },
  firstWhere$1: function($receiver, test) {
    return this.firstWhere$2$orElse($receiver, test, null);
  },
  elementAt$1: function(_, index) {
    var t1 = this.readClasses$0();
    return t1.elementAt$1(t1, index);
  },
  modify$1: function(f) {
    var s, ret;
    s = this.readClasses$0();
    ret = f.call$1(s);
    this.writeClasses$1(s);
    return ret;
  },
  $isEfficientLength: true,
  $isIterable: true,
  $asIterable: function() {
    return [J.JSString];
  }
},

CssClassSetImpl_add_closure: {"": "Closure;value_0",
  call$1: function(s) {
    return J.add$1$ax(s, this.value_0);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

CssClassSetImpl_addAll_closure: {"": "Closure;iterable_0",
  call$1: function(s) {
    return J.addAll$1$ax(s, this.iterable_0);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

FilteredElementList: {"": "ListBase;_node,_childNodes",
  get$_filtered: function() {
    var t1 = this._childNodes;
    return P.List_List$from(t1.where$1(t1, new P.FilteredElementList__filtered_closure()), true, W.Element);
  },
  forEach$1: function(_, f) {
    H.IterableMixinWorkaround_forEach(this.get$_filtered(), f);
  },
  $indexSet: function(_, index, value) {
    var t1 = this.get$_filtered();
    if (index >>> 0 !== index || index >= t1.length)
      throw H.ioore(t1, index);
    J.replaceWith$1$x(t1[index], value);
  },
  set$length: function(_, newLength) {
    var len = this.get$_filtered().length;
    if (newLength >= len)
      return;
    else if (newLength < 0)
      throw H.wrapException(new P.ArgumentError("Invalid list length"));
    this.removeRange$2(this, newLength, len);
  },
  add$1: function(_, value) {
    this._childNodes._this.appendChild(value);
  },
  addAll$1: function(_, iterable) {
    var t1, t2;
    for (t1 = J.get$iterator$ax(iterable), t2 = this._childNodes._this; t1.moveNext$0();)
      t2.appendChild(t1.get$current());
  },
  get$reversed: function(_) {
    var t1 = new H.ReversedListIterable(this.get$_filtered());
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  sort$1: function(_, compare) {
    throw H.wrapException(P.UnsupportedError$("Cannot sort filtered list"));
  },
  setRange$4: function(_, start, end, iterable, skipCount) {
    throw H.wrapException(P.UnsupportedError$("Cannot setRange on filtered list"));
  },
  removeRange$2: function(_, start, end) {
    H.IterableMixinWorkaround_forEach(C.JSArray_methods.sublist$2(this.get$_filtered(), start, end), new P.FilteredElementList_removeRange_closure());
  },
  clear$0: function(_) {
    this._childNodes._this.textContent = "";
  },
  remove$1: function(_, element) {
    var t1, i, indexElement;
    t1 = J.getInterceptor(element);
    if (typeof element !== "object" || element === null || !t1.$isElement)
      return false;
    for (i = 0; i < this.get$_filtered().length; ++i) {
      t1 = this.get$_filtered();
      if (i >= t1.length)
        throw H.ioore(t1, i);
      indexElement = t1[i];
      if (indexElement === element) {
        J.remove$0$ax(indexElement);
        return true;
      }
    }
    return false;
  },
  get$length: function(_) {
    return this.get$_filtered().length;
  },
  $index: function(_, index) {
    var t1 = this.get$_filtered();
    if (index >>> 0 !== index || index >= t1.length)
      throw H.ioore(t1, index);
    return t1[index];
  },
  get$iterator: function(_) {
    var t1 = this.get$_filtered();
    return new H.ListIterator(t1, t1.length, 0, null);
  },
  $asListBase: null,
  $asList: null,
  $asIterable: null
},

FilteredElementList__filtered_closure: {"": "Closure;",
  call$1: function(n) {
    var t1 = J.getInterceptor(n);
    return typeof n === "object" && n !== null && !!t1.$isElement;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

FilteredElementList_removeRange_closure: {"": "Closure;",
  call$1: function(el) {
    return J.remove$0$ax(el);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["index_html", "main.dart", , S, {
main: function() {
  var controller, token;
  controller = $.get$Controller__singleton();
  token = E.readCookie("token");
  if (token != null && token.length !== 0 && token !== "null") {
    controller.data.get$user().token = E.readCookie("token");
    controller.loginUserAtServer$0();
  }
  controller.toString;
  P.print("hallo");
  P.print("hallo2");
},

init_autogenerated: function() {
  var __root, __t, t1, t2;
  __root = $.get$webUIRoot();
  __t = new V.Template(__root, [], []);
  __root.toString;
  t1 = new W._ChildNodeListLazy(__root)._this.childNodes;
  if (1 >= t1.length)
    throw H.ioore(t1, 1);
  t1 = J.get$nodes$x(t1[1])._this.childNodes;
  if (1 >= t1.length)
    throw H.ioore(t1, 1);
  t2 = new Y.StartPage(null, null, null, false, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
  t2.set$host(t2, t1[1]);
  __t.children.push(new V.ComponentItem(t2));
  __t.create$0();
  __t.insert$0(__t);
}}],
["linked_list", "package:web_ui/src/linked_list.dart", , L, {
LinkedListNode: {"": "Object;_linked_list$_previous,_linked_list$_next,_list,_linked_list$_value",
  get$next: function() {
    return this._linked_list$_next;
  },
  get$value: function(_) {
    return this._linked_list$_value;
  },
  _link$2: function(p, n) {
    this._linked_list$_next = n;
    this._linked_list$_previous = p;
    if (p != null)
      p._linked_list$_next = this;
    if (n != null)
      n._linked_list$_previous = this;
    return this;
  },
  append$1: function(_, e) {
    var t1, t2;
    t1 = this._list;
    t1 = new L.LinkedListNode(null, null, t1, e);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "LinkedListNode", 0)]);
    t2 = t1._list;
    if (t2 != null)
      t2._linked_list$_length = t2._linked_list$_length + 1;
    return t1._link$2(this, this._linked_list$_next);
  },
  remove$0: function(_) {
    var t1, t2;
    t1 = this._list;
    if (t1 == null)
      return;
    t1._linked_list$_length = t1._linked_list$_length - 1;
    t1 = this._linked_list$_previous;
    t2 = this._linked_list$_next;
    if (t1 != null)
      t1._linked_list$_next = t2;
    else
      this._list._linked_list$_head = t2;
    t1 = this._linked_list$_next;
    t2 = this._linked_list$_previous;
    if (t1 != null)
      t1._linked_list$_previous = t2;
    else
      this._list._linked_list$_tail = t2;
    this._linked_list$_next = null;
    this._linked_list$_previous = null;
    this._list = null;
  },
  get$remove: function(_receiver) {
    return new H.BoundClosure$i0(this, L.LinkedListNode.prototype.remove$0, _receiver, "remove$0");
  },
  $isLinkedListNode: true
},

LinkedList: {"": "IterableBase;_linked_list$_head,_linked_list$_tail,_linked_list$_length",
  get$length: function(_) {
    return this._linked_list$_length;
  },
  add$1: function(_, e) {
    var node, t1;
    node = new L.LinkedListNode(null, null, this, e);
    H.setRuntimeTypeInfo(node, [H.getRuntimeTypeArgument(this, "LinkedList", 0)]);
    t1 = node._list;
    if (t1 != null)
      t1._linked_list$_length = t1._linked_list$_length + 1;
    t1 = this._linked_list$_tail;
    if (t1 == null) {
      this._linked_list$_tail = node;
      this._linked_list$_head = node;
      return node;
    }
    t1 = node._link$2(t1, null);
    this._linked_list$_tail = t1;
    return t1;
  },
  get$add: function(_receiver) {
    return new M.BoundClosure$i1(this, L.LinkedList.prototype.add$1, _receiver, "add$1");
  },
  addAll$1: function(_, e) {
    return H.IterableMixinWorkaround_forEach(e, this.get$add(this));
  },
  get$iterator: function(_) {
    return L.LinkedListIterator$(this);
  },
  $asIterableBase: null,
  $asIterable: null
},

LinkedListIterator: {"": "Object;_copy,_list,_linked_list$_current,_pos",
  get$current: function() {
    return this._linked_list$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3, t4, t5;
    do {
      this._pos = this._pos + 1;
      t1 = this._pos;
      t2 = this._copy;
      t3 = t2.length;
      t4 = t1 < t3;
      if (t4) {
        if (t1 >>> 0 !== t1 || t1 >= t3)
          throw H.ioore(t2, t1);
        t5 = t2[t1]._list !== this._list;
      } else
        t5 = false;
    } while (t5);
    if (t4) {
      if (t1 >>> 0 !== t1 || t1 >= t3)
        throw H.ioore(t2, t1);
      this._linked_list$_current = t2[t1]._linked_list$_value;
      return true;
    } else {
      this._linked_list$_current = null;
      return false;
    }
  },
  LinkedListIterator$1: function(_list) {
    var t1, node, i, i0;
    t1 = P.List_List(this._list._linked_list$_length, L.LinkedListNode);
    H.setRuntimeTypeInfo(t1, [L.LinkedListNode]);
    this._copy = t1;
    node = this._list._linked_list$_head;
    for (t1 = this._copy, i = 0; node != null; i = i0) {
      i0 = i + 1;
      if (i >= t1.length)
        throw H.ioore(t1, i);
      t1[i] = node;
      node = node._linked_list$_next;
    }
  },
  static: {
LinkedListIterator$: function(_list) {
  var t1 = new L.LinkedListIterator(null, _list, null, -1);
  t1.LinkedListIterator$1(_list);
  return t1;
}}

}}],
["logging", "package:logging/logging.dart", , N, {
Logger: {"": "Object;name>,parent>,_level,_children>,children>,_logging$_controller",
  get$fullName: function() {
    var t1, t2, t3;
    t1 = this.parent;
    t2 = t1 == null || J.$eq(J.get$name$x(t1), "");
    t3 = this.name;
    return t2 ? t3 : t1.get$fullName() + "." + t3;
  },
  get$level: function() {
    if ($.hierarchicalLoggingEnabled) {
      var t1 = this.parent;
      if (t1 != null)
        return t1.get$level();
    }
    return $._rootLevel;
  },
  log$4: function(logLevel, message, error, stackTrace) {
    var t1, t2, t3, record, target;
    if (logLevel.value >= this.get$level().value) {
      t1 = this.get$fullName();
      t2 = P.DateTime$_now();
      t3 = $.LogRecord__nextNumber;
      $.LogRecord__nextNumber = t3 + 1;
      record = new N.LogRecord(logLevel, message, t1, t2, t3, error, stackTrace);
      if ($.hierarchicalLoggingEnabled)
        for (target = this; target != null;) {
          target._publish$1(record);
          target = J.get$parent$x(target);
        }
      else
        N.Logger_Logger("")._publish$1(record);
    }
  },
  info$3: function(message, error, stackTrace) {
    return this.log$4(C.Level_INFO_800, message, error, stackTrace);
  },
  info$1: function(message) {
    return this.info$3(message, null, null);
  },
  warning$3: function(message, error, stackTrace) {
    return this.log$4(C.Level_WARNING_900, message, error, stackTrace);
  },
  warning$1: function(message) {
    return this.warning$3(message, null, null);
  },
  _publish$1: function(record) {
  },
  Logger$_internal$3: function($name, $parent, children) {
    var t1 = this.parent;
    if (t1 != null) {
      t1 = J.get$_children$x(t1);
      t1.$indexSet(t1, this.name, this);
    }
  },
  $isLogger: true,
  static: {
"": "Logger__loggers",
Logger_Logger: function($name) {
  return $.get$Logger__loggers().putIfAbsent$2($name, new N.Logger_Logger_closure($name));
},

Logger_Logger$_named: function($name) {
  var dot, $parent, thisName;
  if (C.JSString_methods.startsWith$1($name, "."))
    throw H.wrapException(new P.ArgumentError("name shouldn't start with a '.'"));
  dot = C.JSString_methods.lastIndexOf$1($name, ".");
  if (dot === -1) {
    $parent = $name !== "" ? N.Logger_Logger("") : null;
    thisName = $name;
  } else {
    $parent = N.Logger_Logger(C.JSString_methods.substring$2($name, 0, dot));
    thisName = C.JSString_methods.substring$1($name, dot + 1);
  }
  return N.Logger$_internal(thisName, $parent, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, N.Logger));
},

Logger$_internal: function($name, $parent, children) {
  var t1 = new F.UnmodifiableMapView(children);
  H.setRuntimeTypeInfo(t1, [null, null]);
  t1 = new N.Logger($name, $parent, null, children, t1, null);
  t1.Logger$_internal$3($name, $parent, children);
  return t1;
}}

},

Logger_Logger_closure: {"": "Closure;name_0",
  call$0: function() {
    return N.Logger_Logger$_named(this.name_0);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Level: {"": "Object;name>,value>",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$isLevel && this.value === other.value;
  },
  $lt: function(_, other) {
    return C.JSInt_methods.$lt(this.value, C.JSInt_methods.get$value(other));
  },
  $gt: function(_, other) {
    var t1 = J.get$value$x(other);
    if (typeof t1 !== "number")
      throw H.iae(t1);
    return this.value > t1;
  },
  $ge: function(_, other) {
    return this.value >= J.get$value$x(other);
  },
  compareTo$1: function(_, other) {
    var t1 = J.get$value$x(other);
    if (typeof t1 !== "number")
      throw H.iae(t1);
    return this.value - t1;
  },
  get$hashCode: function(_) {
    return this.value;
  },
  toString$0: function(_) {
    return this.name;
  },
  $isLevel: true,
  static: {
"": "Level_ALL,Level_OFF,Level_FINEST,Level_FINER,Level_FINE,Level_CONFIG,Level_INFO,Level_WARNING,Level_SEVERE,Level_SHOUT",
}

},

LogRecord: {"": "Object;level<,message,loggerName,time,sequenceNumber,error>,stackTrace<",
  toString$0: function(_) {
    return "[" + this.level.name + "] " + this.loggerName + ": " + this.message;
  },
  static: {
"": "LogRecord__nextNumber",
}

}}],
["menu", "_from_packages/ams/views/main/menu.dart", , A, {
MenuComponent: {"": "WebComponent;_menu$_css,__e4,__e1,__e2,__e3,__e5,_menu$__t,ini<,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, t2;
    __root = this.createShadowRoot$1(this, "menu-section");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["menu-section", "[is=\"menu-section\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._menu$_css = this._mapper;
    this._menu$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$MenuComponent___shadowTemplate(), true));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e1 = t2[1];
    this._menu$__t.listen$2(J.get$onClick$x(this.__e1), new A.MenuComponent_created_autogenerated_closure(this));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    this.__e2 = t2[3];
    this._menu$__t.listen$2(J.get$onClick$x(this.__e2), new A.MenuComponent_created_autogenerated_closure0(this));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (5 >= t2.length)
      throw H.ioore(t2, 5);
    this.__e3 = t2[5];
    this._menu$__t.listen$2(J.get$onClick$x(this.__e3), new A.MenuComponent_created_autogenerated_closure1(this));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (5 >= t2.length)
      throw H.ioore(t2, 5);
    t2 = J.get$nodes$x(t2[5])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    this.__e4 = t2[3];
    this._menu$__t.listen$2(J.get$onClick$x(this.__e4), new A.MenuComponent_created_autogenerated_closure2(this));
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (7 >= t1.length)
      throw H.ioore(t1, 7);
    t1 = J.get$nodes$x(t1[7])._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    this.__e5 = t1[1];
    this._menu$__t.listen$2(J.get$onClick$x(this.__e5), new A.MenuComponent_created_autogenerated_closure3(this));
    this._menu$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._menu$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._menu$__t;
    t1.remove$0(t1);
    this.__e5 = null;
    this.__e4 = null;
    this.__e3 = null;
    this.__e2 = null;
    this.__e1 = null;
    this._menu$__t = null;
  },
  addFolder$0: function() {
    var textField, t1;
    textField = document.querySelector("#folderName");
    t1 = J.getInterceptor$x(textField);
    if (!J.$eq(t1.get$value(textField), ""))
      E.sendJson("folder", "POST", C.JSString_methods.$add("{\"foldername\":\"", t1.get$value(textField)) + "\"}", this.get$requestCompleded(), false);
  },
  requestCompleded$1: function(request) {
    var parsedData = C.C_JsonCodec.parse$1(J.get$response$x(request));
    $.get$Controller__singleton().addFolder$1(parsedData);
  },
  get$requestCompleded: function() {
    return new B.BoundClosure$1(this, A.MenuComponent.prototype.requestCompleded$1, null, "requestCompleded$1");
  },
  static: {
"": "MenuComponent___shadowTemplate",
}

},

MenuComponent_created_autogenerated_closure: {"": "Closure;this_0",
  call$1: function($$event) {
    var t1, t2, t3;
    t1 = $.get$Controller__singleton();
    t2 = J.toString$0(J.get$id$x(J.get$data$x(J.get$first$ax(J.get$reversed$ax($.get$Controller__singleton().data.get$folder())))));
    t3 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t3;
    t3 = new D.AddAccountComponent(null, null, null, null, null, null, null, null, null, null, null, null, null, true, t2, null, null, null, "8", true, true, true, false, false, null, null, t3, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    P.print(t3.get$selectedFolder());
    t1.pageComp.loadePage$1(t3);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

MenuComponent_created_autogenerated_closure0: {"": "Closure;this_1",
  call$1: function($$event) {
    var t1, t2, t3, t4;
    t1 = $.get$Controller__singleton();
    t2 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t3 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t4 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t1.pageComp.loadePage$1(new F.FolderOverview(null, null, true, null, null, null, t2, new F.ScopedCssMapper(t3), null, null, t4));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

MenuComponent_created_autogenerated_closure1: {"": "Closure;this_2",
  call$1: function($$event) {
    $.get$Controller__singleton().logout$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

MenuComponent_created_autogenerated_closure2: {"": "Closure;this_3",
  call$1: function($$event) {
    this.this_3.addFolder$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

MenuComponent_created_autogenerated_closure3: {"": "Closure;this_4",
  call$1: function($$event) {
    var t1, t2, t3, t4, t5;
    t1 = $.get$Controller__singleton();
    t2 = $.Observable_$_nextHashCode + 1;
    $.Observable_$_nextHashCode = t2;
    t3 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t4 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t5 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    t1.pageComp.loadePage$1(new A.ShowSettingsComponent(null, null, null, null, null, null, true, "", "", "", null, null, t2, null, null, null, t3, new F.ScopedCssMapper(t4), null, null, t5));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["page_controller", "_from_packages/ams/views/main/page-controller.dart", , D, {
PageComponent: {"": "WebComponent;_page_controller$_css,_page_controller$__t,contentPage,titel,pathToPages,ini<,statePushed,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root = this.createShadowRoot$1(this, "page-section");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["page-section", "[is=\"page-section\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._page_controller$_css = this._mapper;
    this._page_controller$__t = new V.Template(__root, [], []);
    J.get$nodes$x(__root)._this.appendChild(J.clone$1$x($.get$PageComponent___shadowTemplate(), true));
    this._page_controller$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._page_controller$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._page_controller$__t;
    t1.remove$0(t1);
    this._page_controller$__t = null;
  },
  loadePage$1: function(page) {
    var t1, t2;
    page.set$host(page, document.createElement("div", null));
    E.addComponent(document.querySelector(this.contentPage), page, true, null);
    this.statePushed = true;
    t1 = $.get$context();
    J.compareTo$1$ns(J.get$hash$x(t1.$index(t1, "History").getState$0()), "/");
    t1 = $.get$context();
    t2 = this.pathToPages;
    J.pushState$3$x(t1.$index(t1, "History"), P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["url", t2 + page.getPageUrl$0()], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), this.titel, "https://localhost:8443/" + t2 + page.getPageUrl$0());
  },
  reset$0: function(_) {
    var t1 = $.get$context();
    J.pushState$3$x(t1.$index(t1, "History"), P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["url", "/"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), this.titel, "/");
  },
  getPage$1$path: function(path) {
    var t1, t2, page, t3;
    t1 = {};
    t1.path_0 = path;
    t2 = t1.path_0;
    if (t2 == null)
      t1.path_0 = J.trim$0$s(J.get$pathname$x(C.Window_methods.get$location(window))).split("/");
    else
      t1.path_0 = J.split$1$s(J.trim$0$s(t2), "/");
    t2 = t1.path_0;
    if (0 >= t2.length)
      throw H.ioore(t2, 0);
    if (J.compareTo$1$ns(t2[0], "") === 0)
      J.removeAt$1$ax(t1.path_0, 0);
    if (J.contains$1$asx(t1.path_0, "pages")) {
      t2 = t1.path_0;
      if (1 >= t2.length)
        throw H.ioore(t2, 1);
      page = t2[1];
    } else
      page = null;
    if (page != null) {
      t2 = J.getInterceptor$ns(page);
      if (t2.compareTo$1(page, $.AccountOverview_pageUrl) === 0) {
        t1 = t1.path_0;
        if (2 >= t1.length)
          throw H.ioore(t1, 2);
        return G.AccountOverview$(H.Primitives_parseInt(t1[2], null, null));
      }
      if (t2.compareTo$1(page, $.AddAccountComponent_pageUrl) === 0) {
        t1 = J.toString$0(J.get$id$x(J.get$data$x(J.get$first$ax(J.get$reversed$ax($.get$Controller__singleton().data.get$folder())))));
        t2 = $.Observable_$_nextHashCode + 1;
        $.Observable_$_nextHashCode = t2;
        t2 = new D.AddAccountComponent(null, null, null, null, null, null, null, null, null, null, null, null, null, true, t1, null, null, null, "8", true, true, true, false, false, null, null, t2, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        P.print(t2.get$selectedFolder());
        return t2;
      }
      if (t2.compareTo$1(page, $.FolderOverview_pageUrl) === 0)
        return new F.FolderOverview(null, null, true, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      if (t2.compareTo$1(page, $.ShowAccountComponent_pageUrl) === 0) {
        t2 = J.toString$0(J.get$id$x(J.get$data$x(J.get$first$ax(J.get$reversed$ax($.get$Controller__singleton().data.get$folder())))));
        t3 = $.Observable_$_nextHashCode + 1;
        $.Observable_$_nextHashCode = t3;
        t3 = new B.ShowAccountComponent(null, null, null, null, null, null, null, null, null, null, false, null, "*******", t2, null, null, t3, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t3.set$data(t3, J.get$data$x(J.firstWhere$1$ax($.get$Controller__singleton().data.get$account(), new D.PageComponent_getPage_closure(t1))));
        return t3;
      }
      if (t2.compareTo$1(page, $.ShowSettingsComponent_pageUrl) === 0) {
        t1 = $.Observable_$_nextHashCode + 1;
        $.Observable_$_nextHashCode = t1;
        return new A.ShowSettingsComponent(null, null, null, null, null, null, true, "", "", "", null, null, t1, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      }
    }
    return new F.FolderOverview(null, null, true, null, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
  },
  getPage$0: function() {
    return this.getPage$1$path(null);
  },
  PageComponent$0: function() {
    var t1, t2;
    $.get$Controller__singleton().pageComp = this;
    t1 = $.get$context();
    t1 = t1.$index(t1, "History").get$Adapter();
    t2 = $.get$context();
    t1.bind$3(t2.$index(t2, "window"), "statechange", P.JsObject_JsObject$fromBrowserObject(new D.PageComponent_closure(this)));
  },
  static: {
"": "PageComponent___shadowTemplate",
PageComponent$: function() {
  var t1 = new D.PageComponent(null, null, "#mainPageRegion", "password4u", "pages/", false, false, null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new F.ScopedCssMapper(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))), null, null, H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
  t1.PageComponent$0();
  return t1;
}}

},

PageComponent_closure: {"": "Closure;this_0",
  call$1: function(_) {
    var t1, t2, page;
    t1 = this.this_0;
    if (!t1.statePushed) {
      t2 = $.get$context();
      page = t1.getPage$1$path(J.get$url$x(J.get$data$x(t2.$index(t2, "History").getState$0())));
      page.set$host(page, document.createElement("div", null));
      E.addComponent(document.querySelector(t1.contentPage), page, true, null);
    }
    t1.statePushed = false;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

PageComponent_getPage_closure: {"": "Closure;box_0",
  call$1: function(e) {
    var t1, t2;
    t1 = J.get$id$x(J.get$data$x(e));
    t2 = this.box_0.path_0;
    if (2 >= t2.length)
      throw H.ioore(t2, 2);
    return J.$eq(t1, H.Primitives_parseInt(t2[2], null, null));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["showaccount", "_from_packages/ams/views/page/show-account.dart", , B, {
ShowAccountComponent: {"": "WebPage_Observable1;_showaccount$_css,__e42,__e43,__e44,__e49,__e46,__e48,__e38,__e41,_showaccount$__t,ini<,_showaccount$__$data,pw<,_showaccount$__$selectedFolder,$$_observers,$$_changes,hashCode,Controller0$WebPage$ini,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, t2, __binding37, t3, __binding45, __binding47;
    __root = this.createShadowRoot$1(this, "show-account");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["show-account", "[is=\"show-account\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._showaccount$_css = this._mapper;
    this._showaccount$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$ShowAccountComponent___shadowTemplate(), true));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e38 = t2[1];
    __binding37 = this._showaccount$__t.contentBind$2(new B.ShowAccountComponent_created_autogenerated_closure(this), false);
    J.get$nodes$x(this.__e38)._this.appendChild(__binding37);
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e41 = t2[1];
    this._showaccount$__t.listen$2(J.get$onChange$x(this.__e41), new B.ShowAccountComponent_created_autogenerated_closure0(this));
    t2 = this._showaccount$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t3 = true;
    } else
      t3 = false;
    t3 = t3 ? $.get$readCurrentStackTrace().call$0() : null;
    t2.push(new V.DomPropertyBinding(new B.ShowAccountComponent_created_autogenerated_closure1(this), false, new B.ShowAccountComponent_created_autogenerated_closure2(this), false, t3, null));
    t3 = this._showaccount$__t;
    t2 = this.__e41;
    t3.children.push(new V.LoopTemplateInAttribute(new B.ShowAccountComponent_created_autogenerated_closure3(), new B.ShowAccountComponent_created_autogenerated_closure4(this), null, t2, [], []));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    this.__e42 = t2[3];
    this._showaccount$__t.listen$2(J.get$onClick$x(this.__e42), new B.ShowAccountComponent_created_autogenerated_closure5(this));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (5 >= t2.length)
      throw H.ioore(t2, 5);
    this.__e43 = t2[5];
    this._showaccount$__t.listen$2(J.get$onClick$x(this.__e43), new B.ShowAccountComponent_created_autogenerated_closure6(this));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (7 >= t2.length)
      throw H.ioore(t2, 7);
    this.__e44 = t2[7];
    this._showaccount$__t.listen$2(J.get$onClick$x(this.__e44), new B.ShowAccountComponent_created_autogenerated_closure7(this));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (5 >= t2.length)
      throw H.ioore(t2, 5);
    t2 = J.get$nodes$x(t2[5])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    this.__e46 = t2[3];
    __binding45 = this._showaccount$__t.contentBind$2(new B.ShowAccountComponent_created_autogenerated_closure8(this), false);
    J.get$nodes$x(this.__e46)._this.appendChild(__binding45);
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (5 >= t2.length)
      throw H.ioore(t2, 5);
    t2 = J.get$nodes$x(t2[5])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    this.__e48 = t2[3];
    __binding47 = this._showaccount$__t.contentBind$2(new B.ShowAccountComponent_created_autogenerated_closure9(this), false);
    J.get$nodes$x(this.__e48)._this.appendChild(__binding47);
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (5 >= t1.length)
      throw H.ioore(t1, 5);
    t1 = J.get$nodes$x(t1[5])._this.childNodes;
    if (5 >= t1.length)
      throw H.ioore(t1, 5);
    t1 = J.get$nodes$x(t1[5])._this.childNodes;
    if (5 >= t1.length)
      throw H.ioore(t1, 5);
    this.__e49 = t1[5];
    this._showaccount$__t.listen$2(J.get$onClick$x(this.__e49), new B.ShowAccountComponent_created_autogenerated_closure10(this));
    this._showaccount$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._showaccount$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._showaccount$__t;
    t1.remove$0(t1);
    this.__e49 = null;
    this.__e48 = null;
    this.__e46 = null;
    this.__e44 = null;
    this.__e43 = null;
    this.__e42 = null;
    this.__e41 = null;
    this.__e38 = null;
    this._showaccount$__t = null;
  },
  get$data: function(_) {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "data");
    return this._showaccount$__$data;
  },
  set$data: function(_, value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "data", this._showaccount$__$data, value);
    this._showaccount$__$data = value;
  },
  get$selectedFolder: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "selectedFolder");
    return this._showaccount$__$selectedFolder;
  },
  set$selectedFolder: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "selectedFolder", this._showaccount$__$selectedFolder, value);
    this._showaccount$__$selectedFolder = value;
  },
  decryptPw$0: function() {
    var crypt, t1, t2;
    crypt = new B.Crypt(null, null);
    t1 = this.get$data(this).get$pw();
    t2 = this.get$showDecryptedPw();
    crypt.pw = t1;
    crypt.toCall = t2;
    crypt.openDialog$1(crypt.get$decryptPasswordReplayCallback());
  },
  showDecryptedPw$1: function(pwDecrypted) {
    var t1;
    J.set$innerHtml$x(document.querySelector("#pw"), J.toString$0(pwDecrypted));
    t1 = $.get$context();
    C.JSNull_methods.select$0(J.focus$0$x(t1.$index(t1, "jQuery").call$1("#pw")));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").call$1("#showAccountButton").hide$0();
  },
  get$showDecryptedPw: function() {
    return new B.BoundClosure$1(this, B.ShowAccountComponent.prototype.showDecryptedPw$1, null, "showDecryptedPw$1");
  },
  getPageUrl$0: function() {
    return C.JSString_methods.$add($.ShowAccountComponent_pageUrl + "/", J.toString$0(J.get$id$x(this.get$data(this))));
  },
  remove$0: function(_) {
    var dialog, t1;
    dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Warning..!", "content", "Are you sure to delete the account?", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["No", H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "Yes", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new B.ShowAccountComponent_remove_closure(this))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").Dialog$1(dialog);
  },
  move$0: function() {
    var dialog, t1;
    dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Warning..!", "content", "Are you sure to move the account?", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["No", H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "Yes", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new B.ShowAccountComponent_move_closure(this))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").Dialog$1(dialog);
  },
  rename$0: function() {
    var dialog, t1;
    dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Warning..!", "content", "Enter your new Accountname:<br><br><div class=\"input-control text\"><input autofocus=\"true\" id=\"accountname\" type=\"text\" /><button class=\"btn-clear\"></button></div>", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["No", H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "Yes", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new B.ShowAccountComponent_rename_closure(this))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1 = $.get$context();
    t1.$index(t1, "jQuery").Dialog$1(dialog);
  },
  static: {
"": "ShowAccountComponent___html1,ShowAccountComponent___shadowTemplate,ShowAccountComponent_pageUrl",
}

},

WebPage_Observable1: {"": "WebPage+Observable;$$_observers@,$$_changes@,hashCode>", $isObservable: true},

ShowAccountComponent_created_autogenerated_closure: {"": "Closure;this_1",
  call$0: function() {
    var t1 = this.this_1;
    return J.get$name$x(t1.get$data(t1));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowAccountComponent_created_autogenerated_closure0: {"": "Closure;this_2",
  call$1: function($$event) {
    var t1 = this.this_2;
    t1.set$selectedFolder(J.get$value$x(t1.__e41));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_created_autogenerated_closure2: {"": "Closure;this_3",
  call$0: function() {
    return this.this_3.get$selectedFolder();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowAccountComponent_created_autogenerated_closure1: {"": "Closure;this_4",
  call$1: function(e) {
    var t1 = this.this_4;
    if (!J.$eq(J.get$value$x(t1.__e41), e))
      J.set$value$x(t1.__e41, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_created_autogenerated_closure4: {"": "Closure;this_5",
  call$0: function() {
    return P.List_List$from(J.get$reversed$ax($.get$Controller__singleton().data.get$folder()), true, null);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowAccountComponent_created_autogenerated_closure3: {"": "Closure;",
  call$3: function($$list, $$index, __t) {
    var t1, folder, __binding39;
    t1 = {};
    folder = J.$index$asx($$list, $$index);
    t1.__e40_0 = null;
    t1.__e40_0 = $.get$ShowAccountComponent___html1().cloneNode(true);
    __binding39 = __t.contentBind$2(new B.ShowAccountComponent_created_autogenerated__closure(folder), false);
    J.get$nodes$x(t1.__e40_0)._this.appendChild(__binding39);
    __t.oneWayBind$4(new B.ShowAccountComponent_created_autogenerated__closure0(folder), new B.ShowAccountComponent_created_autogenerated__closure1(t1), false, false);
    J.addAll$1$ax(__t, [document.createTextNode("\n            "), t1.__e40_0, document.createTextNode("\n          ")]);
  },
  "+call:3:0": 0,
  $isFunction: true
},

ShowAccountComponent_created_autogenerated__closure: {"": "Closure;folder_6",
  call$0: function() {
    return J.get$name$x(J.get$data$x(this.folder_6));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowAccountComponent_created_autogenerated__closure0: {"": "Closure;folder_7",
  call$0: function() {
    return J.toString$0(J.get$id$x(J.get$data$x(this.folder_7)));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowAccountComponent_created_autogenerated__closure1: {"": "Closure;box_0",
  call$1: function(e) {
    var t1 = this.box_0;
    if (!J.$eq(J.get$value$x(t1.__e40_0), e))
      J.set$value$x(t1.__e40_0, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_created_autogenerated_closure5: {"": "Closure;this_8",
  call$1: function($$event) {
    this.this_8.move$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_created_autogenerated_closure6: {"": "Closure;this_9",
  call$1: function($$event) {
    var t1 = this.this_9;
    t1.remove$0(t1);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_created_autogenerated_closure7: {"": "Closure;this_10",
  call$1: function($$event) {
    this.this_10.rename$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_created_autogenerated_closure8: {"": "Closure;this_11",
  call$0: function() {
    var t1 = this.this_11;
    return t1.get$data(t1).get$login();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowAccountComponent_created_autogenerated_closure9: {"": "Closure;this_12",
  call$0: function() {
    return this.this_12.pw;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowAccountComponent_created_autogenerated_closure10: {"": "Closure;this_13",
  call$1: function($$event) {
    this.this_13.decryptPw$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_remove_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.get$Controller__singleton().removeAccount$2(J.firstWhere$1$ax($.get$Controller__singleton().data.get$account(), new B.ShowAccountComponent_remove__closure(t1)), J.get$data$x(J.firstWhere$1$ax($.get$Controller__singleton().data.get$folder(), new B.ShowAccountComponent_remove__closure0(t1))));
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowAccountComponent_remove__closure: {"": "Closure;this_1",
  call$1: function(e) {
    var t1 = this.this_1;
    return J.$eq(J.get$id$x(J.get$data$x(e)), J.get$id$x(t1.get$data(t1)));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_remove__closure0: {"": "Closure;this_2",
  call$1: function(e) {
    var t1 = this.this_2;
    return J.$eq(J.get$id$x(J.get$data$x(e)), t1.get$data(t1).get$folder());
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_move_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.get$Controller__singleton().moveAccount$3(J.firstWhere$1$ax($.get$Controller__singleton().data.get$account(), new B.ShowAccountComponent_move__closure(t1)), t1.get$selectedFolder(), J.get$data$x(J.firstWhere$1$ax($.get$Controller__singleton().data.get$folder(), new B.ShowAccountComponent_move__closure0(t1))));
    t1.remove$0(t1);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowAccountComponent_move__closure: {"": "Closure;this_1",
  call$1: function(e) {
    var t1 = this.this_1;
    return J.$eq(J.get$id$x(J.get$data$x(e)), J.get$id$x(t1.get$data(t1)));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_move__closure0: {"": "Closure;this_2",
  call$1: function(e) {
    var t1 = this.this_2;
    return J.$eq(J.get$id$x(J.get$data$x(e)), t1.get$data(t1).get$folder());
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowAccountComponent_rename_closure: {"": "Closure;this_0",
  call$0: function() {
    var accountname, t1, t2, t3;
    accountname = J.get$value$x(document.querySelector("#accountname"));
    t1 = $.get$Controller__singleton();
    t2 = this.this_0;
    t3 = t2.get$data(t2);
    J.set$name$x(t3, accountname);
    t1.updateAccount$1(t3);
    t2.remove$0(t2);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
}}],
["showsettings", "_from_packages/ams/views/page/show-settings.dart", , A, {
ShowSettingsComponent: {"": "WebPage_Observable2;_showsettings$_css,__e71,__e68,__e69,__e70,_showsettings$__t,ini<,_showsettings$__$newMPw,_showsettings$__$newMPw2,_showsettings$__$oldMPw,$$_observers,$$_changes,hashCode,Controller0$WebPage$ini,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1, t2, t3;
    __root = this.createShadowRoot$1(this, "show-s");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["show-s", "[is=\"show-s\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._showsettings$_css = this._mapper;
    this._showsettings$__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$ShowSettingsComponent___shadowTemplate(), true));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e68 = t2[1];
    this._showsettings$__t.listen$2(J.get$onInput$x(this.__e68), new A.ShowSettingsComponent_created_autogenerated_closure(this));
    t2 = this._showsettings$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t3 = true;
    } else
      t3 = false;
    t3 = t3 ? $.get$readCurrentStackTrace().call$0() : null;
    t2.push(new V.DomPropertyBinding(new A.ShowSettingsComponent_created_autogenerated_closure0(this), false, new A.ShowSettingsComponent_created_autogenerated_closure1(this), false, t3, null));
    t3 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    t3 = J.get$nodes$x(t3[3])._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    t3 = J.get$nodes$x(t3[3])._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    t3 = J.get$nodes$x(t3[3])._this.childNodes;
    if (3 >= t3.length)
      throw H.ioore(t3, 3);
    t3 = J.get$nodes$x(t3[3])._this.childNodes;
    if (1 >= t3.length)
      throw H.ioore(t3, 1);
    t3 = J.get$nodes$x(t3[1])._this.childNodes;
    if (1 >= t3.length)
      throw H.ioore(t3, 1);
    this.__e69 = t3[1];
    this._showsettings$__t.listen$2(J.get$onInput$x(this.__e69), new A.ShowSettingsComponent_created_autogenerated_closure2(this));
    t3 = this._showsettings$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t2 = true;
    } else
      t2 = false;
    t2 = t2 ? $.get$readCurrentStackTrace().call$0() : null;
    t3.push(new V.DomPropertyBinding(new A.ShowSettingsComponent_created_autogenerated_closure3(this), false, new A.ShowSettingsComponent_created_autogenerated_closure4(this), false, t2, null));
    t2 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (5 >= t2.length)
      throw H.ioore(t2, 5);
    t2 = J.get$nodes$x(t2[5])._this.childNodes;
    if (3 >= t2.length)
      throw H.ioore(t2, 3);
    t2 = J.get$nodes$x(t2[3])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2 = J.get$nodes$x(t2[1])._this.childNodes;
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    this.__e70 = t2[1];
    this._showsettings$__t.listen$2(J.get$onInput$x(this.__e70), new A.ShowSettingsComponent_created_autogenerated_closure5(this));
    t2 = this._showsettings$__t.children;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t3 = true;
    } else
      t3 = false;
    t3 = t3 ? $.get$readCurrentStackTrace().call$0() : null;
    t2.push(new V.DomPropertyBinding(new A.ShowSettingsComponent_created_autogenerated_closure6(this), false, new A.ShowSettingsComponent_created_autogenerated_closure7(this), false, t3, null));
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (3 >= t1.length)
      throw H.ioore(t1, 3);
    t1 = J.get$nodes$x(t1[3])._this.childNodes;
    if (3 >= t1.length)
      throw H.ioore(t1, 3);
    t1 = J.get$nodes$x(t1[3])._this.childNodes;
    if (7 >= t1.length)
      throw H.ioore(t1, 7);
    t1 = J.get$nodes$x(t1[7])._this.childNodes;
    if (5 >= t1.length)
      throw H.ioore(t1, 5);
    this.__e71 = t1[5];
    this._showsettings$__t.listen$2(J.get$onClick$x(this.__e71), new A.ShowSettingsComponent_created_autogenerated_closure8(this));
    this._showsettings$__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this._showsettings$__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this._showsettings$__t;
    t1.remove$0(t1);
    this.__e71 = null;
    this.__e70 = null;
    this.__e69 = null;
    this.__e68 = null;
    this._showsettings$__t = null;
  },
  getPageUrl$0: function() {
    return $.ShowSettingsComponent_pageUrl;
  },
  get$newMPw: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "newMPw");
    return this._showsettings$__$newMPw;
  },
  set$newMPw: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "newMPw", this._showsettings$__$newMPw, value);
    this._showsettings$__$newMPw = value;
  },
  get$newMPw2: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "newMPw2");
    return this._showsettings$__$newMPw2;
  },
  set$newMPw2: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "newMPw2", this._showsettings$__$newMPw2, value);
    this._showsettings$__$newMPw2 = value;
  },
  get$oldMPw: function() {
    var t1 = $._activeObserver;
    if (t1 != null)
      t1._addRead$3(this, 1, "oldMPw");
    return this._showsettings$__$oldMPw;
  },
  set$oldMPw: function(value) {
    var t1 = this.get$$$_observers();
    if (t1 != null && t1._linked_list$_head != null)
      T.notifyChange(this, 1, "oldMPw", this._showsettings$__$oldMPw, value);
    this._showsettings$__$oldMPw = value;
  },
  init$0: function() {
    var t1 = $.get$context();
    J.$index$asx(t1.$index(t1, "jQuery").call$0(), "Input").call$1(P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["initAll", true], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
  },
  savePw$0: function() {
    var crypt, oldHash, newHash, dialog, t1;
    if (J.get$isNotEmpty$asx(this.get$oldMPw()) && J.get$isNotEmpty$asx(this.get$newMPw())) {
      crypt = new B.Crypt(null, null);
      oldHash = E.hash(this.get$oldMPw());
      if (crypt.testMasterPw$1(oldHash) === true && J.compareTo$1$ns(this.get$newMPw(), this.get$newMPw2()) === 0) {
        newHash = E.hash(this.get$newMPw());
        crypt.sendMasterPw$1(newHash);
        J.forEach$1$ax($.get$Controller__singleton().data.get$account(), new A.ShowSettingsComponent_savePw_closure(crypt, oldHash, newHash));
        this.set$oldMPw("");
        this.set$newMPw("");
        this.set$newMPw2("");
        dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Success..!", "content", "Masterpassword changed.!.", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["Ok", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new A.ShowSettingsComponent_savePw_closure0())], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1 = $.get$context();
        t1.$index(t1, "jQuery").Dialog$1(dialog);
      } else {
        dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Error..!", "content", "Input does not match.!.", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["Ok", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new A.ShowSettingsComponent_savePw_closure1())], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1 = $.get$context();
        t1.$index(t1, "jQuery").Dialog$1(dialog);
      }
    } else {
      dialog = P.JsObject_JsObject$fromBrowserObject(H.fillLiteralMap(["title", "Error..!", "content", "Please fillout all Datafields.", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["Ok", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new A.ShowSettingsComponent_savePw_closure2())], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      t1 = $.get$context();
      t1.$index(t1, "jQuery").Dialog$1(dialog);
    }
  },
  static: {
"": "ShowSettingsComponent___shadowTemplate,ShowSettingsComponent_pageUrl",
}

},

WebPage_Observable2: {"": "WebPage+Observable;$$_observers@,$$_changes@,hashCode>", $isObservable: true},

ShowSettingsComponent_created_autogenerated_closure: {"": "Closure;this_0",
  call$1: function($$event) {
    var t1 = this.this_0;
    t1.set$oldMPw(J.get$value$x(t1.__e68));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowSettingsComponent_created_autogenerated_closure1: {"": "Closure;this_1",
  call$0: function() {
    return this.this_1.get$oldMPw();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowSettingsComponent_created_autogenerated_closure0: {"": "Closure;this_2",
  call$1: function(e) {
    var t1 = this.this_2;
    if (!J.$eq(J.get$value$x(t1.__e68), e))
      J.set$value$x(t1.__e68, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowSettingsComponent_created_autogenerated_closure2: {"": "Closure;this_3",
  call$1: function($$event) {
    var t1 = this.this_3;
    t1.set$newMPw(J.get$value$x(t1.__e69));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowSettingsComponent_created_autogenerated_closure4: {"": "Closure;this_4",
  call$0: function() {
    return this.this_4.get$newMPw();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowSettingsComponent_created_autogenerated_closure3: {"": "Closure;this_5",
  call$1: function(e) {
    var t1 = this.this_5;
    if (!J.$eq(J.get$value$x(t1.__e69), e))
      J.set$value$x(t1.__e69, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowSettingsComponent_created_autogenerated_closure5: {"": "Closure;this_6",
  call$1: function($$event) {
    var t1 = this.this_6;
    t1.set$newMPw2(J.get$value$x(t1.__e70));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowSettingsComponent_created_autogenerated_closure7: {"": "Closure;this_7",
  call$0: function() {
    return this.this_7.get$newMPw2();
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowSettingsComponent_created_autogenerated_closure6: {"": "Closure;this_8",
  call$1: function(e) {
    var t1 = this.this_8;
    if (!J.$eq(J.get$value$x(t1.__e70), e))
      J.set$value$x(t1.__e70, e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowSettingsComponent_created_autogenerated_closure8: {"": "Closure;this_9",
  call$1: function($$event) {
    this.this_9.savePw$0();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowSettingsComponent_savePw_closure: {"": "Closure;crypt_0,oldHash_1,newHash_2",
  call$1: function(account) {
    this.crypt_0.decrypt$2(this.oldHash_1, J.get$data$x(account).get$pw());
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ShowSettingsComponent_savePw_closure0: {"": "Closure;",
  call$0: function() {
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowSettingsComponent_savePw_closure1: {"": "Closure;",
  call$0: function() {
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

ShowSettingsComponent_savePw_closure2: {"": "Closure;",
  call$0: function() {
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
}}],
["start_page", "_from_packages/ams/views/main/start-page.dart", , Y, {
StartPage: {"": "WebComponent;_css,__e20,__t,ini<,_host,_shadowRoots,_generatedRoots,_mapper,_custom_element$_host,_custom_element$_shadowRoots,_custom_element$_generatedRoots",
  created_autogenerated$0: function() {
    var __root, t1;
    __root = this.createShadowRoot$1(this, "start-page");
    this._mapper = new F.ScopedCssMapper(H.fillLiteralMap(["start-page", "[is=\"start-page\"]"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    this._css = this._mapper;
    this.__t = new V.Template(__root, [], []);
    t1 = J.getInterceptor$x(__root);
    t1.get$nodes(__root)._this.appendChild(J.clone$1$x($.get$StartPage___shadowTemplate(), true));
    t1 = t1.get$nodes(__root)._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    t1 = J.get$nodes$x(t1[1])._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    t1 = J.get$nodes$x(t1[1])._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    t1 = J.get$nodes$x(t1[1])._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    t1 = J.get$nodes$x(t1[1])._this.childNodes;
    if (1 >= t1.length)
      throw H.ioore(t1, 1);
    this.__e20 = t1[1];
    this.__t.listen$2(J.get$onClick$x(this.__e20), new Y.StartPage_created_autogenerated_closure(this));
    this.__t.create$0();
  },
  inserted_autogenerated$0: function() {
    var t1 = this.__t;
    t1.insert$0(t1);
  },
  removed_autogenerated$0: function() {
    var t1 = this.__t;
    t1.remove$0(t1);
    this.__e20 = null;
    this.__t = null;
  },
  static: {
"": "StartPage___shadowTemplate",
}

},

StartPage_created_autogenerated_closure: {"": "Closure;this_0",
  call$1: function($$event) {
    var t1;
    $.get$Controller__singleton().toString;
    t1 = $.get$context();
    t1.$index(t1, "OAuth").redirect$2("google", "https://localhost:8443");
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["templating", "package:web_ui/templating.dart", , V, {
updateBinding: function(value, node, stringValue) {
  var t1, node0;
  t1 = J.getInterceptor(value);
  if (typeof value === "object" && value !== null && !!t1.$isNode) {
    J.replaceWith$1$x(node, value);
    return value;
  }
  if (stringValue == null)
    stringValue = t1.toString$0(value);
  t1 = J.getInterceptor(node);
  t1 = typeof node === "object" && node !== null && !!t1.$isText;
  if (t1)
    J.set$text$x(node, stringValue);
  else {
    node0 = document.createTextNode(stringValue);
    J.replaceWith$1$x(node, node0);
    node = node0;
  }
  return node;
},

sanitizeUri: function(uri) {
  uri = J.toString$0(uri);
  return V._isSafeUri(uri) ? uri : "#";
},

_isSafeUri: function(uri) {
  var scheme, t1;
  scheme = P.Uri$_fromMatch($.get$Uri__splitRe().firstMatch$1(uri)).scheme;
  t1 = J.getInterceptor(scheme);
  if (t1.$eq(scheme, ""))
    return true;
  return C.JSArray_methods.contains$1(C.List_http_https_ftp_mailto, t1.toLowerCase$0(scheme)) || "MAILTO" === t1.toUpperCase$0(scheme);
},

_NullTreeSanitizer: {"": "Object;",
  sanitizeTree$1: function(node) {
  }
},

TemplateItem: {"": "Object;",
  create$0: function() {
  }
},

Listener: {"": "TemplateItem;eventStream,_subscription,listener",
  insert$0: function(_) {
    var t1, t2;
    t1 = this.eventStream;
    t2 = new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.listener), t1._useCapture);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
    t2._tryResume$0();
    this._subscription = t2;
  },
  remove$0: function(_) {
    this._subscription.cancel$0();
    this._subscription = null;
  }
},

Binding: {"": "TemplateItem;",
  exp$0: function() {
    return this.exp.call$0();
  },
  stopper$0: function() {
    return this.stopper.call$0();
  },
  insert$0: function(_) {
    if (this.isFinal)
      this.invokeCallback$0();
    else if (this.stopper != null)
      throw H.wrapException(P.StateError$("binding already attached"));
    else
      this.stopper = this.registerAndInvoke$0();
  },
  remove$0: function(_) {
    if (!this.isFinal) {
      this.stopper$0();
      this.stopper = null;
    }
  }
},

GenericBinding: {"": "Binding;action,exp,isFinal,debugLocation,stopper",
  action$1: function($receiver, arg0) {
    return this.action.call$1(arg0);
  },
  invokeCallback$0: function() {
    return this.action$1(this, new T.ChangeNotification(null, this.exp$0(), null));
  },
  registerAndInvoke$0: function() {
    return Y.watchAndInvoke(this.exp, this.action, "generic-binding", this.debugLocation);
  }
},

DomPropertyBinding: {"": "Binding;setter,isUrl,exp,isFinal,debugLocation,stopper",
  setter$1: function(arg0) {
    return this.setter.call$1(arg0);
  },
  invokeCallback$0: function() {
    var t1 = this.exp$0();
    this.setter$1(this.isUrl ? V.sanitizeUri(t1) : t1);
    return;
  },
  registerAndInvoke$0: function() {
    return Y.watchAndInvoke(this.exp, new V.DomPropertyBinding_registerAndInvoke_closure(this), "dom-property-binding", this.debugLocation);
  }
},

DomPropertyBinding_registerAndInvoke_closure: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_0;
    t2 = J.get$newValue$x(e);
    t1.setter$1(t1.isUrl ? V.sanitizeUri(t2) : t2);
    return;
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

ComponentItem: {"": "TemplateItem;component",
  create$0: function() {
    var t1 = this.component;
    t1.created_autogenerated$0();
    t1.composeChildren$0();
  },
  insert$0: function(_) {
    this.component.inserted_autogenerated$0();
  },
  remove$0: function(_) {
    this.component.removed_autogenerated$0();
  }
},

Template: {"": "TemplateItem;node,children>,nodes>",
  listen$2: function(stream, listener) {
    this.children.push(new V.Listener(stream, null, new V.Template_listen_closure(listener)));
  },
  contentBind$2: function(exp, isFinal) {
    var t1, t2;
    t1 = {};
    t1.bindNode_0 = document.createTextNode("");
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t2 = true;
    } else
      t2 = false;
    t2 = t2 ? $.get$readCurrentStackTrace().call$0() : null;
    this.children.push(new V.GenericBinding(new V.Template_contentBind_closure(t1, exp), new V.Template_contentBind_closure0(exp), isFinal, t2, null));
    return t1.bindNode_0;
  },
  oneWayBind$4: function(exp, setter, isFinal, isUrl) {
    var t1;
    if ($.verboseDebugMessages) {
      $.get$readCurrentStackTrace();
      t1 = true;
    } else
      t1 = false;
    t1 = t1 ? $.get$readCurrentStackTrace().call$0() : null;
    this.children.push(new V.DomPropertyBinding(setter, isUrl, exp, isFinal, t1, null));
  },
  add$1: function(_, n) {
    return this.nodes.push(n);
  },
  addAll$1: function(_, list) {
    return C.JSArray_methods.addAll$1(this.nodes, list);
  },
  create$0: function() {
    var t1, len, i;
    for (t1 = this.children, len = t1.length, i = 0; i < len; ++i) {
      if (i >= t1.length)
        throw H.ioore(t1, i);
      t1[i].create$0();
    }
  },
  insert$0: function(_) {
    var t1, len, i;
    for (t1 = this.children, len = t1.length, i = 0; i < len; ++i) {
      if (i >= t1.length)
        throw H.ioore(t1, i);
      J.insert$0$ax(t1[i]);
    }
  },
  remove$0: function(_) {
    var t1, i;
    for (t1 = this.children, i = t1.length - 1; i >= 0; --i) {
      if (i >= t1.length)
        throw H.ioore(t1, i);
      J.remove$0$ax(t1[i]);
    }
    C.JSArray_methods.set$length(t1, 0);
  }
},

Template_listen_closure: {"": "Closure;listener_0",
  call$1: function(e) {
    this.listener_0.call$1(e);
    Y.dispatch();
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Template_contentBind_closure0: {"": "Closure;exp_1",
  call$0: function() {
    return H.S(this.exp_1.call$0());
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

Template_contentBind_closure: {"": "Closure;box_0,exp_2",
  call$1: function(e) {
    var t1 = this.box_0;
    t1.bindNode_0 = V.updateBinding(this.exp_2.call$0(), t1.bindNode_0, J.get$newValue$x(e));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

PlaceholderTemplate: {"": "Template;",
  stopper$0: function() {
    return this.stopper.call$0();
  },
  create$0: function() {
  },
  insert$0: function(_) {
    var t1, t2, t3, $parent, reference, len, i;
    V.Template.prototype.create$0.call(this);
    t1 = this.nodes;
    if (t1.length > 0) {
      t2 = this.node;
      t3 = J.getInterceptor$x(t2);
      $parent = t3.get$parentNode(t2);
      reference = t3.get$nextNode(t2);
      for (len = t1.length, t2 = J.getInterceptor$x($parent), i = 0; i < len; ++i) {
        if (i >= t1.length)
          throw H.ioore(t1, i);
        t2.insertBefore$2($parent, t1[i], reference);
      }
    }
    V.Template.prototype.insert$0.call(this, this);
  },
  remove$0: function(_) {
    var t1, i;
    V.Template.prototype.remove$0.call(this, this);
    for (t1 = this.nodes, i = t1.length - 1; i >= 0; --i) {
      if (i >= t1.length)
        throw H.ioore(t1, i);
      J.remove$0$ax(t1[i]);
    }
    C.JSArray_methods.set$length(t1, 0);
  }
},

ConditionalTemplate: {"": "PlaceholderTemplate;isVisible,bodySetup,exp,stopper,node,children,nodes",
  bodySetup$1: function(arg0) {
    return this.bodySetup.call$1(arg0);
  },
  insert$0: function(_) {
    this.stopper = Y.watchAndInvoke(this.exp, new V.ConditionalTemplate_insert_closure(this), "conditional-binding", null);
  },
  remove$0: function(_) {
    V.PlaceholderTemplate.prototype.remove$0.call(this, this);
    this.stopper$0();
    this.stopper = null;
  }
},

ConditionalTemplate_insert_closure: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.isVisible;
    if (!t2 && J.get$newValue$x(e) === true) {
      t1.bodySetup$1(t1);
      V.PlaceholderTemplate.prototype.insert$0.call(t1, t1);
      t1.isVisible = true;
    } else if (t2 && J.get$newValue$x(e) !== true) {
      V.PlaceholderTemplate.prototype.remove$0.call(t1, t1);
      t1.isVisible = false;
    }
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

LoopTemplateInAttribute: {"": "Template;iterSetup,exp,stopper,node,children,nodes",
  iterSetup$3: function(arg0, arg1, arg2) {
    return this.iterSetup.call$3(arg0, arg1, arg2);
  },
  stopper$0: function() {
    return this.stopper.call$0();
  },
  create$0: function() {
  },
  insert$0: function(_) {
    this.stopper = Y.watchAndInvoke(this.exp, new V.LoopTemplateInAttribute_insert_closure(this), "loop-attribute-binding", null);
  },
  _removeInternal$0: function() {
    V.Template.prototype.remove$0.call(this, this);
    J.get$nodes$x(this.node)._this.textContent = "";
    C.JSArray_methods.set$length(this.nodes, 0);
  },
  remove$0: function(_) {
    this._removeInternal$0();
    this.stopper$0();
    this.stopper = null;
  }
},

LoopTemplateInAttribute_insert_closure: {"": "Closure;this_0",
  call$1: function(e) {
    var t1, list, t2, i, t3;
    t1 = this.this_0;
    t1._removeInternal$0();
    list = J.get$newValue$x(e);
    t2 = J.getInterceptor$asx(list);
    i = 0;
    while (true) {
      t3 = t2.get$length(list);
      if (typeof t3 !== "number")
        throw H.iae(t3);
      if (!(i < t3))
        break;
      t1.iterSetup$3(list, i, t1);
      ++i;
    }
    V.Template.prototype.create$0.call(t1);
    t2 = J.get$nodes$x(t1.node);
    t2.addAll$1(t2, t1.nodes);
    V.Template.prototype.insert$0.call(t1, t1);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["unmodifiable_collection", "package:unmodifiable_collection/unmodifiable_collection.dart", , F, {
UnmodifiableMapView: {"": "Object;_source",
  get$length: function(_) {
    return this._source._collection$_length;
  },
  get$isEmpty: function(_) {
    return this._source._collection$_length === 0;
  },
  get$isNotEmpty: function(_) {
    return this._source._collection$_length !== 0;
  },
  $index: function(_, key) {
    var t1 = this._source;
    return t1.$index(t1, key);
  },
  containsKey$1: function(key) {
    return this._source.containsKey$1(key);
  },
  forEach$1: function(_, f) {
    var t1 = this._source;
    return t1.forEach$1(t1, f);
  },
  get$keys: function() {
    var t1, t2;
    t1 = this._source;
    t2 = new P.LinkedHashMapKeyIterable(t1);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_LinkedHashMap", 0)]);
    return t2;
  },
  get$values: function(_) {
    var t1 = this._source;
    return t1.get$values(t1);
  },
  $indexSet: function(_, key, value) {
    return F.UnmodifiableMapView__throw();
  },
  addAll$1: function(_, other) {
    return F.UnmodifiableMapView__throw();
  },
  remove$1: function(_, key) {
    F.UnmodifiableMapView__throw();
  },
  $isMap: true,
  static: {
UnmodifiableMapView__throw: function() {
  throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable Map"));
}}

}}],
["util", "_from_packages/ams/util/util.dart", , E, {
sendJson: function(path, methode, data, succ, fullPathSet) {
  var request, t1, t2;
  path = E.createUrl(path, fullPathSet);
  request = new XMLHttpRequest();
  C.HttpRequest_methods.open$2(request, methode, path);
  request.setRequestHeader("Content-type", "application/json");
  request.send(data);
  t1 = new W._EventStream(request, C.EventStreamProvider_readystatechange._eventType, false);
  H.setRuntimeTypeInfo(t1, [null]);
  t2 = new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(new E.sendJson_closure(succ, request)), t1._useCapture);
  H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
  t2._tryResume$0();
},

handelFail: function($status) {
  P.Timer_Timer(C.Duration_0, new E.handelFail_closure($status));
},

createUrl: function(path, fullPathSet) {
  var t1;
  path = !fullPathSet ? C.JSString_methods.$add("api/user/" + C.JSNull_methods.toString$0($.get$Controller__singleton().data.get$user().id) + "/" + path + "/", $.get$Controller__singleton().data.get$user().token) : C.JSString_methods.$add(path + "/", $.get$Controller__singleton().data.get$user().token);
  t1 = H.JSSyntaxRegExp_makeNative("//", false, true, false);
  return "https://localhost:8443/" + H.stringReplaceAllUnchecked(path, new H.JSSyntaxRegExp(t1, null, null), "/");
},

sendRequest: function(path, methode, succ, fullPathSet, requestFailed) {
  var dialog, t1, request, t2;
  path = E.createUrl(path, fullPathSet);
  dialog = H.fillLiteralMap(["title", "", "content", "<img style=\"margin-top:20px;margin-left:20px\"src=\"style/metro/images/preloader-w8-cycle-black.gif\">", "draggable", false, "empty", true, "buttons", H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
  t1 = $.get$context();
  t1.$index(t1, "jQuery").Dialog$1(P.JsObject_JsObject$fromBrowserObject(dialog));
  request = new XMLHttpRequest();
  C.HttpRequest_methods.open$2(request, methode, path);
  request.send();
  t1 = new W._EventStream(request, C.EventStreamProvider_readystatechange._eventType, false);
  H.setRuntimeTypeInfo(t1, [null]);
  t2 = new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(new E.sendRequest_closure(succ, requestFailed, request)), t1._useCapture);
  H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
  t2._tryResume$0();
},

addComponent: function(identifyer, component, clear, follower) {
  var lifecycleCaller, t1, t2;
  if (clear != null && clear === true)
    J.clear$0$ax(J.get$children$x(identifyer));
  lifecycleCaller = new V.ComponentItem(component);
  lifecycleCaller.create$0();
  if (follower != null) {
    t1 = component._host;
    if (t1 == null)
      H.throwExpression(P.StateError$("host element has not been set."));
    J.insertBefore$2$x(identifyer, t1, J.get$host$x(follower));
  } else {
    t1 = J.get$children$x(identifyer);
    t2 = component._host;
    if (t2 == null)
      H.throwExpression(P.StateError$("host element has not been set."));
    J.add$1$ax(t1, t2);
  }
  lifecycleCaller.component.inserted_autogenerated$0();
  if (component.get$ini() === true)
    component.init$0();
},

moveParkedElements: function() {
  var elm = P.List_List(null, null);
  J.forEach$1$ax(J.get$children$x(document.querySelector("#placeholderElements")), new E.moveParkedElements_closure(elm));
  H.IterableMixinWorkaround_forEach(elm, new E.moveParkedElements_closure0());
},

hash: function(str) {
  var sha = M.SHA256$();
  sha.add$1(sha, J.get$codeUnits$s(str));
  return E.digestToString(sha.close$0(sha));
},

digestToString: function(digest) {
  var t1, buf, part, t2, t3;
  for (t1 = new H.ListIterator(digest, digest.length, 0, null), buf = ""; t1.moveNext$0();) {
    part = t1._dev$_current;
    t2 = J.getInterceptor$n(part);
    t3 = t2.$lt(part, 16) ? "0" : "";
    buf += t3 + t2.toRadixString$1(part, 16).toLowerCase();
  }
  return buf;
},

readCookie: function($name) {
  var nameEQ, ca, i, c;
  nameEQ = $name + "=";
  ca = document.cookie.split(";");
  for (i = 0; i < ca.length; ++i) {
    c = J.trim$0$s(ca[i]);
    if (C.JSString_methods.indexOf$1(c, nameEQ) === 0)
      return C.JSString_methods.substring$2(c, nameEQ.length, c.length);
  }
  return;
},

createCookie: function($name, value, days) {
  document.cookie = $name + "=" + value + "" + "; path=/";
},

sendJson_closure: {"": "Closure;succ_0,request_1",
  call$1: function(_) {
    var t1, t2;
    t1 = this.request_1;
    t2 = t1.readyState;
    if (t2 == null ? 4 == null : t2 === 4) {
      t2 = t1.status;
      t2 = t2 === 200 || t2 === 0;
    } else
      t2 = false;
    if (t2)
      this.succ_0.call$1(t1);
    else {
      t1 = t1.status;
      if (t1 !== 200)
        E.handelFail(t1);
    }
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

handelFail_closure: {"": "Closure;status_0",
  call$0: function() {
    var t1, dialogData, t2, t3, t4, dialog;
    t1 = $.get$context();
    J.close$0$x(t1.$index(t1, "jQuery").get$Dialog());
    dialogData = H.fillLiteralMap(["title", "Error", "content", "", "draggable", true, "buttonsAlign", "right", "buttons", H.fillLiteralMap(["Ok", H.fillLiteralMap(["action", P.JsFunction_JsFunction$withThis(new E.handelFail__closure())], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
    switch (this.status_0) {
      case 400:
        dialogData.$indexSet(dialogData, "content", "Sorry, authentification failed.");
        J.set$display$x(J.get$style$x(document.querySelector("#start")), "block");
        J.set$display$x(J.get$style$x(document.querySelector("#app")), "none");
        t1 = $.get$Controller__singleton();
        t2 = P.List_List(null, null);
        t3 = P.List_List(null, null);
        t4 = $.Observable_$_nextHashCode + 1;
        $.Observable_$_nextHashCode = t4;
        t1.data = new B.Data(t2, t3, new B.User(null, null, false, null, null, null, null, "", null, null, t4));
        break;
      default:
        dialogData.$indexSet(dialogData, "content", "Sorry, an error occurred.");
    }
    dialog = P.JsObject_JsObject$fromBrowserObject(dialogData);
    t1 = $.get$context();
    t1.$index(t1, "jQuery").Dialog$1(dialog);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

handelFail__closure: {"": "Closure;",
  call$0: function() {
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

sendRequest_closure: {"": "Closure;succ_0,requestFailed_1,request_2",
  call$1: function(_) {
    var t1, t2;
    t1 = this.request_2;
    t2 = t1.readyState;
    if (t2 == null ? 4 == null : t2 === 4) {
      t2 = t1.status;
      t2 = t2 === 200 || t2 === 0;
    } else
      t2 = false;
    if (t2) {
      t2 = $.get$context();
      J.close$0$x(t2.$index(t2, "jQuery").get$Dialog());
      this.succ_0.call$1(t1);
    } else if (t1.status !== 200) {
      t2 = this.requestFailed_1;
      if (t2 != null)
        t2.call$1(t1);
      E.handelFail(t1.status);
    }
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

moveParkedElements_closure: {"": "Closure;elm_0",
  call$1: function(e) {
    this.elm_0.push(e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

moveParkedElements_closure0: {"": "Closure;",
  call$1: function(e) {
    var t1 = C.JSString_methods.$add("#", J.get$id$x(e)) + "Wrapper";
    J.insertAdjacentElement$2$x(document.querySelector(t1), "afterBegin", e);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
["watcher", "package:web_ui/watcher.dart", , Y, {
watch: function(target, callback, debugName, $location) {
  var exp, watcherType, val, e, trace, t1, t2, exception, watcher, node;
  if ($.useObservers)
    return T.observe(target, callback, null);
  if ($._watchers == null) {
    t1 = new L.LinkedList(null, null, 0);
    H.setRuntimeTypeInfo(t1, [Y._Watcher]);
    $._watchers = t1;
  }
  debugName = debugName == null ? "<unnamed>" : debugName;
  exp = null;
  watcherType = C._WatcherType_OTHER;
  t1 = target;
  t2 = J.getInterceptor(t1);
  if (typeof t1 === "object" && t1 !== null && !!t2.$isFunction) {
    exp = target;
    try {
      val = target.call$0();
      t1 = val;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isList))
        watcherType = C._WatcherType_LIST;
      else {
        t1 = val;
        t2 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isIterable)) {
          watcherType = C._WatcherType_LIST;
          exp = new Y.watch_closure(target);
        } else {
          t1 = val;
          t2 = J.getInterceptor(t1);
          if (typeof t1 !== "object" || t1 === null || !t2.$isLinkedHashMap) {
            t1 = val;
            t2 = J.getInterceptor(t1);
            t2 = typeof t1 === "object" && t1 !== null && !!t2.$isSplayTreeMap;
            t1 = t2;
          } else
            t1 = true;
          if (t1)
            watcherType = C._WatcherType_ORDERED_MAP;
          else {
            t1 = val;
            t2 = J.getInterceptor(t1);
            if (typeof t1 === "object" && t1 !== null && !!t2.$isMap)
              watcherType = C._WatcherType_HASH_MAP;
          }
        }
      }
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      trace = new H._StackTrace(exception, null);
      $.get$_logger().warning$1("evaluating " + H.S(debugName) + " watcher threw error (" + H.S(e) + ", " + H.S(trace) + ")");
    }

  } else {
    t1 = target;
    t2 = J.getInterceptor(t1);
    if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isList)) {
      exp = new Y.watch_closure0(target);
      watcherType = C._WatcherType_LIST;
    } else {
      t1 = target;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isIterable)) {
        exp = new Y.watch_closure1(target);
        watcherType = C._WatcherType_LIST;
      } else {
        t1 = target;
        t2 = J.getInterceptor(t1);
        if (typeof t1 !== "object" || t1 === null || !t2.$isLinkedHashMap) {
          t1 = target;
          t2 = J.getInterceptor(t1);
          t2 = typeof t1 === "object" && t1 !== null && !!t2.$isSplayTreeMap;
          t1 = t2;
        } else
          t1 = true;
        if (t1) {
          exp = new Y.watch_closure2(target);
          watcherType = C._WatcherType_ORDERED_MAP;
        } else {
          t1 = target;
          t2 = J.getInterceptor(t1);
          if (typeof t1 === "object" && t1 !== null && !!t2.$isMap) {
            exp = new Y.watch_closure3(target);
            watcherType = C._WatcherType_HASH_MAP;
          }
        }
      }
    }
  }
  if ($.verboseDebugMessages)
    if ($location == null) {
      $.get$readCurrentStackTrace();
      t1 = true;
    } else
      t1 = false;
  else
    t1 = false;
  if (t1)
    $location = $.get$readCurrentStackTrace().call$0();
  watcher = Y._createWatcher(watcherType, exp, callback, debugName, $location);
  t1 = $._watchers;
  node = t1.add$1(t1, watcher);
  return node.get$remove(node);
},

_createWatcher: function(type, exp, callback, debugName, $location) {
  var t1, t2, t3;
  t1 = $._Watcher__nextId;
  switch (type) {
    case C._WatcherType_LIST:
      $._Watcher__nextId = t1 + 1;
      t1 = new Y._ListWatcher(debugName, $location, t1, exp, callback, null);
      H.setRuntimeTypeInfo(t1, [null]);
      t1._lastValue = t1._getter$0();
      t1._lastValue = P.List_List$from(t1._safeRead$0(), true, H.getRuntimeTypeArgument(t1, "_ListWatcher", 0));
      return t1;
    case C._WatcherType_ORDERED_MAP:
      $._Watcher__nextId = t1 + 1;
      t1 = new Y._OrderDependantMapWatcher(debugName, $location, t1, exp, callback, null);
      t1._lastValue = t1._getter$0();
      t2 = t1._safeRead$0();
      t3 = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t3.addAll$1(t3, t2);
      t1._lastValue = t3;
      return t1;
    case C._WatcherType_HASH_MAP:
      $._Watcher__nextId = t1 + 1;
      t1 = new Y._HashMapWatcher(debugName, $location, t1, exp, callback, null);
      H.setRuntimeTypeInfo(t1, [null, null]);
      t1._lastValue = t1._getter$0();
      t2 = t1._safeRead$0();
      t3 = P.LinkedHashMap_LinkedHashMap(null, null, null, H.getRuntimeTypeArgument(t1, "_HashMapWatcher", 0), H.getRuntimeTypeArgument(t1, "_HashMapWatcher", 1));
      t3.addAll$1(t3, t2);
      t1._lastValue = t3;
      return t1;
    default:
      $._Watcher__nextId = t1 + 1;
      t1 = new Y._Watcher(debugName, $location, t1, exp, callback, null);
      t1._lastValue = t1._getter$0();
      return t1;
  }
},

watchAndInvoke: function(exp, callback, debugName, $location) {
  var res, value, t1;
  res = Y.watch(exp, callback, debugName, $location);
  value = !!exp.$isFunction ? exp.call$0() : exp;
  t1 = J.getInterceptor$ax(value);
  if (typeof value === "object" && value !== null && (value.constructor === Array || !!t1.$isIterable) && (typeof value !== "object" || value === null || value.constructor !== Array && !t1.$isList))
    value = t1.toList$0(value);
  callback.call$1(new T.ChangeNotification(null, value, null));
  return res;
},

dispatch: function() {
  var total, t1, dirty;
  if ($._watchers == null)
    return;
  total = 0;
  do {
    for (t1 = $._watchers, t1.toString, t1 = L.LinkedListIterator$(t1), dirty = false; t1.moveNext$0();)
      if (t1._linked_list$_current.compareAndNotify$0())
        dirty = true;
    if (dirty) {
      ++total;
      t1 = total < 10;
    } else
      t1 = false;
  } while (t1);
  if (total === 10)
    $.get$_logger().warning$1("Possible loop in watchers propagation, stopped dispatch.");
},

_iterablesNotEqual: function(first, second) {
  var x, y;
  x = J.get$iterator$ax(first);
  y = J.get$iterator$ax(second);
  for (; x.moveNext$0();) {
    if (!y.moveNext$0())
      return true;
    if (!J.$eq(x.get$current(), y.get$current()))
      return true;
  }
  return y.moveNext$0();
},

closure: {"": "Closure;",
  call$0: function() {
    var trace, exception;
    try {
      throw H.wrapException("");
    } catch (exception) {
      H.unwrapException(exception);
      trace = new H._StackTrace(exception, null);
      return J.toString$0(trace);
    }

  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

watch_closure4: {"": "Closure;",
  call$0: function() {
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

watch_closure: {"": "Closure;target_0",
  call$0: function() {
    return J.toList$0$ax(this.target_0.call$0());
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

watch_closure0: {"": "Closure;target_1",
  call$0: function() {
    return this.target_1;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

watch_closure1: {"": "Closure;target_2",
  call$0: function() {
    return J.toList$0$ax(this.target_2);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

watch_closure2: {"": "Closure;target_3",
  call$0: function() {
    return this.target_3;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

watch_closure3: {"": "Closure;target_4",
  call$0: function() {
    return this.target_4;
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_Watcher: {"": "Object;debugName,location,_uniqueId,_getter,_callback,_lastValue",
  _getter$0: function() {
    return this._getter.call$0();
  },
  _callback$1: function(arg0) {
    return this._callback.call$1(arg0);
  },
  toString$0: function(_) {
    return this.debugName + " (id: #" + this._uniqueId + ")";
  },
  compareAndNotify$0: function() {
    var currentValue, oldValue;
    currentValue = this._safeRead$0();
    if (this._compare$1(currentValue)) {
      oldValue = this._lastValue;
      this._update$1(currentValue);
      this._callback$1(new T.ChangeNotification(oldValue, currentValue, null));
      return true;
    }
    return false;
  },
  _compare$1: function(currentValue) {
    return !J.$eq(this._lastValue, currentValue);
  },
  _update$1: function(currentValue) {
    if ($.verboseDebugMessages)
      if (this.location != null) {
        $.get$_logger().info$1("watcher updated: " + H.S(this) + ", defined at:\n" + H.S(this.location));
        this.location = null;
      } else
        $.get$_logger().info$1("watcher updated: " + H.S(this));
    this._lastValue = currentValue;
  },
  _safeRead$0: function() {
    var e, trace, t1, exception;
    try {
      t1 = this._getter$0();
      return t1;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      trace = new H._StackTrace(exception, null);
      $.get$_logger().warning$1(H.S(this) + " watcher threw an exception: " + H.S(e) + ", " + H.S(trace));
    }

    return this._lastValue;
  },
  $is_Watcher: true,
  static: {
"": "_Watcher__nextId",
}

},

_ListWatcher: {"": "_Watcher;debugName,location,_uniqueId,_getter,_callback,_lastValue",
  _compare$1: function(currentValue) {
    return Y._iterablesNotEqual(this._lastValue, currentValue);
  },
  _update$1: function(currentValue) {
    this._lastValue = P.List_List$from(currentValue, true, H.getRuntimeTypeArgument(this, "_ListWatcher", 0));
  }
},

_HashMapWatcher: {"": "_Watcher;debugName,location,_uniqueId,_getter,_callback,_lastValue",
  _compare$1: function(currentValue) {
    var keys, t1, keyIterator, key;
    keys = this._lastValue.get$keys();
    t1 = J.getInterceptor$asx(keys);
    if (t1.get$length(keys) !== J.get$length$asx(currentValue.get$keys()))
      return true;
    keyIterator = t1.get$iterator(keys);
    for (t1 = J.getInterceptor$asx(currentValue); keyIterator.moveNext$0();) {
      key = keyIterator.get$current();
      if (currentValue.containsKey$1(key) !== true)
        return true;
      if (!J.$eq(J.$index$asx(this._lastValue, key), t1.$index(currentValue, key)))
        return true;
    }
    return false;
  },
  _update$1: function(currentValue) {
    var t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, H.getRuntimeTypeArgument(this, "_HashMapWatcher", 0), H.getRuntimeTypeArgument(this, "_HashMapWatcher", 1));
    t1.addAll$1(t1, currentValue);
    this._lastValue = t1;
  }
},

_OrderDependantMapWatcher: {"": "_Watcher;debugName,location,_uniqueId,_getter,_callback,_lastValue",
  _compare$1: function(currentValue) {
    return Y._iterablesNotEqual(currentValue.get$keys(), this._lastValue.get$keys()) || Y._iterablesNotEqual(J.get$values$x(currentValue), J.get$values$x(this._lastValue));
  },
  _update$1: function(currentValue) {
    var t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    t1.addAll$1(t1, currentValue);
    this._lastValue = t1;
  }
},

_WatcherType: {"": "Object;_watcher$_value",
  toString$0: function(_) {
    return "Enum." + this._watcher$_value;
  },
  static: {
"": "_WatcherType_LIST0,_WatcherType_HASH_MAP0,_WatcherType_ORDERED_MAP0,_WatcherType_OTHER0",
}

}}],
["web_ui", "package:web_ui/web_ui.dart", , F, {
WebComponent__matches: function(node, selector) {
  var t1 = J.getInterceptor$x(node);
  if (typeof node !== "object" || node === null || !t1.$isElement)
    return selector === "*";
  return t1.matches$1(node, selector);
},

WebComponent__isActive: function(node) {
  var t1;
  for (node = J.get$parent$x(node); node != null; node = t1.get$parent(node)) {
    t1 = J.getInterceptor$x(node);
    if (t1.get$tagName(node) === "CONTENT" || t1.get$tagName(node) === "SHADOW")
      return false;
  }
  return true;
},

WebComponent: {"": "CustomElement;",
  get$host: function(_) {
    var t1 = this._host;
    if (t1 == null)
      throw H.wrapException(P.StateError$("host element has not been set."));
    return t1;
  },
  set$host: function(_, value) {
    var t1, xtag;
    if (value == null)
      throw H.wrapException(new P.ArgumentError("host must not be null."));
    t1 = J.getInterceptor$x(value);
    xtag = t1.get$xtag(value);
    if (xtag != null && (xtag == null ? value != null : xtag !== value))
      throw H.wrapException(new P.ArgumentError("host must not have its xtag property set."));
    if (this._host != null)
      throw H.wrapException(P.StateError$("host can only be set once."));
    t1.set$xtag(value, this);
    this._host = value;
  },
  createShadowRoot$1: function(_, componentName) {
    var root, t1;
    root = this._createShadowRoot$0();
    if (componentName != null) {
      t1 = this._generatedRoots;
      t1.$indexSet(t1, componentName, root);
    }
    return root;
  },
  createShadowRoot$0: function($receiver) {
    return this.createShadowRoot$1($receiver, null);
  },
  _createShadowRoot$0: function() {
    if ($.useShadowDom && !!Element.prototype.webkitCreateShadowRoot) {
      var t1 = this._host;
      if (t1 == null)
        H.throwExpression(P.StateError$("host element has not been set."));
      return J.createShadowRoot$0$x(t1);
    }
    if (this._shadowRoots == null)
      this._shadowRoots = [];
    this._shadowRoots.push(document.createElement("div", null));
    return J.get$last$ax(this._shadowRoots);
  },
  composeChildren$0: function() {
    var t1, t2, tree, pool, shadowInsertionPoints, shadowInsertionTrees, tree0, point, i, componentName;
    if ($.useShadowDom && !!Element.prototype.webkitCreateShadowRoot)
      return;
    t1 = this._shadowRoots;
    t2 = t1.length;
    if (t2 === 0)
      throw H.wrapException(P.StateError$("Distribution algorithm requires at least one shadow root and can only be run once."));
    if (0 >= t2)
      throw H.ioore(t1, 0);
    tree = t1.pop();
    pool = P.List_List$from(J.get$nodes$x(this.get$host(this)), true, null);
    shadowInsertionPoints = [];
    shadowInsertionTrees = [];
    for (tree0 = tree; true;) {
      pool = this._distributeNodes$2(tree0, pool);
      point = J.query$1$x(tree0, "shadow");
      if (point != null)
        if (t1.length > 0) {
          tree0 = t1.pop();
          shadowInsertionPoints.push(point);
          shadowInsertionTrees.push(tree0);
        } else {
          t1 = J.getInterceptor$x(point);
          J.insertAllBefore$2$x(t1.get$parent(point), pool, point);
          t1.remove$0(point);
          break;
        }
      else
        break;
    }
    for (i = 0; i < shadowInsertionPoints.length; ++i) {
      point = shadowInsertionPoints[i];
      if (i >= shadowInsertionTrees.length)
        throw H.ioore(shadowInsertionTrees, i);
      t1 = J.get$nodes$x(shadowInsertionTrees[i]);
      t2 = J.getInterceptor$x(point);
      J.insertAllBefore$2$x(t2.get$parent(point), t1, point);
      t2.remove$0(point);
    }
    J.get$nodes$x(this.get$host(this))._this.textContent = "";
    t1 = J.get$nodes$x(this.get$host(this));
    t1.addAll$1(t1, J.get$nodes$x(tree));
    for (t1 = this._generatedRoots, t2 = t1.get$keys()._map, t2 = new P.LinkedHashMapKeyIterator(t2, t2._modifications, null, null), t2._cell = t2._map._first; t2.moveNext$0();) {
      componentName = t2._collection$_current;
      if (J.$eq(t1.$index(t1, componentName), tree)) {
        t1.$indexSet(t1, componentName, this);
        break;
      }
    }
  },
  _distributeNodes$2: function(tree, pool) {
    var t1, insertionPoint, t2, select, matching, notMatching, t3, node;
    for (t1 = J.queryAll$1$x(tree, "content"), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
      insertionPoint = t1._dev$_current;
      if (!F.WebComponent__isActive(insertionPoint))
        continue;
      t2 = J.getInterceptor$x(insertionPoint);
      select = t2.get$attributes(insertionPoint)._element.getAttribute("select");
      if (select == null || select === "")
        select = "*";
      matching = [];
      notMatching = [];
      for (t3 = new H.ListIterator(pool, pool.length, 0, null); t3.moveNext$0();) {
        node = t3._dev$_current;
        (F.WebComponent__matches(node, select) ? matching : notMatching).push(node);
      }
      if (matching.length === 0)
        matching = t2.get$nodes(insertionPoint);
      J.insertAllBefore$2$x(t2.get$parent(insertionPoint), matching, insertionPoint);
      t2.remove$0(insertionPoint);
      pool = notMatching;
    }
    return pool;
  }
},

ScopedCssMapper: {"": "Object;_mapping",
  $index: function(_, selector) {
    var t1 = this._mapping;
    return t1.$index(t1, selector);
  }
}}],
["web_ui.observe.observable", "package:web_ui/observe/observable.dart", , T, {
observe: function(value, callback, debugName) {
  var t1, exprObserver;
  t1 = $._ExpressionObserver__nextId + 1;
  $._ExpressionObserver__nextId = t1;
  exprObserver = new T._ExpressionObserver(t1, value, callback, debugName, P.LinkedHashMap_LinkedHashMap(null, null, null, null, null), [], false, null);
  if (!exprObserver._observe$0())
    return T._doNothing$closure;
  return exprObserver.get$_unobserve();
},

observeChanges: function(obj, observer) {
  var t1, node;
  if (obj.get$$$_observers() == null) {
    t1 = new L.LinkedList(null, null, 0);
    H.setRuntimeTypeInfo(t1, [null]);
    obj.set$$$_observers(t1);
  }
  t1 = obj.get$$$_observers();
  node = t1.add$1(t1, observer);
  return node.get$remove(node);
},

notifyChange: function($self, type, key, oldValue, newValue) {
  if ((type & 14) === 0)
    if (J.$eq(oldValue, newValue))
      return;
  if ($._changedObjects == null) {
    $._changedObjects = [];
    P.scheduleMicrotask(T.deliverChangesSync$closure);
  }
  if ($self.$$_changes == null) {
    $self.$$_changes = [];
    $._changedObjects.push($self);
  }
  $self.$$_changes.push(new T.ChangeRecord(type, key, oldValue, newValue));
},

_doNothing: function() {
},

deliverChangesSync: function() {
  var observable, changes, observer, error, trace, iterations, t1, t2, changedExpressions, iterations0, n, exception;
  iterations = 0;
  while (true) {
    t1 = $._changedObjects;
    t2 = t1 == null;
    if (!(!t2 || $._changedExpressions != null))
      break;
    $._changedObjects = null;
    changedExpressions = $._changedExpressions;
    $._changedExpressions = null;
    iterations0 = iterations + 1;
    if (iterations === $.circularNotifyLimit) {
      T._diagnoseCircularLimit(t1, changedExpressions);
      return;
    }
    if (!t2)
      for (t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
        observable = t1._dev$_current;
        changes = observable.get$$$_changes();
        observable.set$$$_changes(null);
        for (n = observable.get$$$_observers()._linked_list$_head; n != null; n = n._linked_list$_next) {
          observer = n._linked_list$_value;
          try {
            observer.call$1(changes);
          } catch (exception) {
            t2 = H.unwrapException(exception);
            error = t2;
            trace = new H._StackTrace(exception, null);
            $.onObserveUnhandledError.call$4(error, trace, observer, "from " + H.S(observable));
          }

        }
      }
    if (changedExpressions != null)
      changedExpressions.forEach$1(changedExpressions, new T.deliverChangesSync_closure());
    iterations = iterations0;
  }
},

_diagnoseCircularLimit: function(changedObjects, changedExpressions) {
  var trace, t1, observable, changes, $arguments, t2, t3, t4, exprObserver, change, msg;
  trace = [];
  if (changedObjects != null)
    for (t1 = new H.ListIterator(changedObjects, changedObjects.length, 0, null); t1.moveNext$0();) {
      observable = t1._dev$_current;
      changes = observable.get$$$_changes();
      trace.push(H.S(observable) + " " + H.S(changes));
    }
  if (changedExpressions != null) {
    changedExpressions.toString;
    $arguments = H.substitute(changedExpressions.$asSplayTreeMap, H.getRuntimeTypeInfo(changedExpressions));
    t1 = $arguments == null ? null : $arguments[0];
    $arguments = H.substitute(changedExpressions.$asSplayTreeMap, H.getRuntimeTypeInfo(changedExpressions));
    t2 = $arguments == null ? null : $arguments[1];
    t3 = new P._SplayTreeValueIterable(changedExpressions);
    t3.$builtinTypeInfo = [t1, t2];
    t1 = t3._map;
    $arguments = H.substitute(t3.$as_SplayTreeValueIterable, H.getRuntimeTypeInfo(t3));
    t2 = $arguments == null ? null : $arguments[0];
    $arguments = H.substitute(t3.$as_SplayTreeValueIterable, H.getRuntimeTypeInfo(t3));
    t3 = $arguments == null ? null : $arguments[1];
    t4 = new P._SplayTreeValueIterator(t1, [], t1._modificationCount, t1._splayCount, null);
    t4.$builtinTypeInfo = [t2, t3];
    t4._findLeftMostDescendent$1(t1._root);
    for (; t4.moveNext$0();) {
      exprObserver = t4.get$current();
      change = exprObserver._deliver$0();
      if (change != null)
        trace.push(H.S(exprObserver) + " " + H.S(change));
    }
  }
  $._changedObjects = null;
  $._changedExpressions = null;
  t1 = "exceeded notifiction limit of " + $.circularNotifyLimit + ", possible circular reference in observer callbacks: ";
  t2 = new H.SubListIterable(trace, 0, 10);
  t2.$builtinTypeInfo = [null];
  t3 = t2._start;
  if (t3 < 0)
    H.throwExpression(P.RangeError$value(t3));
  t4 = t2._endOrLength;
  if (t4 != null) {
    if (typeof t4 !== "number")
      throw t4.$lt();
    if (t4 < 0)
      H.throwExpression(P.RangeError$value(t4));
    if (t3 > t4)
      H.throwExpression(P.RangeError$range(t3, 0, t4));
  }
  msg = t1 + t2.join$1(t2, ", ");
  $.get$onCircularNotifyLimit().call$1(msg);
},

defaultObserveUnhandledError: function(error, trace, obj, message) {
  P.print("web_ui.observe: unhandled error calling " + H.S(obj) + " " + H.S(message) + ".\nerror:\n" + H.S(error) + "\n\nstack trace:\n" + H.S(trace));
},

ChangeNotification: {"": "Object;oldValue,newValue>,changes",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other === "object" && other !== null && !!t1.$isChangeNotification)
      t1 = J.$eq(this.oldValue, other.oldValue) && J.$eq(this.newValue, other.newValue) && J.$eq(this.changes, other.changes);
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    return C.JSNumber_methods.get$hashCode(J.get$hashCode$(this.oldValue) * 31 + J.get$hashCode$(this.newValue)) * 31 + J.get$hashCode$(this.changes);
  },
  toString$0: function(_) {
    var t1 = this.changes;
    if (t1 != null)
      return "#<ChangeNotification to " + H.S(this.newValue) + ": " + H.S(t1) + ">";
    return "#<ChangeNotification from " + H.S(this.oldValue) + " to " + H.S(this.newValue) + ">";
  },
  $isChangeNotification: true
},

ChangeRecord: {"": "Object;type>,key>,oldValue,newValue>",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other === "object" && other !== null && !!t1.$isChangeRecord)
      t1 = this.type === other.type && this.key === other.key && J.$eq(this.oldValue, other.oldValue) && J.$eq(this.newValue, other.newValue);
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2, t3, t4;
    t1 = C.JSInt_methods.get$hashCode(this.type);
    t2 = C.JSString_methods.get$hashCode(this.key);
    t3 = J.get$hashCode$(this.oldValue);
    t4 = J.get$hashCode$(this.newValue);
    return C.JSInt_methods.get$hashCode(t1 * 31 + t2) * 31 + C.JSNumber_methods.get$hashCode(t3 * 31 + t4);
  },
  toString$0: function(_) {
    var typeStr;
    switch (this.type) {
      case 1:
        typeStr = "field";
        break;
      case 2:
        typeStr = "index";
        break;
      case 6:
        typeStr = "insert";
        break;
      case 10:
        typeStr = "remove";
        break;
      default:
        typeStr = null;
    }
    return "#<ChangeRecord " + typeStr + " " + this.key + " from " + H.S(this.oldValue) + " to " + H.S(this.newValue) + ">";
  },
  $isChangeRecord: true,
  static: {
"": "ChangeRecord_FIELD,ChangeRecord_INDEX,ChangeRecord_INSERT,ChangeRecord_REMOVE",
}

},

observe_closure: {"": "Closure;callback_0,obs_1",
  call$1: function(changes) {
    var t1 = this.obs_1;
    this.callback_0.call$1(new T.ChangeNotification(t1, t1, changes));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

Observable: {"": "Object;$$_observers@,$$_changes@,hashCode>", $isObservable: true},

deliverChangesSync_closure: {"": "Closure;",
  call$2: function(id, obs) {
    obs._deliver$0();
  },
  "+call:2:0": 0,
  $isFunction: true,
  $is_args2: true
},

_ExpressionObserver: {"": "Object;_id,_expression,_observable$_callback,_debugName,_reads,_unobservers,_scheduled,_observable$_value",
  _expression$0: function() {
    return this._expression.call$0();
  },
  _observable$_callback$1: function(arg0) {
    return this._observable$_callback.call$1(arg0);
  },
  toString$0: function(_) {
    return "<observer " + this._id + ">";
  },
  _observe$0: function() {
    var e, trace, $parent, t1, t2, exception;
    $parent = $._activeObserver;
    $._activeObserver = this;
    try {
      this._observable$_value = this._expression$0();
      t1 = this._observable$_value;
      t2 = J.getInterceptor$ax(t1);
      if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isIterable) && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t2.$isList) && (typeof t1 !== "object" || t1 === null || !t2.$isObservable))
        this._observable$_value = t2.toList$0(H.listSuperNativeTypeCast(t1, "$isIterable"));
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      trace = new H._StackTrace(exception, null);
      $.onObserveUnhandledError.call$4(e, trace, this._expression, "from " + H.S(this));
      this._observable$_value = null;
    }

    t1 = this._reads;
    t1.forEach$1(t1, this.get$_watchForChange());
    t1.clear$0(t1);
    $._activeObserver = $parent;
    this._observeValue$0();
    return this._unobservers.length > 0;
  },
  _runCallback$1: function(change) {
    var e, trace, exception, t1;
    try {
      this._observable$_callback$1(change);
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      trace = new H._StackTrace(exception, null);
      $.onObserveUnhandledError.call$4(e, trace, this._observable$_callback, "from " + H.S(this));
    }

  },
  _observeValue$0: function() {
    var value, t1;
    value = this._observable$_value;
    t1 = J.getInterceptor(value);
    if (typeof value !== "object" || value === null || !t1.$isObservable)
      return;
    this._unobservers.push(T.observeChanges(value, new T._ExpressionObserver__observeValue_closure(this, value)));
  },
  _addRead$3: function(target, type, key) {
    var reads, mask, e, trace, exception, t1;
    reads = this._reads.putIfAbsent$2(target, new T._ExpressionObserver__addRead_closure());
    try {
      mask = J.$index$asx(reads, key);
      if (mask == null)
        mask = 0;
      J.$indexSet$ax(reads, key, J.$or$n(mask, type));
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      trace = new H._StackTrace(exception, null);
      $.onObserveUnhandledError.call$4(e, trace, key, "hashCode or operator == from " + H.S(this));
    }

  },
  _watchForChange$2: function(target, reads) {
    this._unobservers.push(T.observeChanges(target, new T._ExpressionObserver__watchForChange_closure(this, reads)));
  },
  get$_watchForChange: function() {
    return new B.BoundClosure$2(this, T._ExpressionObserver.prototype._watchForChange$2, null, "_watchForChange$2");
  },
  _unobserve$0: function() {
    for (var t1 = this._unobservers, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();)
      t1._dev$_current.call$0();
    this._scheduled = false;
  },
  get$_unobserve: function() {
    return new B.BoundClosure$0(this, T._ExpressionObserver.prototype._unobserve$0, null, "_unobserve$0");
  },
  _deliver$0: function() {
    var oldValue, e, trace, exception, t1, change;
    if (!this._scheduled)
      return;
    oldValue = this._observable$_value;
    this._unobserve$0();
    this._observe$0();
    try {
      if (J.$eq(oldValue, this._observable$_value))
        return;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      trace = new H._StackTrace(exception, null);
      $.onObserveUnhandledError.call$4(e, trace, oldValue, "operator == from " + H.S(this));
      return;
    }

    change = new T.ChangeNotification(oldValue, this._observable$_value, null);
    this._runCallback$1(change);
    return change;
  },
  static: {
"": "_ExpressionObserver__nextId",
}

},

_ExpressionObserver__observeValue_closure: {"": "Closure;this_0,value_1",
  call$1: function(changes) {
    var t1 = this.value_1;
    this.this_0._runCallback$1(new T.ChangeNotification(t1, t1, changes));
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

_ExpressionObserver__addRead_closure: {"": "Closure;",
  call$0: function() {
    return P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
  },
  "+call:0:0": 0,
  $isFunction: true,
  $is_void_: true
},

_ExpressionObserver__watchForChange_closure: {"": "Closure;this_0,reads_1",
  call$1: function(changes) {
    var t1, t2, t3, t4, change, t5, mask;
    t1 = this.this_0;
    if (t1._scheduled)
      return;
    for (t2 = J.get$iterator$ax(changes), t3 = this.reads_1, t4 = J.getInterceptor$asx(t3); t2.moveNext$0();) {
      change = t2.get$current();
      t5 = J.getInterceptor$x(change);
      mask = t4.$index(t3, t5.get$key(change));
      if (mask != null && J.$and$n(mask, t5.get$type(change)) !== 0) {
        t1._scheduled = true;
        if ($._changedExpressions == null)
          $._changedExpressions = P.SplayTreeMap$(null, null, null, null);
        t2 = $._changedExpressions;
        t2.$indexSet(t2, t1._id, t1);
        return;
      }
    }
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
},

closure0: {"": "Closure;",
  call$1: function(message) {
    return P.print(message);
  },
  "+call:1:0": 0,
  $isFunction: true,
  $is_args1: true
}}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

// Static function getters
init.globalFunctions.IsolateNatives__processWorkerMessage$closure = H.IsolateNatives__processWorkerMessage$closure = new H.Closure$2(H.IsolateNatives__processWorkerMessage, "IsolateNatives__processWorkerMessage$closure");
init.globalFunctions.Primitives__throwFormatException$closure = H.Primitives__throwFormatException$closure = new H.Closure$1(H.Primitives__throwFormatException, "Primitives__throwFormatException$closure");
init.globalFunctions.toStringWrapper$closure = H.toStringWrapper$closure = new H.Closure$0(H.toStringWrapper, "toStringWrapper$closure");
init.globalFunctions.invokeClosure$closure = H.invokeClosure$closure = new H.Closure$7(H.invokeClosure, "invokeClosure$closure");
init.globalFunctions.isAssignable$closure = H.isAssignable$closure = new H.Closure$2(H.isAssignable, "isAssignable$closure");
init.globalFunctions.typeNameInChrome$closure = H.typeNameInChrome$closure = new H.Closure$1(H.typeNameInChrome, "typeNameInChrome$closure");
init.globalFunctions.typeNameInSafari$closure = H.typeNameInSafari$closure = new H.Closure$1(H.typeNameInSafari, "typeNameInSafari$closure");
init.globalFunctions.typeNameInOpera$closure = H.typeNameInOpera$closure = new H.Closure$1(H.typeNameInOpera, "typeNameInOpera$closure");
init.globalFunctions.typeNameInFirefox$closure = H.typeNameInFirefox$closure = new H.Closure$1(H.typeNameInFirefox, "typeNameInFirefox$closure");
init.globalFunctions.typeNameInIE$closure = H.typeNameInIE$closure = new H.Closure$1(H.typeNameInIE, "typeNameInIE$closure");
init.globalFunctions.constructorNameFallback$closure = H.constructorNameFallback$closure = new H.Closure$1(H.constructorNameFallback, "constructorNameFallback$closure");
init.globalFunctions.callDartFunctionWith1Arg$closure = H.callDartFunctionWith1Arg$closure = new H.Closure$2(H.callDartFunctionWith1Arg, "callDartFunctionWith1Arg$closure");
init.globalFunctions.main0$closure = Y.main0$closure = new H.Closure$0(Y.main0, "main0$closure");
init.globalFunctions._asyncRunCallback$closure = P._asyncRunCallback$closure = new H.Closure$0(P._asyncRunCallback, "_asyncRunCallback$closure");
init.globalFunctions._nullDataHandler$closure = P._nullDataHandler$closure = new H.Closure$1(P._nullDataHandler, "_nullDataHandler$closure");
init.globalFunctions._nullErrorHandler$closure = P._nullErrorHandler$closure = new P.Closure$22(P._nullErrorHandler, "_nullErrorHandler$closure");
init.globalFunctions._nullDoneHandler$closure = P._nullDoneHandler$closure = new H.Closure$0(P._nullDoneHandler, "_nullDoneHandler$closure");
init.globalFunctions._defaultEquals$closure = P._defaultEquals$closure = new H.Closure$2(P._defaultEquals, "_defaultEquals$closure");
init.globalFunctions._defaultHashCode$closure = P._defaultHashCode$closure = new H.Closure$1(P._defaultHashCode, "_defaultHashCode$closure");
init.globalFunctions.Comparable_compare$closure = P.Comparable_compare$closure = new H.Closure$2(P.Comparable_compare, "Comparable_compare$closure");
init.globalFunctions.identical$closure = P.identical$closure = new H.Closure$2(P.identical, "identical$closure");
init.globalFunctions.identityHashCode$closure = P.identityHashCode$closure = new H.Closure$1(P.identityHashCode, "identityHashCode$closure");
init.globalFunctions._Html5NodeValidator__standardAttributeValidator$closure = W._Html5NodeValidator__standardAttributeValidator$closure = new W.Closure$4(W._Html5NodeValidator__standardAttributeValidator, "_Html5NodeValidator__standardAttributeValidator$closure");
init.globalFunctions._Html5NodeValidator__uriAttributeValidator$closure = W._Html5NodeValidator__uriAttributeValidator$closure = new W.Closure$4(W._Html5NodeValidator__uriAttributeValidator, "_Html5NodeValidator__uriAttributeValidator$closure");
init.globalFunctions._callDartFunction$closure = P._callDartFunction$closure = new W.Closure$4(P._callDartFunction, "_callDartFunction$closure");
init.globalFunctions._convertToDart$closure = P._convertToDart$closure = new H.Closure$1(P._convertToDart, "_convertToDart$closure");
init.globalFunctions._doNothing$closure = T._doNothing$closure = new H.Closure$0(T._doNothing, "_doNothing$closure");
init.globalFunctions.deliverChangesSync$closure = T.deliverChangesSync$closure = new H.Closure$0(T.deliverChangesSync, "deliverChangesSync$closure");
init.globalFunctions.defaultObserveUnhandledError$closure = T.defaultObserveUnhandledError$closure = new W.Closure$4(T.defaultObserveUnhandledError, "defaultObserveUnhandledError$closure");
// Runtime type support
W.Node.$isNode = true;
W.Node.$isObject = true;
W._CSSValue.$is_CSSValue = true;
W._CSSValue.$isObject = true;
W.StyleSheet.$isStyleSheet = true;
W.StyleSheet.$isObject = true;
W.SpeechRecognitionResult.$isSpeechRecognitionResult = true;
W.SpeechRecognitionResult.$isObject = true;
W.SpeechInputResult.$isSpeechInputResult = true;
W.SpeechInputResult.$isObject = true;
W.Gamepad.$isGamepad = true;
W.Gamepad.$isObject = true;
W.CssRule.$isCssRule = true;
W.CssRule.$isObject = true;
P.Rectangle.$isRectangle = true;
P.Rectangle.$isObject = true;
W.Touch.$isTouch = true;
W.Touch.$isObject = true;
W.TextTrack.$isTextTrack = true;
W.TextTrack.$isObject = true;
W.TextTrackCue.$isTextTrackCue = true;
W.TextTrackCue.$isObject = true;
W.SpeechGrammar.$isSpeechGrammar = true;
W.SpeechGrammar.$isObject = true;
W.SourceBuffer.$isSourceBuffer = true;
W.SourceBuffer.$isObject = true;
W.Plugin.$isPlugin = true;
W.Plugin.$isObject = true;
W.MimeType.$isMimeType = true;
W.MimeType.$isObject = true;
W.File.$isFile = true;
W.File.$isObject = true;
J.JSString.$isString = true;
J.JSString.$isComparable = true;
J.JSString.$asComparable = [J.JSString];
J.JSString.$isObject = true;
P.ElementInstance.$isElementInstance = true;
P.ElementInstance.$isObject = true;
P.Transform.$isObject = true;
P.PathSeg.$isObject = true;
P.Number.$isObject = true;
P.Length.$isObject = true;
P.Map.$isMap = true;
P.Map.$isObject = true;
J.JSInt.$isint = true;
J.JSInt.$isnum = true;
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isObject = true;
J.JSDouble.$isnum = true;
J.JSDouble.$isComparable = true;
J.JSDouble.$asComparable = [J.JSNumber];
J.JSDouble.$isComparable = true;
J.JSDouble.$asComparable = [J.JSNumber];
J.JSDouble.$isObject = true;
J.JSNumber.$isnum = true;
J.JSNumber.$isComparable = true;
J.JSNumber.$asComparable = [J.JSNumber];
J.JSNumber.$isObject = true;
P.Duration.$isDuration = true;
P.Duration.$isComparable = true;
P.Duration.$asComparable = [P.Duration];
P.Duration.$isObject = true;
N.Level.$isComparable = true;
N.Level.$asComparable = [N.Level];
N.Level.$isObject = true;
W.Element.$isElement = true;
W.Element.$isNode = true;
W.Element.$isObject = true;
P.Object.$isObject = true;
P._SplayTreeNode.$isObject = true;
J.JSArray.$isList = true;
J.JSArray.$isObject = true;
N.Logger.$isObject = true;
L.LinkedListNode.$isLinkedListNode = true;
L.LinkedListNode.$isObject = true;
W.MouseEvent.$isObject = true;
W.ProgressEvent.$isObject = true;
P.Symbol.$isSymbol = true;
P.Symbol.$isObject = true;
Y._Watcher.$isObject = true;
J.JSBool.$isbool = true;
J.JSBool.$isObject = true;
W.Event.$isObject = true;
P.ReceivePort.$isStream = true;
P.ReceivePort.$asStream = [null];
P.ReceivePort.$isObject = true;
H._IsolateEvent.$isObject = true;
H._IsolateContext.$isObject = true;
P.StackTrace.$isStackTrace = true;
P.StackTrace.$isObject = true;
G.MenuAccount.$isMenuAccount = true;
G.MenuAccount.$isWebComponent = true;
G.MenuAccount.$isObservable = true;
G.MenuAccount.$isElement = true;
G.MenuAccount.$isNode = true;
G.MenuAccount.$isObject = true;
D.MenuFolder.$isMenuFolder = true;
D.MenuFolder.$isWebComponent = true;
D.MenuFolder.$isObservable = true;
D.MenuFolder.$isElement = true;
D.MenuFolder.$isNode = true;
D.MenuFolder.$isObject = true;
W.HttpRequest.$isHttpRequest = true;
W.HttpRequest.$isObject = true;
M.AccountOverviewElement.$isAccountOverviewElement = true;
M.AccountOverviewElement.$isWebComponent = true;
M.AccountOverviewElement.$isElement = true;
M.AccountOverviewElement.$isNode = true;
M.AccountOverviewElement.$isObject = true;
P.Function.$isFunction = true;
P.Function.$isObject = true;
W._Html5NodeValidator.$is_Html5NodeValidator = true;
W._Html5NodeValidator.$isNodeValidator = true;
W._Html5NodeValidator.$isObject = true;
P.Comparable.$isComparable = true;
P.Comparable.$isObject = true;
F.WebComponent.$isWebComponent = true;
F.WebComponent.$isElement = true;
F.WebComponent.$isNode = true;
F.WebComponent.$isObject = true;
P.Future.$isFuture = true;
P.Future.$isObject = true;
P.Stream.$isStream = true;
P.Stream.$isObject = true;
P._DelayedEvent.$is_DelayedEvent = true;
P._DelayedEvent.$isObject = true;
P.DateTime.$isDateTime = true;
P.DateTime.$isComparable = true;
P.DateTime.$asComparable = [null];
P.DateTime.$isObject = true;
P.StreamSubscription.$isStreamSubscription = true;
P.StreamSubscription.$isObject = true;
P._EventSink.$is_EventSink = true;
P._EventSink.$isObject = true;
W.NodeValidator.$isNodeValidator = true;
W.NodeValidator.$isObject = true;
B.AccountData.$isAccountData = true;
B.AccountData.$isObservable = true;
B.AccountData.$isObject = true;
W.WindowBase.$isWindowBase = true;
W.WindowBase.$isObject = true;
T.Observable.$isObservable = true;
T.Observable.$isObject = true;
W.SpeechRecognitionAlternative.$isSpeechRecognitionAlternative = true;
W.SpeechRecognitionAlternative.$isObject = true;
// getInterceptor methods
J.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return J.JSInt.prototype;
    return J.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return J.JSNull.prototype;
  if (typeof receiver == "boolean")
    return J.JSBool.prototype;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
C.C_EmptyIterator = new H.EmptyIterator();
C.C_JsonCodec = new P.JsonCodec();
C.C_UnknownJavaScriptObject = new J.UnknownJavaScriptObject();
C.C__DelayedDone = new P._DelayedDone();
C.C__RootZone = new P._RootZone();
C.Duration_0 = new P.Duration(0);
C.EventStreamProvider_change = new W.EventStreamProvider("change");
C.EventStreamProvider_click = new W.EventStreamProvider("click");
C.EventStreamProvider_input = new W.EventStreamProvider("input");
C.EventStreamProvider_mouseout = new W.EventStreamProvider("mouseout");
C.EventStreamProvider_mouseover = new W.EventStreamProvider("mouseover");
C.EventStreamProvider_readystatechange = new W.EventStreamProvider("readystatechange");
C.HttpRequest_methods = W.HttpRequest.prototype;
C.JSArray_methods = J.JSArray.prototype;
C.JSInt_methods = J.JSInt.prototype;
C.JSNull_methods = J.JSNull.prototype;
C.JSNumber_methods = J.JSNumber.prototype;
C.JSString_methods = J.JSString.prototype;
C.JS_CONST_ZYJ =     ((typeof version == "function" && typeof os == "object" && "system" in os)
    || (typeof navigator == "object"
        && navigator.userAgent.indexOf('Chrome') != -1))
        ? function(x) { return x.$dartCachedLength || x.length; }
        : function(x) { return x.length; };
;
C.Level_INFO_800 = new N.Level("INFO", 800);
C.Level_WARNING_900 = new N.Level("WARNING", 900);
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
C.List_1GN = H.setRuntimeTypeInfo(Isolate.makeConstantList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), [J.JSString]);
C.List_6JR = Isolate.makeConstantList([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);
C.List_6Pr = Isolate.makeConstantList([0, 0, 26624, 1023, 0, 0, 65534, 2047]);
C.List_JYB = Isolate.makeConstantList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]);
C.List_empty = Isolate.makeConstantList([]);
C.List_http_https_ftp_mailto = Isolate.makeConstantList(["http", "https", "ftp", "mailto"]);
C.List_nxB = Isolate.makeConstantList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]);
C.List_qg4 = Isolate.makeConstantList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]);
C.List_wSV = H.setRuntimeTypeInfo(Isolate.makeConstantList(["bind", "if", "ref", "repeat", "syntax"]), [J.JSString]);
C.List_yrN = H.setRuntimeTypeInfo(Isolate.makeConstantList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), [J.JSString]);
C.NodeList_methods = W.NodeList.prototype;
C.Symbol_call = new H.Symbol0("call");
C.Type_oqh = H.createRuntimeType('Uint64List');
C.Type_qxd = H.createRuntimeType('Int64List');
C.Utf8Codec_false = new P.Utf8Codec(false);
C.Window_methods = W.Window.prototype;
C._WatcherType_HASH_MAP = new Y._WatcherType("HASH_MAP");
C._WatcherType_LIST = new Y._WatcherType("LIST");
C._WatcherType_ORDERED_MAP = new Y._WatcherType("ORDERED_MAP");
C._WatcherType_OTHER = new Y._WatcherType("OTHER");
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_mirrorFunctionCacheName = "$cachedFunction";
$.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
$.initNativeDispatchFlag = null;
$.AccountOverview_pageUrl = "accountOverview";
$.AddAccountComponent_pageUrl = "addAccount";
$.printToZone = null;
$._callbacksAreEnqueued = false;
$.Zone__current = C.C__RootZone;
$.Expando__keyCount = 0;
$.Element__parseDocument = null;
$.Element__parseRange = null;
$.Element__defaultValidator = null;
$.Element__defaultSanitizer = null;
$.FolderOverview_pageUrl = "folderOverview";
$.Device__isOpera = null;
$.Device__isWebKit = null;
$.hierarchicalLoggingEnabled = false;
$._rootLevel = C.Level_INFO_800;
$.LogRecord__nextNumber = 0;
$.ShowAccountComponent_pageUrl = "showAccount";
$.ShowSettingsComponent_pageUrl = "settings";
$.useObservers = false;
$.verboseDebugMessages = false;
$._watchers = null;
$._Watcher__nextId = 0;
$.useShadowDom = false;
$.Observable_$_nextHashCode = 0;
$._activeObserver = null;
$.circularNotifyLimit = 100;
$._changedObjects = null;
$._changedExpressions = null;
$._ExpressionObserver__nextId = 0;
$.onObserveUnhandledError = T.defaultObserveUnhandledError$closure;
J.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return J.getInterceptor$ns(receiver).$add(receiver, a0);
};
J.$and$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver & a0) >>> 0;
  return J.getInterceptor$n(receiver).$and(receiver, a0);
};
J.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return J.getInterceptor(receiver).$eq(receiver, a0);
};
J.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return J.getInterceptor$n(receiver).$ge(receiver, a0);
};
J.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return J.getInterceptor$n(receiver).$gt(receiver, a0);
};
J.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return J.getInterceptor$asx(receiver).$index(receiver, a0);
};
J.$indexSet$ax = function(receiver, a0, a1) {
  if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
J.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return J.getInterceptor$n(receiver).$lt(receiver, a0);
};
J.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return J.getInterceptor$n(receiver).$mul(receiver, a0);
};
J.$or$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver | a0) >>> 0;
  return J.getInterceptor$n(receiver).$or(receiver, a0);
};
J.$shl$n = function(receiver, a0) {
  return J.getInterceptor$n(receiver).$shl(receiver, a0);
};
J.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return J.getInterceptor$n(receiver).$sub(receiver, a0);
};
J._removeChild$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver)._removeChild$1(receiver, a0);
};
J._replaceChild$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
};
J.add$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).add$1(receiver, a0);
};
J.addAll$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).addAll$1(receiver, a0);
};
J.addEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
};
J.append$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).append$1(receiver, a0);
};
J.clear$0$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).clear$0(receiver);
};
J.clone$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).clone$1(receiver, a0);
};
J.close$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).close$0(receiver);
};
J.codeUnitAt$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
};
J.compareTo$1$ns = function(receiver, a0) {
  return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
};
J.contains$1$asx = function(receiver, a0) {
  return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
};
J.contains$2$asx = function(receiver, a0, a1) {
  return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
};
J.createFragment$2$treeSanitizer$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).createFragment$2$treeSanitizer(receiver, a0, a1);
};
J.createFragment$3$treeSanitizer$validator$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).createFragment$3$treeSanitizer$validator(receiver, a0, a1, a2);
};
J.createShadowRoot$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).createShadowRoot$0(receiver);
};
J.elementAt$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
};
J.firstWhere$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).firstWhere$1(receiver, a0);
};
J.focus$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).focus$0(receiver);
};
J.forEach$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
J.get$_children$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$_children(receiver);
};
J.get$_namespaceUri$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$_namespaceUri(receiver);
};
J.get$attributes$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$attributes(receiver);
};
J.get$checked$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$checked(receiver);
};
J.get$children$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$children(receiver);
};
J.get$className$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$className(receiver);
};
J.get$classes$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$classes(receiver);
};
J.get$codeUnits$s = function(receiver) {
  return J.getInterceptor$s(receiver).get$codeUnits(receiver);
};
J.get$data$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$data(receiver);
};
J.get$error$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$error(receiver);
};
J.get$first$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$first(receiver);
};
J.get$firstChild$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$firstChild(receiver);
};
J.get$hash$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$hash(receiver);
};
J.get$hashCode$ = function(receiver) {
  return J.getInterceptor(receiver).get$hashCode(receiver);
};
J.get$host$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$host(receiver);
};
J.get$id$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$id(receiver);
};
J.get$innerHtml$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$innerHtml(receiver);
};
J.get$isEmpty$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
};
J.get$isNotEmpty$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
};
J.get$iterator$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$iterator(receiver);
};
J.get$last$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$last(receiver);
};
J.get$lastChild$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$lastChild(receiver);
};
J.get$length$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$length(receiver);
};
J.get$name$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$name(receiver);
};
J.get$newValue$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$newValue(receiver);
};
J.get$nextNode$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$nextNode(receiver);
};
J.get$nodeType$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$nodeType(receiver);
};
J.get$nodes$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$nodes(receiver);
};
J.get$onChange$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$onChange(receiver);
};
J.get$onClick$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$onClick(receiver);
};
J.get$onInput$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$onInput(receiver);
};
J.get$onMouseOut$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$onMouseOut(receiver);
};
J.get$onMouseOver$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$onMouseOver(receiver);
};
J.get$parent$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$parent(receiver);
};
J.get$parentNode$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$parentNode(receiver);
};
J.get$pathname$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$pathname(receiver);
};
J.get$previousNode$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$previousNode(receiver);
};
J.get$response$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$response(receiver);
};
J.get$reversed$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$reversed(receiver);
};
J.get$src$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$src(receiver);
};
J.get$style$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$style(receiver);
};
J.get$tagName$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$tagName(receiver);
};
J.get$url$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$url(receiver);
};
J.get$value$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$value(receiver);
};
J.get$values$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$values(receiver);
};
J.get$xtag$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$xtag(receiver);
};
J.html$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).html$1(receiver, a0);
};
J.indexOf$1$asx = function(receiver, a0) {
  return J.getInterceptor$asx(receiver).indexOf$1(receiver, a0);
};
J.insert$0$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).insert$0(receiver);
};
J.insertAdjacentElement$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).insertAdjacentElement$2(receiver, a0, a1);
};
J.insertAllBefore$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).insertAllBefore$2(receiver, a0, a1);
};
J.insertBefore$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).insertBefore$2(receiver, a0, a1);
};
J.join$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).join$1(receiver, a0);
};
J.map$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).map$1(receiver, a0);
};
J.matchAsPrefix$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
};
J.matches$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).matches$1(receiver, a0);
};
J.noSuchMethod$1 = function(receiver, a0) {
  return J.getInterceptor(receiver).noSuchMethod$1(receiver, a0);
};
J.open$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).open$0(receiver);
};
J.position$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).position$1(receiver, a0);
};
J.pushState$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).pushState$3(receiver, a0, a1, a2);
};
J.query$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).query$1(receiver, a0);
};
J.queryAll$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).queryAll$1(receiver, a0);
};
J.querySelector$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).querySelector$1(receiver, a0);
};
J.querySelectorAll$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).querySelectorAll$1(receiver, a0);
};
J.remove$0$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).remove$0(receiver);
};
J.remove$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
};
J.removeAt$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).removeAt$1(receiver, a0);
};
J.removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
};
J.replaceAll$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
};
J.replaceWith$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
};
J.send$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).send$1(receiver, a0);
};
J.set$checked$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$checked(receiver, value);
};
J.set$className$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$className(receiver, value);
};
J.set$data$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$data(receiver, value);
};
J.set$display$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$display(receiver, value);
};
J.set$href$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$href(receiver, value);
};
J.set$id$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$id(receiver, value);
};
J.set$innerHtml$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$innerHtml(receiver, value);
};
J.set$length$asx = function(receiver, value) {
  return J.getInterceptor$asx(receiver).set$length(receiver, value);
};
J.set$name$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$name(receiver, value);
};
J.set$src$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$src(receiver, value);
};
J.set$text$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$text(receiver, value);
};
J.set$value$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$value(receiver, value);
};
J.set$xtag$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$xtag(receiver, value);
};
J.show$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).show$0(receiver);
};
J.show$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).show$1(receiver, a0);
};
J.sort$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
};
J.split$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).split$1(receiver, a0);
};
J.startsWith$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
};
J.substring$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).substring$1(receiver, a0);
};
J.substring$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
};
J.toList$0$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).toList$0(receiver);
};
J.toLowerCase$0$s = function(receiver) {
  return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
};
J.toString$0 = function(receiver) {
  return J.getInterceptor(receiver).toString$0(receiver);
};
J.toUpperCase$0$s = function(receiver) {
  return J.getInterceptor$s(receiver).toUpperCase$0(receiver);
};
J.trim$0$s = function(receiver) {
  return J.getInterceptor$s(receiver).trim$0(receiver);
};
Isolate.$lazy($, "_singleton", "Controller__singleton", "get$Controller__singleton", function() {
  var t1, t2, t3;
  t1 = P.List_List(null, null);
  t2 = P.List_List(null, null);
  t3 = $.Observable_$_nextHashCode + 1;
  $.Observable_$_nextHashCode = t3;
  return new B.Controller(new B.Data(t1, t2, new B.User(null, null, false, null, null, null, null, "", null, null, t3)), -1, null, null);
});
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return function() { return this; }();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return H.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return new P.Expando(null);
});
Isolate.$lazy($, "noSuchMethodPattern", "TypeErrorDecoder_noSuchMethodPattern", "get$TypeErrorDecoder_noSuchMethodPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "notClosurePattern", "TypeErrorDecoder_notClosurePattern", "get$TypeErrorDecoder_notClosurePattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ $method$: null, toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "nullCallPattern", "TypeErrorDecoder_nullCallPattern", "get$TypeErrorDecoder_nullCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
});
Isolate.$lazy($, "nullLiteralCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "get$TypeErrorDecoder_nullLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOnNull());
});
Isolate.$lazy($, "undefinedCallPattern", "TypeErrorDecoder_undefinedCallPattern", "get$TypeErrorDecoder_undefinedCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOnUndefined());
});
Isolate.$lazy($, "nullPropertyPattern", "TypeErrorDecoder_nullPropertyPattern", "get$TypeErrorDecoder_nullPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
});
Isolate.$lazy($, "nullLiteralPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOnNull());
});
Isolate.$lazy($, "undefinedPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "get$TypeErrorDecoder_undefinedPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOnUndefined());
});
Isolate.$lazy($, "getTypeNameOf", "getTypeNameOf", "get$getTypeNameOf", function() {
  return H.getFunctionForTypeNameOf();
});
Isolate.$lazy($, "__shadowTemplate", "MenuAccount___shadowTemplate", "get$MenuAccount___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "         <a style=\"overflow:hidden\"></a> \n      ", t1, null);
});
Isolate.$lazy($, "__html1", "AccountOverview___html1", "get$AccountOverview___html1", function() {
  return W.OptionElement_OptionElement$_(null, null, false, false);
});
Isolate.$lazy($, "__shadowTemplate", "AccountOverview___shadowTemplate", "get$AccountOverview___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "        <h2></h2>\n        <div class=\"button-set\" data-role=\"button-set\" style=\"margin-top:10px\">\n          <select class=\"tool-button\" style=\"width:130px; margin-right: 0px;\"></select>\n          <button class=\"tool-button\" style=\"width:100px\"><i class=\"icon-move-vertical\"></i> move</button>\n          <button class=\"tool-button\" style=\"width:100px; margin-left: 7px\"><span><i class=\"icon-remove\"></i> remove</span></button>\n          <button class=\"tool-button\" style=\"width:100px\"><i class=\"icon-pencil\"></i> rename</button>\n        </div>\n        <ul class=\"listview fluid\" style=\"margin-top:20px\">\n        </ul>\n      ", t1, null);
});
Isolate.$lazy($, "__shadowTemplate", "AccountOverviewElement___shadowTemplate", "get$AccountOverviewElement___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "        <p class=\"listviewSelectButtonHaken\"></p>\n        <p class=\"listviewSelectButton\"></p>\n        <div class=\"icon\">\n          <i class=\"icon-locked fg-color-red\"></i>\n        </div>\n        <div class=\"data\">\n          <h4><div style=\"overflow:hidden; float: left;max-width: 140px;\"></div><i class=\"icon-remove\" style=\"width: 13px; height:13px;float: left;margin-left: 10px;\"></i></h4>\n        </div>\n      ", t1, null);
});
Isolate.$lazy($, "__html1", "AddAccountComponent___html1", "get$AddAccountComponent___html1", function() {
  return W.OptionElement_OptionElement$_(null, null, false, false);
});
Isolate.$lazy($, "__shadowTemplate", "AddAccountComponent___shadowTemplate", "get$AddAccountComponent___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "\n  <h2>Add an Account</h2>\n  <div style=\"margin-top: 50px\" class=\"grid\">\n    <div class=\"row\" style=\"width: 550px;\">\n      <div class=\"span2\">Folder</div>\n      <div class=\"span3\">\n        <div class=\"input-control select\">\n          <select></select>\n        </div>\n      </div>\n      <div class=\"span1\">&nbsp;</div>\n    </div>\n    <div class=\"row\" style=\"width: 550px;\">\n      <div class=\"span2\">Accountname</div>\n      <div class=\"span3\">\n        <div class=\"input-control text\">\n          <input maxlength=\"23\" type=\"text\">\n          <button class=\"btn-clear\"></button>\n        </div>\n      </div>\n      <div class=\"span1\">&nbsp;</div>\n    </div>\n    <div class=\"row\" style=\"width: 550px;\">\n      <div class=\"span2\">Username</div>\n      <div class=\"span3\">\n        <div class=\"input-control text\">\n          <input type=\"text\">\n          <button class=\"btn-clear\"></button>\n        </div>\n      </div>\n      <div class=\"span1\">&nbsp;</div>\n    </div>\n    <div id=\"pwRow\" class=\"row\" style=\"width: 550px;\">\n      <div class=\"span2\">Password</div>\n      <div class=\"span3\">\n        <div class=\"input-control text\">\n          <input id=\"pwFieldTest\" type=\"text\">\n          <button class=\"btn-clear\"></button>\n        </div>\n      </div>\n      <div id=\"generatePwCellWrapper\" class=\"span1\" style=\"width: 120px\">\n      <div id=\"generatePwCell\" class=\"toolbar\">\n        <button id=\"generatePw\" style=\"width: 80px\">Generate</button>\n        <button id=\"togglePwSettings\">\n          <i class=\"icon-cog\"></i>\n        </button>\n        <ul id=\"pwSettings\" class=\"dropdown-menu\" style=\"position: absolute; display: none; padding: 5px;\">\n          <li>\n            <div class=\"input-control text\" id=\"pwLengthFieldWrapper\">\n              <button class=\"btn-clear\"></button>\n            </div>\n          </li>\n          <li><label class=\"input-control checkbox\" id=\"littleWrapper\">\n        <span class=\"helper\">Lowercase</span>\n    </label></li>\n    <li><label class=\"input-control checkbox\" id=\"bigWrapper\">\n        \n        <span class=\"helper\">Uppercase</span>\n    </label></li>\n    <li><label class=\"input-control checkbox\" id=\"numWrapper\">\n        \n        <span class=\"helper\">Numbers</span>\n    </label></li>\n    <li><label class=\"input-control checkbox\" id=\"spzWrapper\">\n        \n        <span class=\"helper\">Special character</span>\n    </label></li>\n        </ul>\n      </div>\n      </div>\n    </div>\n    <div class=\"row\" style=\"width: 550px;\">\n      <div class=\"span2\"></div>\n      <div class=\"span3\"></div>\n      <button class=\"span1\" style=\"width: 116px\">Save</button>\n    </div>\n  </div>\n  <div id=\"placeholderElements\" style=\"display: none\">\n  <input type=\"checkbox\" id=\"spz\"><input type=\"checkbox\" id=\"num\"><input type=\"checkbox\" id=\"big\"><input type=\"text\" id=\"pwLengthField\"><input type=\"checkbox\" id=\"little\">\n  </div>\n  ", t1, null);
});
Isolate.$lazy($, "__shadowTemplate", "AppPage___shadowTemplate", "get$AppPage___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, " <div id=\"app\" class=\"page secondary with-sidebar\">\n       <header is=\"app-header\" class=\"page-header\"></header>\n       <section is=\"menu-section\" class=\"page-sidebar\" style=\"margin-top:50px\"></section>\n       <section is=\"page-section\" id=\"mainPageRegion\" class=\"page-region\" style=\"padding: 20px; margin-top:30px\"></section>\n      </div>\n      <div>Styled with <a href=\"http://metroui.org.ua\">Metro UI CSS</a></div>\n  ", t1, null);
});
Isolate.$lazy($, "_toStringList", "IterableMixinWorkaround__toStringList", "get$IterableMixinWorkaround__toStringList", function() {
  return P.List_List(null, null);
});
Isolate.$lazy($, "_stackTraceExpando", "_stackTraceExpando", "get$_stackTraceExpando", function() {
  return new P.Expando("asynchronous error");
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  return P.ListQueue$(null, {func: "void_", void: true});
});
Isolate.$lazy($, "_toStringVisiting", "_toStringVisiting", "get$_toStringVisiting", function() {
  return P.HashSet_HashSet$identity(null);
});
Isolate.$lazy($, "_toStringList", "Maps__toStringList", "get$Maps__toStringList", function() {
  return P.List_List(null, null);
});
Isolate.$lazy($, "_splitRe", "Uri__splitRe", "get$Uri__splitRe", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^(?:([^:/?#]+):)?(?://(?:([^/?#]*)@)?(?:([\\w\\d\\-\\u0100-\\uffff.%]*)|\\[([A-Fa-f0-9:.]*)\\])(?::([0-9]+))?)?([^?#[]+)?(?:\\?([^#]*))?(?:#(.*))?$", false, true, false), null, null);
});
Isolate.$lazy($, "_safeConsole", "Console__safeConsole", "get$Console__safeConsole", function() {
  return new W.Console();
});
Isolate.$lazy($, "_allowedElements", "_Html5NodeValidator__allowedElements", "get$_Html5NodeValidator__allowedElements", function() {
  var t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
  t1.addAll$1(t1, ["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"]);
  return t1;
});
Isolate.$lazy($, "_attributeValidators", "_Html5NodeValidator__attributeValidators", "get$_Html5NodeValidator__attributeValidators", function() {
  return H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
});
Isolate.$lazy($, "context", "context", "get$context", function() {
  return P.JsObject$_fromJs(function() { return this; }());
});
Isolate.$lazy($, "__html1", "MenuFolder___html1", "get$MenuFolder___html1", function() {
  return W.Element_Element$html("<i class=\"icon-folder\"></i>", $.get$nullTreeSanitizer(), null);
});
Isolate.$lazy($, "__html2", "MenuFolder___html2", "get$MenuFolder___html2", function() {
  return W.Element_Element$html("<li class=\"notSortable\"> <a><i class=\"icon-plus-2\"></i> Empty - Click to add</a></li>", $.get$nullTreeSanitizer(), null);
});
Isolate.$lazy($, "__shadowTemplate", "MenuFolder___shadowTemplate", "get$MenuFolder___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "        <a style=\"overflow:hidden\"></a>\n        <ul class=\"sub-menu light sidebar-dropdown-menu opend connectedSortable\" style=\"list-style-type:none\">\n        <template></template>\n        </ul>\n      ", t1, null);
});
Isolate.$lazy($, "__shadowTemplate", "FolderOverview___shadowTemplate", "get$FolderOverview___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "        <h2>Folder-Overview</h2>\n        <ul class=\"listview fluid\" style=\"margin-top:20px\">\n        </ul>\n      ", t1, null);
});
Isolate.$lazy($, "__shadowTemplate", "FolderOverviewElement___shadowTemplate", "get$FolderOverviewElement___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "        <div class=\"icon\">\n          <i class=\"icon-folder fg-color-red\"></i>\n        </div>\n        <div class=\"data\" style=\"float:left; margin-left:20px;\">\n          <h4><div style=\"overflow:hidden; float: left;max-width: 140px; \"></div><i class=\"icon-remove\" style=\"width: 13px; height:13px;float: left;margin-left: 10px;\"></i></h4>\n          <p style=\"margin-top: 10px;float: left;\"></p>\n        </div>\n      ", t1, null);
});
Isolate.$lazy($, "__html1", "HeaderComponent___html1", "get$HeaderComponent___html1", function() {
  return W.Element_Element$html("<i style=\"margin: 5px 4px\" class=\"icon-user-3 fg-color-black\"></i>", $.get$nullTreeSanitizer(), null);
});
Isolate.$lazy($, "__html2", "HeaderComponent___html2", "get$HeaderComponent___html2", function() {
  return W.ImageElement_ImageElement(null, null, null);
});
Isolate.$lazy($, "__shadowTemplate", "HeaderComponent___shadowTemplate", "get$HeaderComponent___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "  <div class=\"page-header-content\">\n    <div class=\"user-login\">\n      <a href=\"#\">\n        <div class=\"name\">\n          <span class=\"first-name\"></span> <span class=\"last-name\"></span>\n        </div>  \n        <div class=\"avatar\">\n           <template></template>\n           <template></template>\n        </div>\n      </a>\n    </div>\n    <h1 class=\"fg-color-blue\">\n      <span>Password4u</span>\n    </h1>\n    <a class=\"back-button big page-back\" style=\"margin-top:18px\"></a>\n  </div>\n  ", t1, null);
});
Isolate.$lazy($, "_loggers", "Logger__loggers", "get$Logger__loggers", function() {
  return H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
});
Isolate.$lazy($, "__shadowTemplate", "MenuComponent___shadowTemplate", "get$MenuComponent___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "         <ul>\n           <li class=\"sticker sticker-color-green\">\n            <a><i class=\"icon-plus\"></i> Add Account</a> \n           </li>\n           <li class=\"\">\n            <a><i class=\"icon-grid-view\"></i> Overview</a> \n           </li>\n           <li class=\"sticker sticker-color-red\">\n            <a><i class=\"icon-key-2\"></i> Logout</a> \n           </li>\n         </ul>\n         <ul id=\"menu\">\n         </ul>\n         <ul>\n           <li class=\"sticker sticker-color-orange dropdown active\" data-role=\"dropdown\">\n            <lable class=\"highlightNone\"><i class=\"icon-plus\"></i> Add Folder</lable>\n            <ul class=\"sub-menu light sidebar-dropdown-menu keep-opened open\">\n              <li>\n                 <div class=\"input-control text\">\n                    <input maxlength=\"25\" id=\"folderName\" type=\"text\">\n                    <button class=\"btn-clear\"></button>\n                 </div>  \n                 <button>Add</button></li>\n            </ul>\n         </li></ul>\n         <ul>\n           <li class=\"sticker sticker-color-blue\">\n           <a><i class=\"icon-cog\"></i> Show Settings</a> \n           </li>\n         </ul>\n      ", t1, null);
});
Isolate.$lazy($, "__shadowTemplate", "PageComponent___shadowTemplate", "get$PageComponent___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "      ", t1, null);
});
Isolate.$lazy($, "__html1", "ShowAccountComponent___html1", "get$ShowAccountComponent___html1", function() {
  return W.OptionElement_OptionElement$_(null, null, false, false);
});
Isolate.$lazy($, "__shadowTemplate", "ShowAccountComponent___shadowTemplate", "get$ShowAccountComponent___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "        <h2></h2>\n        <div class=\"button-set\" data-role=\"button-set\" style=\"margin-top:10px\">\n          <select class=\"tool-button\" style=\"width:130px; margin-right: 0px;\"></select>\n          <button class=\"tool-button\" style=\"width:100px\"><i class=\"icon-move-vertical\"></i> move</button>\n          <button class=\"tool-button\" style=\"width:100px; margin-left: 7px\"><span><i class=\"icon-remove\"></i> remove</span></button>\n          <button class=\"tool-button\" style=\"width:100px\"><i class=\"icon-pencil\"></i> rename</button>\n        </div>\n        <div style=\"margin-top:20px\" class=\"grid\">\n          <div class=\"row\">\n              <div class=\"span2\">Username</div>\n              <div class=\"span3\"></div>\n          </div>\n          <div class=\"row\">\n              <div class=\"span2\">Password</div>\n              <div class=\"span3\" id=\"pw\"></div>\n              <div class=\"span1\"></div>\n          </div>\n          <div class=\"row\">\n              <div class=\"span2\"></div>\n              <div class=\"span3\"></div>\n              <button class=\"span1\" id=\"showAccountButton\">Decrypt</button>\n          </div>\n        </div>\n      ", t1, null);
});
Isolate.$lazy($, "__shadowTemplate", "ShowSettingsComponent___shadowTemplate", "get$ShowSettingsComponent___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "\n  <h2>Settings</h2>\n   <fieldset>\n    <legend>Change Masterpassword</legend>\n      <div style=\"margin-top: 50px\" class=\"grid\">\n        <div class=\"row\" style=\"width: 550px;\">\n          <div class=\"span2\">Enter Masterpassword:</div>\n          <div class=\"span3\">\n            <div class=\"input-control text\">\n              <input maxlength=\"23\" type=\"password\">\n              <button class=\"btn-clear\"></button>\n            </div>\n          </div>\n          <div class=\"span1\">&nbsp;</div>\n        </div>\n        <div class=\"row\" style=\"width: 550px;\">\n          <div class=\"span2\">Enter new Masterpassword:</div>\n          <div class=\"span3\">\n            <div class=\"input-control text\">\n              <input type=\"password\">\n              <button class=\"btn-clear\"></button>\n            </div>\n          </div>\n          <div class=\"span1\">&nbsp;</div>\n        </div>\n        <div id=\"pwRow\" class=\"row\" style=\"width: 550px;\">\n          <div class=\"span2\">Repeat new Masterpassword:</div>\n          <div class=\"span3\">\n            <div class=\"input-control text\">\n              <input id=\"pwFieldTest\" type=\"password\">\n              <button class=\"btn-clear\"></button>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\" style=\"width: 550px;\">\n          <div class=\"span2\"></div>\n          <div class=\"span3\"></div>\n          <button class=\"span1\" style=\"width: 116px\">Save</button>\n        </div>\n      </div>\n    </fieldset>\n  ", t1, null);
});
Isolate.$lazy($, "__shadowTemplate", "StartPage___shadowTemplate", "get$StartPage___shadowTemplate", function() {
  var t1 = $.get$nullTreeSanitizer();
  return J.createFragment$3$treeSanitizer$validator$x(document.body, "         <div id=\"start\" class=\"page secondary\">\n        <div class=\"page-header\">\n          <div class=\"page-header-content\">\n            <div class=\"user-login\">\n              <a>\n                <div id=\"gSignInWrapper\">\n                  <div id=\"customBtn\" class=\"customGPlusSignIn\">\n                    <span class=\"icon\" style=\"padding: 5px\"><img src=\"style/metro/images/gicon.png\"></span> <span class=\"buttonText\">Sign in</span>\n                  </div>\n                </div>\n              </a>\n            </div>\n            <h1>\n              Password4u<small>for your security</small>\n            </h1>\n          </div>\n        </div>\n      \n        <div class=\"page-region\">\n          <div class=\"page-region-content\">\n            \n            <img src=\"style/metro/images/overview3.png\" style=\"float:left\">\n          </div>\n        </div>\n      </div>\n      <div>Styled with <a href=\"http://metroui.org.ua\">Metro UI CSS</a></div>\n  ", t1, null);
});
Isolate.$lazy($, "nullTreeSanitizer", "nullTreeSanitizer", "get$nullTreeSanitizer", function() {
  return new V._NullTreeSanitizer();
});
Isolate.$lazy($, "readCurrentStackTrace", "readCurrentStackTrace", "get$readCurrentStackTrace", function() {
  return new Y.closure();
});
Isolate.$lazy($, "_logger", "_logger", "get$_logger", function() {
  return N.Logger_Logger("watcher");
});
Isolate.$lazy($, "webUIRoot", "webUIRoot", "get$webUIRoot", function() {
  return document.body;
});
Isolate.$lazy($, "onCircularNotifyLimit", "onCircularNotifyLimit", "get$onCircularNotifyLimit", function() {
  return new T.closure0();
});
// Native classes
J.Interceptor["%"] = "ArrayBuffer|DOMImplementation|MediaError|MediaKeyError|Navigator|PositionError|SQLError|SVGAnimatedEnumeration|SVGAnimatedLength|SVGAnimatedNumberList|SVGAnimatedString";


init.functionAliases = {};
;
init.metadata = [,
];
$ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
$ = new Isolate();
function convertToFastObject(properties) {
  function MyClass() {};
  MyClass.prototype = properties;
  new MyClass();
  return properties;
}
A = convertToFastObject(A);
B = convertToFastObject(B);
C = convertToFastObject(C);
D = convertToFastObject(D);
E = convertToFastObject(E);
F = convertToFastObject(F);
G = convertToFastObject(G);
H = convertToFastObject(H);
J = convertToFastObject(J);
K = convertToFastObject(K);
L = convertToFastObject(L);
M = convertToFastObject(M);
N = convertToFastObject(N);
O = convertToFastObject(O);
P = convertToFastObject(P);
Q = convertToFastObject(Q);
R = convertToFastObject(R);
S = convertToFastObject(S);
T = convertToFastObject(T);
U = convertToFastObject(U);
V = convertToFastObject(V);
W = convertToFastObject(W);
X = convertToFastObject(X);
Y = convertToFastObject(Y);
Z = convertToFastObject(Z);
!function() {
  var objectProto = Object.prototype;
  for (var i = 0;; i++) {
    var property = "___dart_dispatch_record_ZxYxX_0_";
    if (i > 0)
      property = rootProperty + "_" + i;
    if (!(property in objectProto))
      return init.dispatchPropertyName = property;
  }
}();
// BEGIN invoke [main].
;(function (callback) {
  if (typeof document === "undefined") {
    callback(null);
    return;
  }
  if (document.currentScript) {
    callback(document.currentScript);
    return;
  }

  var scripts = document.scripts;
  function onLoad(event) {
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].removeEventListener("load", onLoad, false);
    }
    callback(event.target);
  }
  for (var i = 0; i < scripts.length; ++i) {
    scripts[i].addEventListener("load", onLoad, false);
  }
})(function(currentScript) {
  init.currentScript = currentScript;

  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { H.startRootIsolate(Y.main0$closure); });
  } else {
    H.startRootIsolate(Y.main0$closure);
  }
});
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, accessors, cls) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    var reflectable = false;
    if (code == 45) {
      len--;
      code = field.charCodeAt(len - 1);
      field = field.substring(0, len);
      reflectable = true;
    }
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        var property = cls + ".prototype.get$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        var property = cls + ".prototype.set$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields) {
    var accessors = [];
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0)
        str += ", ";
      var field = generateAccessor(fields[i], accessors, cls);
      var parameter = "parameter_" + field;
      str += parameter;
      body += "this." + field + " = " + parameter + ";\n";
    }
    str += ") {\n" + body + "}\n";
    str += cls + ".builtin$cls=\"" + name + "\";\n";
    str += "$desc=$collectedClasses." + cls + ";\n";
    str += "if($desc instanceof Array) $desc = $desc[1];\n";
    str += cls + ".prototype = $desc;\n";
    if (typeof defineClass.name != "string") {
      str += cls + ".name=\"" + cls + "\";\n";
    }
    str += accessors.join("");
    return str;
  }
  var inheritFrom = function() {
    function tmp() {
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    return function(constructor, superConstructor) {
      tmp.prototype = superConstructor.prototype;
      var object = new tmp();
      var properties = constructor.prototype;
      for (var member in properties)
        if (hasOwnProperty.call(properties, member))
          object[member] = properties[member];
      object.constructor = constructor;
      constructor.prototype = object;
      return object;
    };
  }();
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    if (!init.allClasses)
      init.allClasses = {};
    var allClasses = init.allClasses;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (typeof dart_precompiled == "function") {
      var constructors = dart_precompiled(collectedClasses);
    } else {
      var combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
      var constructorsList = [];
    }
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        if (desc instanceof Array)
          desc = desc[1];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        var s = fields.split(";");
        fields = s[1] == "" ? [] : s[1].split(",");
        supr = s[0];
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          if (mixin instanceof Array)
            mixin = mixin[1];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        if (typeof dart_precompiled != "function") {
          combinedConstructorFunction += defineClass(name, cls, fields);
          constructorsList.push(cls);
        }
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    if (typeof dart_precompiled != "function") {
      combinedConstructorFunction += "return [\n  " + constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", combinedConstructorFunction)(collectedClasses);
      combinedConstructorFunction = null;
    }
    for (var i = 0; i < constructors.length; i++) {
      var constructor = constructors[i];
      var cls = constructor.name;
      var desc = collectedClasses[cls];
      var globalObject = isolateProperties;
      if (desc instanceof Array) {
        globalObject = desc[0] || isolateProperties;
        desc = desc[1];
      }
      allClasses[cls] = constructor;
      globalObject[cls] = constructor;
    }
    constructors = null;
    var finishedClasses = {};
    init.interceptorsByTag = {};
    init.leafTags = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = allClasses[cls];
      var superConstructor = allClasses[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = inheritFrom(constructor, superConstructor);
      if (hasOwnProperty.call(prototype, "%")) {
        var nativeSpec = prototype["%"].split(";");
        if (nativeSpec[0]) {
          var tags = nativeSpec[0].split("|");
          for (var i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = true;
          }
        }
        if (nativeSpec[1]) {
          tags = nativeSpec[1].split("|");
          if (nativeSpec[2]) {
            var subclasses = nativeSpec[2].split("|");
            for (var i = 0; i < subclasses.length; i++) {
              var subclass = allClasses[subclasses[i]];
              subclass.$nativeSuperclassTag = tags[0];
            }
          }
          for (i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = false;
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            H.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = function() {
          return this[fieldName];
        };
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    function Isolate() {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var staticName in isolateProperties)
        if (hasOwnProperty.call(isolateProperties, staticName))
          this[staticName] = isolateProperties[staticName];
      function ForceEfficientMap() {
      }
      ForceEfficientMap.prototype = this;
      new ForceEfficientMap();
    }
    Isolate.prototype = oldIsolate.prototype;
    Isolate.prototype.constructor = Isolate;
    Isolate.$isolateProperties = isolateProperties;
    Isolate.$finishClasses = oldIsolate.$finishClasses;
    Isolate.makeConstantList = oldIsolate.makeConstantList;
    return Isolate;
  };
}
})()

//# sourceMappingURL=index.html_bootstrap.dart.js.map
//@ sourceMappingURL=index.html_bootstrap.dart.js.map
